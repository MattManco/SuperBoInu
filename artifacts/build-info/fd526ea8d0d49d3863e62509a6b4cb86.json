{
	"id": "fd526ea8d0d49d3863e62509a6b4cb86",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"SuperBoInu.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\n\r\ncontract SuperBoInu is ERC20, Ownable, Pausable {\r\n\r\n    uint256 public taxRate; // z. B. 2 = 2 %\r\n    address public taxWallet;\r\n    mapping(address => bool) public isFeeExempt;\r\n\r\n    event TaxRateUpdated(uint256 newTaxRate);\r\n    event TaxWalletUpdated(address indexed newTaxWallet);\r\n    event ExemptStatusUpdated(address indexed account, bool isExempt);\r\n\r\n    constructor(\r\n        uint256 initialSupply,\r\n        address _taxWallet,\r\n        uint256 _taxRate\r\n    ) ERC20(\"SuperBoInu\", \"SBI\") Ownable(msg.sender) {\r\n        require(_taxWallet != address(0), \"Invalid tax wallet\");\r\n        require(_taxRate <= 100, \"Tax must be 0-100\");\r\n\r\n        taxWallet = _taxWallet;\r\n        taxRate = _taxRate;\r\n\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    function setTaxRate(uint256 _taxRate) external onlyOwner {\r\n        require(_taxRate <= 100, \"Tax must be 0-100\");\r\n        taxRate = _taxRate;\r\n        emit TaxRateUpdated(_taxRate);\r\n    }\r\n\r\n    function setTaxWallet(address _taxWallet) external onlyOwner {\r\n        require(_taxWallet != address(0), \"Invalid tax wallet\");\r\n        taxWallet = _taxWallet;\r\n        emit TaxWalletUpdated(_taxWallet);\r\n    }\r\n\r\n    function setFeeExempt(address account, bool exempt) external onlyOwner {\r\n        isFeeExempt[account] = exempt;\r\n        emit ExemptStatusUpdated(account, exempt);\r\n    }\r\n\r\n    // Neue Hook-Funktion fÃ¼r OpenZeppelin v5.x\r\n    function _update(address from, address to, uint256 value) internal override {\r\n        // Bei Minting oder Burning kein Tax\r\n        if (from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to]) {\r\n            super._update(from, to, value);\r\n            return;\r\n        }\r\n\r\n        uint256 taxAmount = (value * taxRate) / 100;\r\n        uint256 sendAmount = value - taxAmount;\r\n\r\n        if (taxAmount > 0) {\r\n            super._update(from, taxWallet, taxAmount);\r\n        }\r\n\r\n        super._update(from, to, sendAmount);\r\n    }\r\n\r\n    // Optional: Berechnung vorab ansehen\r\n    function viewTax(uint256 amount) external view returns (uint256 taxAmount, uint256 sendAmount) {\r\n        taxAmount = (amount * taxRate) / 100;\r\n        sendAmount = amount - taxAmount;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`âs `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`âs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`âs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`âs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`âs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 942,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SuperBoInu.sol": {
				"SuperBoInu": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_taxWallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_taxRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isExempt",
									"type": "bool"
								}
							],
							"name": "ExemptStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTaxRate",
									"type": "uint256"
								}
							],
							"name": "TaxRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newTaxWallet",
									"type": "address"
								}
							],
							"name": "TaxWalletUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isFeeExempt",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "exempt",
									"type": "bool"
								}
							],
							"name": "setFeeExempt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_taxRate",
									"type": "uint256"
								}
							],
							"name": "setTaxRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taxWallet",
									"type": "address"
								}
							],
							"name": "setTaxWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "viewTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "taxAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sendAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`âs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SuperBoInu.sol\":228:2442  contract SuperBoInu is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"SuperBoInu.sol\":594:987  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SuperBoInu.sol\":736:746  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5375706572426f496e7500000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5342490000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"SuperBoInu.sol\":789:790  0 */\n  0x00\n    /* \"SuperBoInu.sol\":767:791  _taxWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"SuperBoInu.sol\":767:777  _taxWallet */\n  dup3\n    /* \"SuperBoInu.sol\":767:791  _taxWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"SuperBoInu.sol\":759:814  require(_taxWallet != address(0), \"Invalid tax wallet\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"SuperBoInu.sol\":845:848  100 */\n  0x64\n    /* \"SuperBoInu.sol\":833:841  _taxRate */\n  dup2\n    /* \"SuperBoInu.sol\":833:848  _taxRate <= 100 */\n  gt\n  iszero\n    /* \"SuperBoInu.sol\":825:870  require(_taxRate <= 100, \"Tax must be 0-100\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"SuperBoInu.sol\":895:905  _taxWallet */\n  dup2\n    /* \"SuperBoInu.sol\":883:892  taxWallet */\n  0x07\n  0x00\n    /* \"SuperBoInu.sol\":883:905  taxWallet = _taxWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SuperBoInu.sol\":926:934  _taxRate */\n  dup1\n    /* \"SuperBoInu.sol\":916:923  taxRate */\n  0x06\n    /* \"SuperBoInu.sol\":916:934  taxRate = _taxRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SuperBoInu.sol\":947:979  _mint(msg.sender, initialSupply) */\n  tag_24\n    /* \"SuperBoInu.sol\":953:963  msg.sender */\n  caller\n    /* \"SuperBoInu.sol\":965:978  initialSupply */\n  dup5\n    /* \"SuperBoInu.sol\":947:952  _mint */\n  shl(0x20, tag_25)\n    /* \"SuperBoInu.sol\":947:979  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"SuperBoInu.sol\":594:987  constructor(... */\n  pop\n  pop\n  pop\n    /* \"SuperBoInu.sol\":228:2442  contract SuperBoInu is ERC20, Ownable, Pausable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"SuperBoInu.sol\":1642:2196  function _update(address from, address to, uint256 value) internal override {... */\ntag_32:\n    /* \"SuperBoInu.sol\":1795:1796  0 */\n  0x00\n    /* \"SuperBoInu.sol\":1779:1797  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"SuperBoInu.sol\":1779:1783  from */\n  dup4\n    /* \"SuperBoInu.sol\":1779:1797  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"SuperBoInu.sol\":1779:1817  from == address(0) || to == address(0) */\n  dup1\n  tag_34\n  jumpi\n  pop\n    /* \"SuperBoInu.sol\":1815:1816  0 */\n  0x00\n    /* \"SuperBoInu.sol\":1801:1817  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"SuperBoInu.sol\":1801:1803  to */\n  dup3\n    /* \"SuperBoInu.sol\":1801:1817  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"SuperBoInu.sol\":1779:1817  from == address(0) || to == address(0) */\ntag_34:\n    /* \"SuperBoInu.sol\":1779:1838  from == address(0) || to == address(0) || isFeeExempt[from] */\n  dup1\n  tag_35\n  jumpi\n  pop\n    /* \"SuperBoInu.sol\":1821:1832  isFeeExempt */\n  0x08\n    /* \"SuperBoInu.sol\":1821:1838  isFeeExempt[from] */\n  0x00\n    /* \"SuperBoInu.sol\":1833:1837  from */\n  dup5\n    /* \"SuperBoInu.sol\":1821:1838  isFeeExempt[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"SuperBoInu.sol\":1779:1838  from == address(0) || to == address(0) || isFeeExempt[from] */\ntag_35:\n    /* \"SuperBoInu.sol\":1779:1857  from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to] */\n  dup1\n  tag_36\n  jumpi\n  pop\n    /* \"SuperBoInu.sol\":1842:1853  isFeeExempt */\n  0x08\n    /* \"SuperBoInu.sol\":1842:1857  isFeeExempt[to] */\n  0x00\n    /* \"SuperBoInu.sol\":1854:1856  to */\n  dup4\n    /* \"SuperBoInu.sol\":1842:1857  isFeeExempt[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"SuperBoInu.sol\":1779:1857  from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to] */\ntag_36:\n    /* \"SuperBoInu.sol\":1775:1937  if (from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to]) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"SuperBoInu.sol\":1874:1904  super._update(from, to, value) */\n  tag_38\n    /* \"SuperBoInu.sol\":1888:1892  from */\n  dup4\n    /* \"SuperBoInu.sol\":1894:1896  to */\n  dup4\n    /* \"SuperBoInu.sol\":1898:1903  value */\n  dup4\n    /* \"SuperBoInu.sol\":1874:1887  super._update */\n  shl(0x20, tag_39)\n    /* \"SuperBoInu.sol\":1874:1904  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"SuperBoInu.sol\":1919:1926  return; */\n  jump(tag_33)\n    /* \"SuperBoInu.sol\":1775:1937  if (from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to]) {... */\ntag_37:\n    /* \"SuperBoInu.sol\":1949:1966  uint256 taxAmount */\n  0x00\n    /* \"SuperBoInu.sol\":1989:1992  100 */\n  0x64\n    /* \"SuperBoInu.sol\":1978:1985  taxRate */\n  sload(0x06)\n    /* \"SuperBoInu.sol\":1970:1975  value */\n  dup4\n    /* \"SuperBoInu.sol\":1970:1985  value * taxRate */\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"SuperBoInu.sol\":1969:1992  (value * taxRate) / 100 */\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"SuperBoInu.sol\":1949:1992  uint256 taxAmount = (value * taxRate) / 100 */\n  swap1\n  pop\n    /* \"SuperBoInu.sol\":2003:2021  uint256 sendAmount */\n  0x00\n    /* \"SuperBoInu.sol\":2032:2041  taxAmount */\n  dup2\n    /* \"SuperBoInu.sol\":2024:2029  value */\n  dup4\n    /* \"SuperBoInu.sol\":2024:2041  value - taxAmount */\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"SuperBoInu.sol\":2003:2041  uint256 sendAmount = value - taxAmount */\n  swap1\n  pop\n    /* \"SuperBoInu.sol\":2070:2071  0 */\n  0x00\n    /* \"SuperBoInu.sol\":2058:2067  taxAmount */\n  dup3\n    /* \"SuperBoInu.sol\":2058:2071  taxAmount > 0 */\n  gt\n    /* \"SuperBoInu.sol\":2054:2141  if (taxAmount > 0) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"SuperBoInu.sol\":2088:2129  super._update(from, taxWallet, taxAmount) */\n  tag_47\n    /* \"SuperBoInu.sol\":2102:2106  from */\n  dup6\n    /* \"SuperBoInu.sol\":2108:2117  taxWallet */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"SuperBoInu.sol\":2119:2128  taxAmount */\n  dup5\n    /* \"SuperBoInu.sol\":2088:2101  super._update */\n  shl(0x20, tag_39)\n    /* \"SuperBoInu.sol\":2088:2129  super._update(from, taxWallet, taxAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"SuperBoInu.sol\":2054:2141  if (taxAmount > 0) {... */\ntag_46:\n    /* \"SuperBoInu.sol\":2153:2188  super._update(from, to, sendAmount) */\n  tag_48\n    /* \"SuperBoInu.sol\":2167:2171  from */\n  dup6\n    /* \"SuperBoInu.sol\":2173:2175  to */\n  dup6\n    /* \"SuperBoInu.sol\":2177:2187  sendAmount */\n  dup4\n    /* \"SuperBoInu.sol\":2153:2166  super._update */\n  shl(0x20, tag_39)\n    /* \"SuperBoInu.sol\":2153:2188  super._update(from, to, sendAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"SuperBoInu.sol\":1718:2196  {... */\n  pop\n  pop\n    /* \"SuperBoInu.sol\":1642:2196  function _update(address from, address to, uint256 value) internal override {... */\ntag_33:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_51\n  swap2\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_53)\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_55\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_56\n  jump\t// in\ntag_55:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_58)\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_59\n  swap2\n  swap1\n  tag_60\n  jump\t// in\ntag_59:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_62:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_64:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_65:\n    /* \"#utility.yul\":490:514   */\n  tag_105\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_64\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_106:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_66:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_108\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_65\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_67:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_68:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_111\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_67\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_69:\n    /* \"#utility.yul\":1001:1025   */\n  tag_113\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_68\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_114:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_70:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_116\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_69\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_119\n  tag_62\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1326:1445   */\ntag_118:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_120\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_66\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_121\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_70\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_122\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_66\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1973   */\ntag_71:\n    /* \"#utility.yul\":1926:1932   */\n  0x00\n    /* \"#utility.yul\":1960:1965   */\n  dup2\n    /* \"#utility.yul\":1954:1966   */\n  mload\n    /* \"#utility.yul\":1944:1966   */\n  swap1\n  pop\n    /* \"#utility.yul\":1874:1973   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1979:2159   */\ntag_72:\n    /* \"#utility.yul\":2027:2104   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2024:2025   */\n  0x00\n    /* \"#utility.yul\":2017:2105   */\n  mstore\n    /* \"#utility.yul\":2124:2128   */\n  0x41\n    /* \"#utility.yul\":2121:2122   */\n  0x04\n    /* \"#utility.yul\":2114:2129   */\n  mstore\n    /* \"#utility.yul\":2148:2152   */\n  0x24\n    /* \"#utility.yul\":2145:2146   */\n  0x00\n    /* \"#utility.yul\":2138:2153   */\n  revert\n    /* \"#utility.yul\":2165:2345   */\ntag_73:\n    /* \"#utility.yul\":2213:2290   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2203:2291   */\n  mstore\n    /* \"#utility.yul\":2310:2314   */\n  0x22\n    /* \"#utility.yul\":2307:2308   */\n  0x04\n    /* \"#utility.yul\":2300:2315   */\n  mstore\n    /* \"#utility.yul\":2334:2338   */\n  0x24\n    /* \"#utility.yul\":2331:2332   */\n  0x00\n    /* \"#utility.yul\":2324:2339   */\n  revert\n    /* \"#utility.yul\":2351:2671   */\ntag_74:\n    /* \"#utility.yul\":2395:2401   */\n  0x00\n    /* \"#utility.yul\":2432:2433   */\n  0x02\n    /* \"#utility.yul\":2426:2430   */\n  dup3\n    /* \"#utility.yul\":2422:2434   */\n  div\n    /* \"#utility.yul\":2412:2434   */\n  swap1\n  pop\n    /* \"#utility.yul\":2479:2480   */\n  0x01\n    /* \"#utility.yul\":2473:2477   */\n  dup3\n    /* \"#utility.yul\":2469:2481   */\n  and\n    /* \"#utility.yul\":2500:2518   */\n  dup1\n    /* \"#utility.yul\":2490:2571   */\n  tag_127\n  jumpi\n    /* \"#utility.yul\":2556:2560   */\n  0x7f\n    /* \"#utility.yul\":2548:2554   */\n  dup3\n    /* \"#utility.yul\":2544:2561   */\n  and\n    /* \"#utility.yul\":2534:2561   */\n  swap2\n  pop\n    /* \"#utility.yul\":2490:2571   */\ntag_127:\n    /* \"#utility.yul\":2618:2620   */\n  0x20\n    /* \"#utility.yul\":2610:2616   */\n  dup3\n    /* \"#utility.yul\":2607:2621   */\n  lt\n    /* \"#utility.yul\":2587:2605   */\n  dup2\n    /* \"#utility.yul\":2584:2622   */\n  sub\n    /* \"#utility.yul\":2581:2665   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2637:2655   */\n  tag_129\n  tag_73\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2581:2665   */\ntag_128:\n    /* \"#utility.yul\":2402:2671   */\n  pop\n    /* \"#utility.yul\":2351:2671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2818   */\ntag_75:\n    /* \"#utility.yul\":2726:2730   */\n  0x00\n    /* \"#utility.yul\":2749:2752   */\n  dup2\n    /* \"#utility.yul\":2741:2752   */\n  swap1\n  pop\n    /* \"#utility.yul\":2772:2775   */\n  dup2\n    /* \"#utility.yul\":2769:2770   */\n  0x00\n    /* \"#utility.yul\":2762:2776   */\n  mstore\n    /* \"#utility.yul\":2806:2810   */\n  0x20\n    /* \"#utility.yul\":2803:2804   */\n  0x00\n    /* \"#utility.yul\":2793:2811   */\n  keccak256\n    /* \"#utility.yul\":2785:2811   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2824:2917   */\ntag_76:\n    /* \"#utility.yul\":2861:2867   */\n  0x00\n    /* \"#utility.yul\":2908:2910   */\n  0x20\n    /* \"#utility.yul\":2903:2905   */\n  0x1f\n    /* \"#utility.yul\":2896:2901   */\n  dup4\n    /* \"#utility.yul\":2892:2906   */\n  add\n    /* \"#utility.yul\":2888:2911   */\n  div\n    /* \"#utility.yul\":2878:2911   */\n  swap1\n  pop\n    /* \"#utility.yul\":2824:2917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2923:3030   */\ntag_77:\n    /* \"#utility.yul\":2967:2975   */\n  0x00\n    /* \"#utility.yul\":3017:3022   */\n  dup3\n    /* \"#utility.yul\":3011:3015   */\n  dup3\n    /* \"#utility.yul\":3007:3023   */\n  shl\n    /* \"#utility.yul\":2986:3023   */\n  swap1\n  pop\n    /* \"#utility.yul\":2923:3030   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3036:3429   */\ntag_78:\n    /* \"#utility.yul\":3105:3111   */\n  0x00\n    /* \"#utility.yul\":3155:3156   */\n  0x08\n    /* \"#utility.yul\":3143:3153   */\n  dup4\n    /* \"#utility.yul\":3139:3157   */\n  mul\n    /* \"#utility.yul\":3178:3275   */\n  tag_134\n    /* \"#utility.yul\":3208:3274   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3197:3206   */\n  dup3\n    /* \"#utility.yul\":3178:3275   */\n  tag_77\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3296:3335   */\n  tag_135\n    /* \"#utility.yul\":3326:3334   */\n  dup7\n    /* \"#utility.yul\":3315:3324   */\n  dup4\n    /* \"#utility.yul\":3296:3335   */\n  tag_77\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3284:3335   */\n  swap6\n  pop\n    /* \"#utility.yul\":3368:3372   */\n  dup1\n    /* \"#utility.yul\":3364:3373   */\n  not\n    /* \"#utility.yul\":3357:3362   */\n  dup5\n    /* \"#utility.yul\":3353:3374   */\n  and\n    /* \"#utility.yul\":3344:3374   */\n  swap4\n  pop\n    /* \"#utility.yul\":3417:3421   */\n  dup1\n    /* \"#utility.yul\":3407:3415   */\n  dup7\n    /* \"#utility.yul\":3403:3422   */\n  and\n    /* \"#utility.yul\":3396:3401   */\n  dup5\n    /* \"#utility.yul\":3393:3423   */\n  or\n    /* \"#utility.yul\":3383:3423   */\n  swap3\n  pop\n    /* \"#utility.yul\":3112:3429   */\n  pop\n  pop\n    /* \"#utility.yul\":3036:3429   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3435:3495   */\ntag_79:\n    /* \"#utility.yul\":3463:3466   */\n  0x00\n    /* \"#utility.yul\":3484:3489   */\n  dup2\n    /* \"#utility.yul\":3477:3489   */\n  swap1\n  pop\n    /* \"#utility.yul\":3435:3495   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3501:3643   */\ntag_80:\n    /* \"#utility.yul\":3551:3560   */\n  0x00\n    /* \"#utility.yul\":3584:3637   */\n  tag_138\n    /* \"#utility.yul\":3602:3636   */\n  tag_139\n    /* \"#utility.yul\":3611:3635   */\n  tag_140\n    /* \"#utility.yul\":3629:3634   */\n  dup5\n    /* \"#utility.yul\":3611:3635   */\n  tag_64\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3602:3636   */\n  tag_79\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3584:3637   */\n  tag_64\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3571:3637   */\n  swap1\n  pop\n    /* \"#utility.yul\":3501:3643   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3649:3724   */\ntag_81:\n    /* \"#utility.yul\":3692:3695   */\n  0x00\n    /* \"#utility.yul\":3713:3718   */\n  dup2\n    /* \"#utility.yul\":3706:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3649:3724   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3730:3999   */\ntag_82:\n    /* \"#utility.yul\":3840:3879   */\n  tag_143\n    /* \"#utility.yul\":3871:3878   */\n  dup4\n    /* \"#utility.yul\":3840:3879   */\n  tag_80\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3901:3992   */\n  tag_144\n    /* \"#utility.yul\":3950:3991   */\n  tag_145\n    /* \"#utility.yul\":3974:3990   */\n  dup3\n    /* \"#utility.yul\":3950:3991   */\n  tag_81\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3942:3948   */\n  dup5\n    /* \"#utility.yul\":3935:3939   */\n  dup5\n    /* \"#utility.yul\":3929:3940   */\n  sload\n    /* \"#utility.yul\":3901:3992   */\n  tag_78\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3895:3899   */\n  dup3\n    /* \"#utility.yul\":3888:3993   */\n  sstore\n    /* \"#utility.yul\":3806:3999   */\n  pop\n    /* \"#utility.yul\":3730:3999   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4005:4078   */\ntag_83:\n    /* \"#utility.yul\":4050:4053   */\n  0x00\n    /* \"#utility.yul\":4071:4072   */\n  0x00\n    /* \"#utility.yul\":4064:4072   */\n  swap1\n  pop\n    /* \"#utility.yul\":4005:4078   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4084:4273   */\ntag_84:\n    /* \"#utility.yul\":4161:4193   */\n  tag_148\n  tag_83\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4202:4267   */\n  tag_149\n    /* \"#utility.yul\":4260:4266   */\n  dup2\n    /* \"#utility.yul\":4252:4258   */\n  dup5\n    /* \"#utility.yul\":4246:4250   */\n  dup5\n    /* \"#utility.yul\":4202:4267   */\n  tag_82\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4137:4273   */\n  pop\n    /* \"#utility.yul\":4084:4273   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4279:4465   */\ntag_85:\n    /* \"#utility.yul\":4339:4459   */\ntag_151:\n    /* \"#utility.yul\":4356:4359   */\n  dup2\n    /* \"#utility.yul\":4349:4354   */\n  dup2\n    /* \"#utility.yul\":4346:4360   */\n  lt\n    /* \"#utility.yul\":4339:4459   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":4410:4449   */\n  tag_154\n    /* \"#utility.yul\":4447:4448   */\n  0x00\n    /* \"#utility.yul\":4440:4445   */\n  dup3\n    /* \"#utility.yul\":4410:4449   */\n  tag_84\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4383:4384   */\n  0x01\n    /* \"#utility.yul\":4376:4381   */\n  dup2\n    /* \"#utility.yul\":4372:4385   */\n  add\n    /* \"#utility.yul\":4363:4385   */\n  swap1\n  pop\n    /* \"#utility.yul\":4339:4459   */\n  jump(tag_151)\ntag_153:\n    /* \"#utility.yul\":4279:4465   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4471:5014   */\ntag_86:\n    /* \"#utility.yul\":4572:4574   */\n  0x1f\n    /* \"#utility.yul\":4567:4570   */\n  dup3\n    /* \"#utility.yul\":4564:4575   */\n  gt\n    /* \"#utility.yul\":4561:5007   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":4606:4644   */\n  tag_157\n    /* \"#utility.yul\":4638:4643   */\n  dup2\n    /* \"#utility.yul\":4606:4644   */\n  tag_75\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4690:4719   */\n  tag_158\n    /* \"#utility.yul\":4708:4718   */\n  dup5\n    /* \"#utility.yul\":4690:4719   */\n  tag_76\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":4680:4688   */\n  dup2\n    /* \"#utility.yul\":4676:4720   */\n  add\n    /* \"#utility.yul\":4873:4875   */\n  0x20\n    /* \"#utility.yul\":4861:4871   */\n  dup6\n    /* \"#utility.yul\":4858:4876   */\n  lt\n    /* \"#utility.yul\":4855:4904   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":4894:4902   */\n  dup2\n    /* \"#utility.yul\":4879:4902   */\n  swap1\n  pop\n    /* \"#utility.yul\":4855:4904   */\ntag_159:\n    /* \"#utility.yul\":4917:4997   */\n  tag_160\n    /* \"#utility.yul\":4973:4995   */\n  tag_161\n    /* \"#utility.yul\":4991:4994   */\n  dup6\n    /* \"#utility.yul\":4973:4995   */\n  tag_76\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":4963:4971   */\n  dup4\n    /* \"#utility.yul\":4959:4996   */\n  add\n    /* \"#utility.yul\":4946:4957   */\n  dup3\n    /* \"#utility.yul\":4917:4997   */\n  tag_85\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":4576:5007   */\n  pop\n  pop\n    /* \"#utility.yul\":4561:5007   */\ntag_156:\n    /* \"#utility.yul\":4471:5014   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5020:5137   */\ntag_87:\n    /* \"#utility.yul\":5074:5082   */\n  0x00\n    /* \"#utility.yul\":5124:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5122   */\n  dup3\n    /* \"#utility.yul\":5114:5130   */\n  shr\n    /* \"#utility.yul\":5093:5130   */\n  swap1\n  pop\n    /* \"#utility.yul\":5020:5137   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5143:5312   */\ntag_88:\n    /* \"#utility.yul\":5187:5193   */\n  0x00\n    /* \"#utility.yul\":5220:5271   */\n  tag_164\n    /* \"#utility.yul\":5268:5269   */\n  0x00\n    /* \"#utility.yul\":5264:5270   */\n  not\n    /* \"#utility.yul\":5256:5261   */\n  dup5\n    /* \"#utility.yul\":5253:5254   */\n  0x08\n    /* \"#utility.yul\":5249:5262   */\n  mul\n    /* \"#utility.yul\":5220:5271   */\n  tag_87\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5216:5272   */\n  not\n    /* \"#utility.yul\":5301:5305   */\n  dup1\n    /* \"#utility.yul\":5295:5299   */\n  dup4\n    /* \"#utility.yul\":5291:5306   */\n  and\n    /* \"#utility.yul\":5281:5306   */\n  swap2\n  pop\n    /* \"#utility.yul\":5194:5312   */\n  pop\n    /* \"#utility.yul\":5143:5312   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5317:5612   */\ntag_89:\n    /* \"#utility.yul\":5393:5397   */\n  0x00\n    /* \"#utility.yul\":5539:5568   */\n  tag_166\n    /* \"#utility.yul\":5564:5567   */\n  dup4\n    /* \"#utility.yul\":5558:5562   */\n  dup4\n    /* \"#utility.yul\":5539:5568   */\n  tag_88\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5531:5568   */\n  swap2\n  pop\n    /* \"#utility.yul\":5601:5604   */\n  dup3\n    /* \"#utility.yul\":5598:5599   */\n  0x02\n    /* \"#utility.yul\":5594:5605   */\n  mul\n    /* \"#utility.yul\":5588:5592   */\n  dup3\n    /* \"#utility.yul\":5585:5606   */\n  or\n    /* \"#utility.yul\":5577:5606   */\n  swap1\n  pop\n    /* \"#utility.yul\":5317:5612   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5617:7012   */\ntag_9:\n    /* \"#utility.yul\":5734:5771   */\n  tag_168\n    /* \"#utility.yul\":5767:5770   */\n  dup3\n    /* \"#utility.yul\":5734:5771   */\n  tag_71\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5836:5854   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5828:5834   */\n  dup2\n    /* \"#utility.yul\":5825:5855   */\n  gt\n    /* \"#utility.yul\":5822:5878   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":5858:5876   */\n  tag_170\n  tag_72\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5822:5878   */\ntag_169:\n    /* \"#utility.yul\":5902:5940   */\n  tag_171\n    /* \"#utility.yul\":5934:5938   */\n  dup3\n    /* \"#utility.yul\":5928:5939   */\n  sload\n    /* \"#utility.yul\":5902:5940   */\n  tag_74\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5987:6054   */\n  tag_172\n    /* \"#utility.yul\":6047:6053   */\n  dup3\n    /* \"#utility.yul\":6039:6045   */\n  dup3\n    /* \"#utility.yul\":6033:6037   */\n  dup6\n    /* \"#utility.yul\":5987:6054   */\n  tag_86\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6081:6082   */\n  0x00\n    /* \"#utility.yul\":6105:6109   */\n  0x20\n    /* \"#utility.yul\":6092:6109   */\n  swap1\n  pop\n    /* \"#utility.yul\":6137:6139   */\n  0x1f\n    /* \"#utility.yul\":6129:6135   */\n  dup4\n    /* \"#utility.yul\":6126:6140   */\n  gt\n    /* \"#utility.yul\":6154:6155   */\n  0x01\n    /* \"#utility.yul\":6149:6767   */\n  dup2\n  eq\n  tag_174\n  jumpi\n    /* \"#utility.yul\":6811:6812   */\n  0x00\n    /* \"#utility.yul\":6828:6834   */\n  dup5\n    /* \"#utility.yul\":6825:6902   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6877:6886   */\n  dup3\n    /* \"#utility.yul\":6872:6875   */\n  dup8\n    /* \"#utility.yul\":6868:6887   */\n  add\n    /* \"#utility.yul\":6862:6888   */\n  mload\n    /* \"#utility.yul\":6853:6888   */\n  swap1\n  pop\n    /* \"#utility.yul\":6825:6902   */\ntag_175:\n    /* \"#utility.yul\":6928:6995   */\n  tag_176\n    /* \"#utility.yul\":6988:6994   */\n  dup6\n    /* \"#utility.yul\":6981:6986   */\n  dup3\n    /* \"#utility.yul\":6928:6995   */\n  tag_89\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6922:6926   */\n  dup7\n    /* \"#utility.yul\":6915:6996   */\n  sstore\n    /* \"#utility.yul\":6784:7006   */\n  pop\n    /* \"#utility.yul\":6119:7006   */\n  jump(tag_173)\n    /* \"#utility.yul\":6149:6767   */\ntag_174:\n    /* \"#utility.yul\":6201:6205   */\n  0x1f\n    /* \"#utility.yul\":6197:6206   */\n  not\n    /* \"#utility.yul\":6189:6195   */\n  dup5\n    /* \"#utility.yul\":6185:6207   */\n  and\n    /* \"#utility.yul\":6235:6272   */\n  tag_177\n    /* \"#utility.yul\":6267:6271   */\n  dup7\n    /* \"#utility.yul\":6235:6272   */\n  tag_75\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6294:6295   */\n  0x00\n    /* \"#utility.yul\":6308:6516   */\ntag_178:\n    /* \"#utility.yul\":6322:6329   */\n  dup3\n    /* \"#utility.yul\":6319:6320   */\n  dup2\n    /* \"#utility.yul\":6316:6330   */\n  lt\n    /* \"#utility.yul\":6308:6516   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":6401:6410   */\n  dup5\n    /* \"#utility.yul\":6396:6399   */\n  dup10\n    /* \"#utility.yul\":6392:6411   */\n  add\n    /* \"#utility.yul\":6386:6412   */\n  mload\n    /* \"#utility.yul\":6378:6384   */\n  dup3\n    /* \"#utility.yul\":6371:6413   */\n  sstore\n    /* \"#utility.yul\":6452:6453   */\n  0x01\n    /* \"#utility.yul\":6444:6450   */\n  dup3\n    /* \"#utility.yul\":6440:6454   */\n  add\n    /* \"#utility.yul\":6430:6454   */\n  swap2\n  pop\n    /* \"#utility.yul\":6499:6501   */\n  0x20\n    /* \"#utility.yul\":6488:6497   */\n  dup6\n    /* \"#utility.yul\":6484:6502   */\n  add\n    /* \"#utility.yul\":6471:6502   */\n  swap5\n  pop\n    /* \"#utility.yul\":6345:6349   */\n  0x20\n    /* \"#utility.yul\":6342:6343   */\n  dup2\n    /* \"#utility.yul\":6338:6350   */\n  add\n    /* \"#utility.yul\":6333:6350   */\n  swap1\n  pop\n    /* \"#utility.yul\":6308:6516   */\n  jump(tag_178)\ntag_180:\n    /* \"#utility.yul\":6544:6550   */\n  dup7\n    /* \"#utility.yul\":6535:6542   */\n  dup4\n    /* \"#utility.yul\":6532:6551   */\n  lt\n    /* \"#utility.yul\":6529:6708   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":6602:6611   */\n  dup5\n    /* \"#utility.yul\":6597:6600   */\n  dup10\n    /* \"#utility.yul\":6593:6612   */\n  add\n    /* \"#utility.yul\":6587:6613   */\n  mload\n    /* \"#utility.yul\":6645:6693   */\n  tag_182\n    /* \"#utility.yul\":6687:6691   */\n  0x1f\n    /* \"#utility.yul\":6679:6685   */\n  dup10\n    /* \"#utility.yul\":6675:6692   */\n  and\n    /* \"#utility.yul\":6664:6673   */\n  dup3\n    /* \"#utility.yul\":6645:6693   */\n  tag_88\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6637:6643   */\n  dup4\n    /* \"#utility.yul\":6630:6694   */\n  sstore\n    /* \"#utility.yul\":6552:6708   */\n  pop\n    /* \"#utility.yul\":6529:6708   */\ntag_181:\n    /* \"#utility.yul\":6754:6755   */\n  0x01\n    /* \"#utility.yul\":6750:6751   */\n  0x02\n    /* \"#utility.yul\":6742:6748   */\n  dup9\n    /* \"#utility.yul\":6738:6752   */\n  mul\n    /* \"#utility.yul\":6734:6756   */\n  add\n    /* \"#utility.yul\":6728:6732   */\n  dup9\n    /* \"#utility.yul\":6721:6757   */\n  sstore\n    /* \"#utility.yul\":6156:6767   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6119:7006   */\ntag_173:\n  pop\n    /* \"#utility.yul\":5709:7012   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5617:7012   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7018:7136   */\ntag_90:\n    /* \"#utility.yul\":7105:7129   */\n  tag_184\n    /* \"#utility.yul\":7123:7128   */\n  dup2\n    /* \"#utility.yul\":7105:7129   */\n  tag_68\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7100:7103   */\n  dup3\n    /* \"#utility.yul\":7093:7130   */\n  mstore\n    /* \"#utility.yul\":7018:7136   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7142:7364   */\ntag_14:\n    /* \"#utility.yul\":7235:7239   */\n  0x00\n    /* \"#utility.yul\":7273:7275   */\n  0x20\n    /* \"#utility.yul\":7262:7271   */\n  dup3\n    /* \"#utility.yul\":7258:7276   */\n  add\n    /* \"#utility.yul\":7250:7276   */\n  swap1\n  pop\n    /* \"#utility.yul\":7286:7357   */\n  tag_186\n    /* \"#utility.yul\":7354:7355   */\n  0x00\n    /* \"#utility.yul\":7343:7352   */\n  dup4\n    /* \"#utility.yul\":7339:7356   */\n  add\n    /* \"#utility.yul\":7330:7336   */\n  dup5\n    /* \"#utility.yul\":7286:7357   */\n  tag_90\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7142:7364   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7370:7539   */\ntag_91:\n    /* \"#utility.yul\":7454:7465   */\n  0x00\n    /* \"#utility.yul\":7488:7494   */\n  dup3\n    /* \"#utility.yul\":7483:7486   */\n  dup3\n    /* \"#utility.yul\":7476:7495   */\n  mstore\n    /* \"#utility.yul\":7528:7532   */\n  0x20\n    /* \"#utility.yul\":7523:7526   */\n  dup3\n    /* \"#utility.yul\":7519:7533   */\n  add\n    /* \"#utility.yul\":7504:7533   */\n  swap1\n  pop\n    /* \"#utility.yul\":7370:7539   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7545:7713   */\ntag_92:\n    /* \"#utility.yul\":7685:7705   */\n  0x496e76616c6964207461782077616c6c65740000000000000000000000000000\n    /* \"#utility.yul\":7681:7682   */\n  0x00\n    /* \"#utility.yul\":7673:7679   */\n  dup3\n    /* \"#utility.yul\":7669:7683   */\n  add\n    /* \"#utility.yul\":7662:7706   */\n  mstore\n    /* \"#utility.yul\":7545:7713   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7719:8085   */\ntag_93:\n    /* \"#utility.yul\":7861:7864   */\n  0x00\n    /* \"#utility.yul\":7882:7949   */\n  tag_190\n    /* \"#utility.yul\":7946:7948   */\n  0x12\n    /* \"#utility.yul\":7941:7944   */\n  dup4\n    /* \"#utility.yul\":7882:7949   */\n  tag_91\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7875:7949   */\n  swap2\n  pop\n    /* \"#utility.yul\":7958:8051   */\n  tag_191\n    /* \"#utility.yul\":8047:8050   */\n  dup3\n    /* \"#utility.yul\":7958:8051   */\n  tag_92\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8076:8078   */\n  0x20\n    /* \"#utility.yul\":8071:8074   */\n  dup3\n    /* \"#utility.yul\":8067:8079   */\n  add\n    /* \"#utility.yul\":8060:8079   */\n  swap1\n  pop\n    /* \"#utility.yul\":7719:8085   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8091:8510   */\ntag_20:\n    /* \"#utility.yul\":8257:8261   */\n  0x00\n    /* \"#utility.yul\":8295:8297   */\n  0x20\n    /* \"#utility.yul\":8284:8293   */\n  dup3\n    /* \"#utility.yul\":8280:8298   */\n  add\n    /* \"#utility.yul\":8272:8298   */\n  swap1\n  pop\n    /* \"#utility.yul\":8344:8353   */\n  dup2\n    /* \"#utility.yul\":8338:8342   */\n  dup2\n    /* \"#utility.yul\":8334:8354   */\n  sub\n    /* \"#utility.yul\":8330:8331   */\n  0x00\n    /* \"#utility.yul\":8319:8328   */\n  dup4\n    /* \"#utility.yul\":8315:8332   */\n  add\n    /* \"#utility.yul\":8308:8355   */\n  mstore\n    /* \"#utility.yul\":8372:8503   */\n  tag_193\n    /* \"#utility.yul\":8498:8502   */\n  dup2\n    /* \"#utility.yul\":8372:8503   */\n  tag_93\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8364:8503   */\n  swap1\n  pop\n    /* \"#utility.yul\":8091:8510   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8516:8683   */\ntag_94:\n    /* \"#utility.yul\":8656:8675   */\n  0x546178206d75737420626520302d313030000000000000000000000000000000\n    /* \"#utility.yul\":8652:8653   */\n  0x00\n    /* \"#utility.yul\":8644:8650   */\n  dup3\n    /* \"#utility.yul\":8640:8654   */\n  add\n    /* \"#utility.yul\":8633:8676   */\n  mstore\n    /* \"#utility.yul\":8516:8683   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8689:9055   */\ntag_95:\n    /* \"#utility.yul\":8831:8834   */\n  0x00\n    /* \"#utility.yul\":8852:8919   */\n  tag_196\n    /* \"#utility.yul\":8916:8918   */\n  0x11\n    /* \"#utility.yul\":8911:8914   */\n  dup4\n    /* \"#utility.yul\":8852:8919   */\n  tag_91\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8845:8919   */\n  swap2\n  pop\n    /* \"#utility.yul\":8928:9021   */\n  tag_197\n    /* \"#utility.yul\":9017:9020   */\n  dup3\n    /* \"#utility.yul\":8928:9021   */\n  tag_94\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9046:9048   */\n  0x20\n    /* \"#utility.yul\":9041:9044   */\n  dup3\n    /* \"#utility.yul\":9037:9049   */\n  add\n    /* \"#utility.yul\":9030:9049   */\n  swap1\n  pop\n    /* \"#utility.yul\":8689:9055   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9061:9480   */\ntag_23:\n    /* \"#utility.yul\":9227:9231   */\n  0x00\n    /* \"#utility.yul\":9265:9267   */\n  0x20\n    /* \"#utility.yul\":9254:9263   */\n  dup3\n    /* \"#utility.yul\":9250:9268   */\n  add\n    /* \"#utility.yul\":9242:9268   */\n  swap1\n  pop\n    /* \"#utility.yul\":9314:9323   */\n  dup2\n    /* \"#utility.yul\":9308:9312   */\n  dup2\n    /* \"#utility.yul\":9304:9324   */\n  sub\n    /* \"#utility.yul\":9300:9301   */\n  0x00\n    /* \"#utility.yul\":9289:9298   */\n  dup4\n    /* \"#utility.yul\":9285:9302   */\n  add\n    /* \"#utility.yul\":9278:9325   */\n  mstore\n    /* \"#utility.yul\":9342:9473   */\n  tag_199\n    /* \"#utility.yul\":9468:9472   */\n  dup2\n    /* \"#utility.yul\":9342:9473   */\n  tag_95\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9334:9473   */\n  swap1\n  pop\n    /* \"#utility.yul\":9061:9480   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9486:9666   */\ntag_96:\n    /* \"#utility.yul\":9534:9611   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9531:9532   */\n  0x00\n    /* \"#utility.yul\":9524:9612   */\n  mstore\n    /* \"#utility.yul\":9631:9635   */\n  0x11\n    /* \"#utility.yul\":9628:9629   */\n  0x04\n    /* \"#utility.yul\":9621:9636   */\n  mstore\n    /* \"#utility.yul\":9655:9659   */\n  0x24\n    /* \"#utility.yul\":9652:9653   */\n  0x00\n    /* \"#utility.yul\":9645:9660   */\n  revert\n    /* \"#utility.yul\":9672:10082   */\ntag_41:\n    /* \"#utility.yul\":9712:9719   */\n  0x00\n    /* \"#utility.yul\":9735:9755   */\n  tag_202\n    /* \"#utility.yul\":9753:9754   */\n  dup3\n    /* \"#utility.yul\":9735:9755   */\n  tag_64\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9730:9755   */\n  swap2\n  pop\n    /* \"#utility.yul\":9769:9789   */\n  tag_203\n    /* \"#utility.yul\":9787:9788   */\n  dup4\n    /* \"#utility.yul\":9769:9789   */\n  tag_64\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9764:9789   */\n  swap3\n  pop\n    /* \"#utility.yul\":9824:9825   */\n  dup3\n    /* \"#utility.yul\":9821:9822   */\n  dup3\n    /* \"#utility.yul\":9817:9826   */\n  mul\n    /* \"#utility.yul\":9846:9876   */\n  tag_204\n    /* \"#utility.yul\":9864:9875   */\n  dup2\n    /* \"#utility.yul\":9846:9876   */\n  tag_64\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9835:9876   */\n  swap2\n  pop\n    /* \"#utility.yul\":10025:10026   */\n  dup3\n    /* \"#utility.yul\":10016:10023   */\n  dup3\n    /* \"#utility.yul\":10012:10027   */\n  div\n    /* \"#utility.yul\":10009:10010   */\n  dup5\n    /* \"#utility.yul\":10006:10028   */\n  eq\n    /* \"#utility.yul\":9986:9987   */\n  dup4\n    /* \"#utility.yul\":9979:9988   */\n  iszero\n    /* \"#utility.yul\":9959:10042   */\n  or\n    /* \"#utility.yul\":9936:10075   */\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10055:10073   */\n  tag_206\n  tag_96\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9936:10075   */\ntag_205:\n    /* \"#utility.yul\":9720:10082   */\n  pop\n    /* \"#utility.yul\":9672:10082   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10088:10268   */\ntag_97:\n    /* \"#utility.yul\":10136:10213   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10133:10134   */\n  0x00\n    /* \"#utility.yul\":10126:10214   */\n  mstore\n    /* \"#utility.yul\":10233:10237   */\n  0x12\n    /* \"#utility.yul\":10230:10231   */\n  0x04\n    /* \"#utility.yul\":10223:10238   */\n  mstore\n    /* \"#utility.yul\":10257:10261   */\n  0x24\n    /* \"#utility.yul\":10254:10255   */\n  0x00\n    /* \"#utility.yul\":10247:10262   */\n  revert\n    /* \"#utility.yul\":10274:10459   */\ntag_43:\n    /* \"#utility.yul\":10314:10315   */\n  0x00\n    /* \"#utility.yul\":10331:10351   */\n  tag_209\n    /* \"#utility.yul\":10349:10350   */\n  dup3\n    /* \"#utility.yul\":10331:10351   */\n  tag_64\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10326:10351   */\n  swap2\n  pop\n    /* \"#utility.yul\":10365:10385   */\n  tag_210\n    /* \"#utility.yul\":10383:10384   */\n  dup4\n    /* \"#utility.yul\":10365:10385   */\n  tag_64\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10360:10385   */\n  swap3\n  pop\n    /* \"#utility.yul\":10404:10405   */\n  dup3\n    /* \"#utility.yul\":10394:10429   */\n  tag_211\n  jumpi\n    /* \"#utility.yul\":10409:10427   */\n  tag_212\n  tag_97\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10394:10429   */\ntag_211:\n    /* \"#utility.yul\":10451:10452   */\n  dup3\n    /* \"#utility.yul\":10448:10449   */\n  dup3\n    /* \"#utility.yul\":10444:10453   */\n  div\n    /* \"#utility.yul\":10439:10453   */\n  swap1\n  pop\n    /* \"#utility.yul\":10274:10459   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10465:10659   */\ntag_45:\n    /* \"#utility.yul\":10505:10509   */\n  0x00\n    /* \"#utility.yul\":10525:10545   */\n  tag_214\n    /* \"#utility.yul\":10543:10544   */\n  dup3\n    /* \"#utility.yul\":10525:10545   */\n  tag_64\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10520:10545   */\n  swap2\n  pop\n    /* \"#utility.yul\":10559:10579   */\n  tag_215\n    /* \"#utility.yul\":10577:10578   */\n  dup4\n    /* \"#utility.yul\":10559:10579   */\n  tag_64\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10554:10579   */\n  swap3\n  pop\n    /* \"#utility.yul\":10603:10604   */\n  dup3\n    /* \"#utility.yul\":10600:10601   */\n  dup3\n    /* \"#utility.yul\":10596:10605   */\n  sub\n    /* \"#utility.yul\":10588:10605   */\n  swap1\n  pop\n    /* \"#utility.yul\":10627:10628   */\n  dup2\n    /* \"#utility.yul\":10621:10625   */\n  dup2\n    /* \"#utility.yul\":10618:10629   */\n  gt\n    /* \"#utility.yul\":10615:10652   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":10632:10650   */\n  tag_217\n  tag_96\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10615:10652   */\ntag_216:\n    /* \"#utility.yul\":10465:10659   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10665:10856   */\ntag_52:\n    /* \"#utility.yul\":10705:10708   */\n  0x00\n    /* \"#utility.yul\":10724:10744   */\n  tag_219\n    /* \"#utility.yul\":10742:10743   */\n  dup3\n    /* \"#utility.yul\":10724:10744   */\n  tag_64\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10719:10744   */\n  swap2\n  pop\n    /* \"#utility.yul\":10758:10778   */\n  tag_220\n    /* \"#utility.yul\":10776:10777   */\n  dup4\n    /* \"#utility.yul\":10758:10778   */\n  tag_64\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10753:10778   */\n  swap3\n  pop\n    /* \"#utility.yul\":10801:10802   */\n  dup3\n    /* \"#utility.yul\":10798:10799   */\n  dup3\n    /* \"#utility.yul\":10794:10803   */\n  add\n    /* \"#utility.yul\":10787:10803   */\n  swap1\n  pop\n    /* \"#utility.yul\":10822:10825   */\n  dup1\n    /* \"#utility.yul\":10819:10820   */\n  dup3\n    /* \"#utility.yul\":10816:10826   */\n  gt\n    /* \"#utility.yul\":10813:10849   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":10829:10847   */\n  tag_222\n  tag_96\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10813:10849   */\ntag_221:\n    /* \"#utility.yul\":10665:10856   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10862:10980   */\ntag_98:\n    /* \"#utility.yul\":10949:10973   */\n  tag_224\n    /* \"#utility.yul\":10967:10972   */\n  dup2\n    /* \"#utility.yul\":10949:10973   */\n  tag_64\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10944:10947   */\n  dup3\n    /* \"#utility.yul\":10937:10974   */\n  mstore\n    /* \"#utility.yul\":10862:10980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10986:11428   */\ntag_56:\n    /* \"#utility.yul\":11135:11139   */\n  0x00\n    /* \"#utility.yul\":11173:11175   */\n  0x60\n    /* \"#utility.yul\":11162:11171   */\n  dup3\n    /* \"#utility.yul\":11158:11176   */\n  add\n    /* \"#utility.yul\":11150:11176   */\n  swap1\n  pop\n    /* \"#utility.yul\":11186:11257   */\n  tag_226\n    /* \"#utility.yul\":11254:11255   */\n  0x00\n    /* \"#utility.yul\":11243:11252   */\n  dup4\n    /* \"#utility.yul\":11239:11256   */\n  add\n    /* \"#utility.yul\":11230:11236   */\n  dup7\n    /* \"#utility.yul\":11186:11257   */\n  tag_90\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":11267:11339   */\n  tag_227\n    /* \"#utility.yul\":11335:11337   */\n  0x20\n    /* \"#utility.yul\":11324:11333   */\n  dup4\n    /* \"#utility.yul\":11320:11338   */\n  add\n    /* \"#utility.yul\":11311:11317   */\n  dup6\n    /* \"#utility.yul\":11267:11339   */\n  tag_98\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":11349:11421   */\n  tag_228\n    /* \"#utility.yul\":11417:11419   */\n  0x40\n    /* \"#utility.yul\":11406:11415   */\n  dup4\n    /* \"#utility.yul\":11402:11420   */\n  add\n    /* \"#utility.yul\":11393:11399   */\n  dup5\n    /* \"#utility.yul\":11349:11421   */\n  tag_98\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10986:11428   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11434:11656   */\ntag_60:\n    /* \"#utility.yul\":11527:11531   */\n  0x00\n    /* \"#utility.yul\":11565:11567   */\n  0x20\n    /* \"#utility.yul\":11554:11563   */\n  dup3\n    /* \"#utility.yul\":11550:11568   */\n  add\n    /* \"#utility.yul\":11542:11568   */\n  swap1\n  pop\n    /* \"#utility.yul\":11578:11649   */\n  tag_230\n    /* \"#utility.yul\":11646:11647   */\n  0x00\n    /* \"#utility.yul\":11635:11644   */\n  dup4\n    /* \"#utility.yul\":11631:11648   */\n  add\n    /* \"#utility.yul\":11622:11628   */\n  dup5\n    /* \"#utility.yul\":11578:11649   */\n  tag_98\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":11434:11656   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SuperBoInu.sol\":228:2442  contract SuperBoInu is ERC20, Ownable, Pausable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SuperBoInu.sol\":228:2442  contract SuperBoInu is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x771a3a1d\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc6d69a30\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc6d69a30\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd9b2c9cc\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xea414b28\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x771a3a1d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8ebfc796\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4218e0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2dc0562d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInu.sol\":331:355  address public taxWallet */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInu.sol\":362:405  mapping(address => bool) public isFeeExempt */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"SuperBoInu.sol\":285:307  uint256 public taxRate */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInu.sol\":1413:1584  function setFeeExempt(address account, bool exempt) external onlyOwner {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInu.sol\":995:1185  function setTaxRate(uint256 _taxRate) external onlyOwner {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"SuperBoInu.sol\":2247:2439  function viewTax(uint256 amount) external view returns (uint256 taxAmount, uint256 sendAmount) {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInu.sol\":1193:1405  function setTaxWallet(address _taxWallet) external onlyOwner {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SuperBoInu.sol\":331:355  address public taxWallet */\n    tag_46:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"SuperBoInu.sol\":362:405  mapping(address => bool) public isFeeExempt */\n    tag_56:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SuperBoInu.sol\":285:307  uint256 public taxRate */\n    tag_68:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SuperBoInu.sol\":1413:1584  function setFeeExempt(address account, bool exempt) external onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"SuperBoInu.sol\":1518:1524  exempt */\n      dup1\n        /* \"SuperBoInu.sol\":1495:1506  isFeeExempt */\n      0x08\n        /* \"SuperBoInu.sol\":1495:1515  isFeeExempt[account] */\n      0x00\n        /* \"SuperBoInu.sol\":1507:1514  account */\n      dup5\n        /* \"SuperBoInu.sol\":1495:1515  isFeeExempt[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SuperBoInu.sol\":1495:1524  isFeeExempt[account] = exempt */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SuperBoInu.sol\":1560:1567  account */\n      dup2\n        /* \"SuperBoInu.sol\":1540:1576  ExemptStatusUpdated(account, exempt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b8f7e0160b0b3dbd1778c94df017a106051c9cfc844b82de0b4036a967d2d2b\n        /* \"SuperBoInu.sol\":1569:1575  exempt */\n      dup3\n        /* \"SuperBoInu.sol\":1540:1576  ExemptStatusUpdated(account, exempt) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SuperBoInu.sol\":1413:1584  function setFeeExempt(address account, bool exempt) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_106\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_106\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SuperBoInu.sol\":995:1185  function setTaxRate(uint256 _taxRate) external onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"SuperBoInu.sol\":1083:1086  100 */\n      0x64\n        /* \"SuperBoInu.sol\":1071:1079  _taxRate */\n      dup2\n        /* \"SuperBoInu.sol\":1071:1086  _taxRate <= 100 */\n      gt\n      iszero\n        /* \"SuperBoInu.sol\":1063:1108  require(_taxRate <= 100, \"Tax must be 0-100\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"SuperBoInu.sol\":1129:1137  _taxRate */\n      dup1\n        /* \"SuperBoInu.sol\":1119:1126  taxRate */\n      0x06\n        /* \"SuperBoInu.sol\":1119:1137  taxRate = _taxRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SuperBoInu.sol\":1153:1177  TaxRateUpdated(_taxRate) */\n      0x82754e7bf8e3395ddb4a767c52b21ed0c3b9da843001b2e07ab46f2580323457\n        /* \"SuperBoInu.sol\":1168:1176  _taxRate */\n      dup2\n        /* \"SuperBoInu.sol\":1153:1177  TaxRateUpdated(_taxRate) */\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SuperBoInu.sol\":995:1185  function setTaxRate(uint256 _taxRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SuperBoInu.sol\":2247:2439  function viewTax(uint256 amount) external view returns (uint256 taxAmount, uint256 sendAmount) {... */\n    tag_90:\n        /* \"SuperBoInu.sol\":2303:2320  uint256 taxAmount */\n      0x00\n        /* \"SuperBoInu.sol\":2322:2340  uint256 sendAmount */\n      0x00\n        /* \"SuperBoInu.sol\":2386:2389  100 */\n      0x64\n        /* \"SuperBoInu.sol\":2375:2382  taxRate */\n      sload(0x06)\n        /* \"SuperBoInu.sol\":2366:2372  amount */\n      dup5\n        /* \"SuperBoInu.sol\":2366:2382  amount * taxRate */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"SuperBoInu.sol\":2365:2389  (amount * taxRate) / 100 */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"SuperBoInu.sol\":2353:2389  taxAmount = (amount * taxRate) / 100 */\n      swap2\n      pop\n        /* \"SuperBoInu.sol\":2422:2431  taxAmount */\n      dup2\n        /* \"SuperBoInu.sol\":2413:2419  amount */\n      dup4\n        /* \"SuperBoInu.sol\":2413:2431  amount - taxAmount */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"SuperBoInu.sol\":2400:2431  sendAmount = amount - taxAmount */\n      swap1\n      pop\n        /* \"SuperBoInu.sol\":2247:2439  function viewTax(uint256 amount) external view returns (uint256 taxAmount, uint256 sendAmount) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SuperBoInu.sol\":1193:1405  function setTaxWallet(address _taxWallet) external onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"SuperBoInu.sol\":1295:1296  0 */\n      0x00\n        /* \"SuperBoInu.sol\":1273:1297  _taxWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperBoInu.sol\":1273:1283  _taxWallet */\n      dup2\n        /* \"SuperBoInu.sol\":1273:1297  _taxWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SuperBoInu.sol\":1265:1320  require(_taxWallet != address(0), \"Invalid tax wallet\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"SuperBoInu.sol\":1343:1353  _taxWallet */\n      dup1\n        /* \"SuperBoInu.sol\":1331:1340  taxWallet */\n      0x07\n      0x00\n        /* \"SuperBoInu.sol\":1331:1353  taxWallet = _taxWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SuperBoInu.sol\":1386:1396  _taxWallet */\n      dup1\n        /* \"SuperBoInu.sol\":1369:1397  TaxWalletUpdated(_taxWallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1797049ec5d8ec17fdce2660fb55e33695fd7ebbdb65726cc6d171c0e1c312c7\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SuperBoInu.sol\":1193:1405  function setTaxWallet(address _taxWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SuperBoInu.sol\":1642:2196  function _update(address from, address to, uint256 value) internal override {... */\n    tag_190:\n        /* \"SuperBoInu.sol\":1795:1796  0 */\n      0x00\n        /* \"SuperBoInu.sol\":1779:1797  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperBoInu.sol\":1779:1783  from */\n      dup4\n        /* \"SuperBoInu.sol\":1779:1797  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SuperBoInu.sol\":1779:1817  from == address(0) || to == address(0) */\n      dup1\n      tag_206\n      jumpi\n      pop\n        /* \"SuperBoInu.sol\":1815:1816  0 */\n      0x00\n        /* \"SuperBoInu.sol\":1801:1817  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperBoInu.sol\":1801:1803  to */\n      dup3\n        /* \"SuperBoInu.sol\":1801:1817  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SuperBoInu.sol\":1779:1817  from == address(0) || to == address(0) */\n    tag_206:\n        /* \"SuperBoInu.sol\":1779:1838  from == address(0) || to == address(0) || isFeeExempt[from] */\n      dup1\n      tag_207\n      jumpi\n      pop\n        /* \"SuperBoInu.sol\":1821:1832  isFeeExempt */\n      0x08\n        /* \"SuperBoInu.sol\":1821:1838  isFeeExempt[from] */\n      0x00\n        /* \"SuperBoInu.sol\":1833:1837  from */\n      dup5\n        /* \"SuperBoInu.sol\":1821:1838  isFeeExempt[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SuperBoInu.sol\":1779:1838  from == address(0) || to == address(0) || isFeeExempt[from] */\n    tag_207:\n        /* \"SuperBoInu.sol\":1779:1857  from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to] */\n      dup1\n      tag_208\n      jumpi\n      pop\n        /* \"SuperBoInu.sol\":1842:1853  isFeeExempt */\n      0x08\n        /* \"SuperBoInu.sol\":1842:1857  isFeeExempt[to] */\n      0x00\n        /* \"SuperBoInu.sol\":1854:1856  to */\n      dup4\n        /* \"SuperBoInu.sol\":1842:1857  isFeeExempt[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SuperBoInu.sol\":1779:1857  from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to] */\n    tag_208:\n        /* \"SuperBoInu.sol\":1775:1937  if (from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to]) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"SuperBoInu.sol\":1874:1904  super._update(from, to, value) */\n      tag_210\n        /* \"SuperBoInu.sol\":1888:1892  from */\n      dup4\n        /* \"SuperBoInu.sol\":1894:1896  to */\n      dup4\n        /* \"SuperBoInu.sol\":1898:1903  value */\n      dup4\n        /* \"SuperBoInu.sol\":1874:1887  super._update */\n      tag_211\n        /* \"SuperBoInu.sol\":1874:1904  super._update(from, to, value) */\n      jump\t// in\n    tag_210:\n        /* \"SuperBoInu.sol\":1919:1926  return; */\n      jump(tag_205)\n        /* \"SuperBoInu.sol\":1775:1937  if (from == address(0) || to == address(0) || isFeeExempt[from] || isFeeExempt[to]) {... */\n    tag_209:\n        /* \"SuperBoInu.sol\":1949:1966  uint256 taxAmount */\n      0x00\n        /* \"SuperBoInu.sol\":1989:1992  100 */\n      0x64\n        /* \"SuperBoInu.sol\":1978:1985  taxRate */\n      sload(0x06)\n        /* \"SuperBoInu.sol\":1970:1975  value */\n      dup4\n        /* \"SuperBoInu.sol\":1970:1985  value * taxRate */\n      tag_212\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_212:\n        /* \"SuperBoInu.sol\":1969:1992  (value * taxRate) / 100 */\n      tag_213\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_213:\n        /* \"SuperBoInu.sol\":1949:1992  uint256 taxAmount = (value * taxRate) / 100 */\n      swap1\n      pop\n        /* \"SuperBoInu.sol\":2003:2021  uint256 sendAmount */\n      0x00\n        /* \"SuperBoInu.sol\":2032:2041  taxAmount */\n      dup2\n        /* \"SuperBoInu.sol\":2024:2029  value */\n      dup4\n        /* \"SuperBoInu.sol\":2024:2041  value - taxAmount */\n      tag_214\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_214:\n        /* \"SuperBoInu.sol\":2003:2041  uint256 sendAmount = value - taxAmount */\n      swap1\n      pop\n        /* \"SuperBoInu.sol\":2070:2071  0 */\n      0x00\n        /* \"SuperBoInu.sol\":2058:2067  taxAmount */\n      dup3\n        /* \"SuperBoInu.sol\":2058:2071  taxAmount > 0 */\n      gt\n        /* \"SuperBoInu.sol\":2054:2141  if (taxAmount > 0) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"SuperBoInu.sol\":2088:2129  super._update(from, taxWallet, taxAmount) */\n      tag_216\n        /* \"SuperBoInu.sol\":2102:2106  from */\n      dup6\n        /* \"SuperBoInu.sol\":2108:2117  taxWallet */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperBoInu.sol\":2119:2128  taxAmount */\n      dup5\n        /* \"SuperBoInu.sol\":2088:2101  super._update */\n      tag_211\n        /* \"SuperBoInu.sol\":2088:2129  super._update(from, taxWallet, taxAmount) */\n      jump\t// in\n    tag_216:\n        /* \"SuperBoInu.sol\":2054:2141  if (taxAmount > 0) {... */\n    tag_215:\n        /* \"SuperBoInu.sol\":2153:2188  super._update(from, to, sendAmount) */\n      tag_217\n        /* \"SuperBoInu.sol\":2167:2171  from */\n      dup6\n        /* \"SuperBoInu.sol\":2173:2175  to */\n      dup6\n        /* \"SuperBoInu.sol\":2177:2187  sendAmount */\n      dup4\n        /* \"SuperBoInu.sol\":2153:2166  super._update */\n      tag_211\n        /* \"SuperBoInu.sol\":2153:2188  super._update(from, to, sendAmount) */\n      jump\t// in\n    tag_217:\n        /* \"SuperBoInu.sol\":1718:2196  {... */\n      pop\n      pop\n        /* \"SuperBoInu.sol\":1642:2196  function _update(address from, address to, uint256 value) internal override {... */\n    tag_205:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_222)\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_226)\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_228:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_229:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_230:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_231:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_232:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_264\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_228\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":711:782   */\n      tag_265\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_229\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_266\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_230\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":881:910   */\n      tag_267\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_231\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_29:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_269\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_232\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_234:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_236:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_237:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_275\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_236\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_238:\n        /* \"#utility.yul\":1876:1900   */\n      tag_277\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_237\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_278:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_239:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_280\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_238\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_240:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_241:\n        /* \"#utility.yul\":2232:2256   */\n      tag_283\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_240\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_284:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_242:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_286\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_241\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_32:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_289\n      tag_234\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2525:2644   */\n    tag_288:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_290\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_239\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_291\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_242\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_243:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_244:\n        /* \"#utility.yul\":3089:3110   */\n      tag_294\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_243\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_35:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_296\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_244\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_245:\n        /* \"#utility.yul\":3426:3450   */\n      tag_298\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_240\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_39:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_300\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_245\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_42:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_303\n      tag_234\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3801:3920   */\n    tag_302:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_304\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_239\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_305\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_239\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_306\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_242\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4434   */\n    tag_246:\n        /* \"#utility.yul\":4403:4427   */\n      tag_308\n        /* \"#utility.yul\":4421:4426   */\n      dup2\n        /* \"#utility.yul\":4403:4427   */\n      tag_237\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4398:4401   */\n      dup3\n        /* \"#utility.yul\":4391:4428   */\n      mstore\n        /* \"#utility.yul\":4316:4434   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4440:4662   */\n    tag_48:\n        /* \"#utility.yul\":4533:4537   */\n      0x00\n        /* \"#utility.yul\":4571:4573   */\n      0x20\n        /* \"#utility.yul\":4560:4569   */\n      dup3\n        /* \"#utility.yul\":4556:4574   */\n      add\n        /* \"#utility.yul\":4548:4574   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4655   */\n      tag_310\n        /* \"#utility.yul\":4652:4653   */\n      0x00\n        /* \"#utility.yul\":4641:4650   */\n      dup4\n        /* \"#utility.yul\":4637:4654   */\n      add\n        /* \"#utility.yul\":4628:4634   */\n      dup5\n        /* \"#utility.yul\":4584:4655   */\n      tag_246\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4440:4662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4668:4754   */\n    tag_247:\n        /* \"#utility.yul\":4703:4710   */\n      0x00\n        /* \"#utility.yul\":4743:4747   */\n      0xff\n        /* \"#utility.yul\":4736:4741   */\n      dup3\n        /* \"#utility.yul\":4732:4748   */\n      and\n        /* \"#utility.yul\":4721:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4668:4754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4760:4872   */\n    tag_248:\n        /* \"#utility.yul\":4843:4865   */\n      tag_313\n        /* \"#utility.yul\":4859:4864   */\n      dup2\n        /* \"#utility.yul\":4843:4865   */\n      tag_247\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4838:4841   */\n      dup3\n        /* \"#utility.yul\":4831:4866   */\n      mstore\n        /* \"#utility.yul\":4760:4872   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:5092   */\n    tag_52:\n        /* \"#utility.yul\":4967:4971   */\n      0x00\n        /* \"#utility.yul\":5005:5007   */\n      0x20\n        /* \"#utility.yul\":4994:5003   */\n      dup3\n        /* \"#utility.yul\":4990:5008   */\n      add\n        /* \"#utility.yul\":4982:5008   */\n      swap1\n      pop\n        /* \"#utility.yul\":5018:5085   */\n      tag_315\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5018:5085   */\n      tag_248\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4878:5092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5427   */\n    tag_55:\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5194:5203   */\n      dup3\n        /* \"#utility.yul\":5185:5192   */\n      dup5\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_318\n      tag_234\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5174:5293   */\n    tag_317:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_319\n        /* \"#utility.yul\":5402:5409   */\n      dup5\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup6\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_239\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5347:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5098:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5549   */\n    tag_249:\n        /* \"#utility.yul\":5503:5524   */\n      tag_321\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5503:5524   */\n      tag_243\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5496:5501   */\n      dup2\n        /* \"#utility.yul\":5493:5525   */\n      eq\n        /* \"#utility.yul\":5483:5543   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5536:5537   */\n      0x00\n        /* \"#utility.yul\":5529:5541   */\n      revert\n        /* \"#utility.yul\":5483:5543   */\n    tag_322:\n        /* \"#utility.yul\":5433:5549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5555:5688   */\n    tag_250:\n        /* \"#utility.yul\":5598:5603   */\n      0x00\n        /* \"#utility.yul\":5636:5642   */\n      dup2\n        /* \"#utility.yul\":5623:5643   */\n      calldataload\n        /* \"#utility.yul\":5614:5643   */\n      swap1\n      pop\n        /* \"#utility.yul\":5652:5682   */\n      tag_324\n        /* \"#utility.yul\":5676:5681   */\n      dup2\n        /* \"#utility.yul\":5652:5682   */\n      tag_249\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5555:5688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5694:6162   */\n    tag_75:\n        /* \"#utility.yul\":5759:5765   */\n      0x00\n        /* \"#utility.yul\":5767:5773   */\n      0x00\n        /* \"#utility.yul\":5816:5818   */\n      0x40\n        /* \"#utility.yul\":5804:5813   */\n      dup4\n        /* \"#utility.yul\":5795:5802   */\n      dup6\n        /* \"#utility.yul\":5791:5814   */\n      sub\n        /* \"#utility.yul\":5787:5819   */\n      slt\n        /* \"#utility.yul\":5784:5903   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5822:5901   */\n      tag_327\n      tag_234\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5784:5903   */\n    tag_326:\n        /* \"#utility.yul\":5942:5943   */\n      0x00\n        /* \"#utility.yul\":5967:6020   */\n      tag_328\n        /* \"#utility.yul\":6012:6019   */\n      dup6\n        /* \"#utility.yul\":6003:6009   */\n      dup3\n        /* \"#utility.yul\":5992:6001   */\n      dup7\n        /* \"#utility.yul\":5988:6010   */\n      add\n        /* \"#utility.yul\":5967:6020   */\n      tag_239\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5957:6020   */\n      swap3\n      pop\n        /* \"#utility.yul\":5913:6030   */\n      pop\n        /* \"#utility.yul\":6069:6071   */\n      0x20\n        /* \"#utility.yul\":6095:6145   */\n      tag_329\n        /* \"#utility.yul\":6137:6144   */\n      dup6\n        /* \"#utility.yul\":6128:6134   */\n      dup3\n        /* \"#utility.yul\":6117:6126   */\n      dup7\n        /* \"#utility.yul\":6113:6135   */\n      add\n        /* \"#utility.yul\":6095:6145   */\n      tag_250\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6085:6145   */\n      swap2\n      pop\n        /* \"#utility.yul\":6040:6155   */\n      pop\n        /* \"#utility.yul\":5694:6162   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6168:6497   */\n    tag_86:\n        /* \"#utility.yul\":6227:6233   */\n      0x00\n        /* \"#utility.yul\":6276:6278   */\n      0x20\n        /* \"#utility.yul\":6264:6273   */\n      dup3\n        /* \"#utility.yul\":6255:6262   */\n      dup5\n        /* \"#utility.yul\":6251:6274   */\n      sub\n        /* \"#utility.yul\":6247:6279   */\n      slt\n        /* \"#utility.yul\":6244:6363   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6282:6361   */\n      tag_332\n      tag_234\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6244:6363   */\n    tag_331:\n        /* \"#utility.yul\":6402:6403   */\n      0x00\n        /* \"#utility.yul\":6427:6480   */\n      tag_333\n        /* \"#utility.yul\":6472:6479   */\n      dup5\n        /* \"#utility.yul\":6463:6469   */\n      dup3\n        /* \"#utility.yul\":6452:6461   */\n      dup6\n        /* \"#utility.yul\":6448:6470   */\n      add\n        /* \"#utility.yul\":6427:6480   */\n      tag_242\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6417:6480   */\n      swap2\n      pop\n        /* \"#utility.yul\":6373:6490   */\n      pop\n        /* \"#utility.yul\":6168:6497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6835   */\n    tag_92:\n        /* \"#utility.yul\":6624:6628   */\n      0x00\n        /* \"#utility.yul\":6662:6664   */\n      0x40\n        /* \"#utility.yul\":6651:6660   */\n      dup3\n        /* \"#utility.yul\":6647:6665   */\n      add\n        /* \"#utility.yul\":6639:6665   */\n      swap1\n      pop\n        /* \"#utility.yul\":6675:6746   */\n      tag_335\n        /* \"#utility.yul\":6743:6744   */\n      0x00\n        /* \"#utility.yul\":6732:6741   */\n      dup4\n        /* \"#utility.yul\":6728:6745   */\n      add\n        /* \"#utility.yul\":6719:6725   */\n      dup6\n        /* \"#utility.yul\":6675:6746   */\n      tag_245\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6756:6828   */\n      tag_336\n        /* \"#utility.yul\":6824:6826   */\n      0x20\n        /* \"#utility.yul\":6813:6822   */\n      dup4\n        /* \"#utility.yul\":6809:6827   */\n      add\n        /* \"#utility.yul\":6800:6806   */\n      dup5\n        /* \"#utility.yul\":6756:6828   */\n      tag_245\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6503:6835   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6841:7315   */\n    tag_95:\n        /* \"#utility.yul\":6909:6915   */\n      0x00\n        /* \"#utility.yul\":6917:6923   */\n      0x00\n        /* \"#utility.yul\":6966:6968   */\n      0x40\n        /* \"#utility.yul\":6954:6963   */\n      dup4\n        /* \"#utility.yul\":6945:6952   */\n      dup6\n        /* \"#utility.yul\":6941:6964   */\n      sub\n        /* \"#utility.yul\":6937:6969   */\n      slt\n        /* \"#utility.yul\":6934:7053   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6972:7051   */\n      tag_339\n      tag_234\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6934:7053   */\n    tag_338:\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7117:7170   */\n      tag_340\n        /* \"#utility.yul\":7162:7169   */\n      dup6\n        /* \"#utility.yul\":7153:7159   */\n      dup3\n        /* \"#utility.yul\":7142:7151   */\n      dup7\n        /* \"#utility.yul\":7138:7160   */\n      add\n        /* \"#utility.yul\":7117:7170   */\n      tag_239\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7107:7170   */\n      swap3\n      pop\n        /* \"#utility.yul\":7063:7180   */\n      pop\n        /* \"#utility.yul\":7219:7221   */\n      0x20\n        /* \"#utility.yul\":7245:7298   */\n      tag_341\n        /* \"#utility.yul\":7290:7297   */\n      dup6\n        /* \"#utility.yul\":7281:7287   */\n      dup3\n        /* \"#utility.yul\":7270:7279   */\n      dup7\n        /* \"#utility.yul\":7266:7288   */\n      add\n        /* \"#utility.yul\":7245:7298   */\n      tag_239\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7235:7298   */\n      swap2\n      pop\n        /* \"#utility.yul\":7190:7308   */\n      pop\n        /* \"#utility.yul\":6841:7315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7321:7501   */\n    tag_251:\n        /* \"#utility.yul\":7369:7446   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7366:7367   */\n      0x00\n        /* \"#utility.yul\":7359:7447   */\n      mstore\n        /* \"#utility.yul\":7466:7470   */\n      0x22\n        /* \"#utility.yul\":7463:7464   */\n      0x04\n        /* \"#utility.yul\":7456:7471   */\n      mstore\n        /* \"#utility.yul\":7490:7494   */\n      0x24\n        /* \"#utility.yul\":7487:7488   */\n      0x00\n        /* \"#utility.yul\":7480:7495   */\n      revert\n        /* \"#utility.yul\":7507:7827   */\n    tag_106:\n        /* \"#utility.yul\":7551:7557   */\n      0x00\n        /* \"#utility.yul\":7588:7589   */\n      0x02\n        /* \"#utility.yul\":7582:7586   */\n      dup3\n        /* \"#utility.yul\":7578:7590   */\n      div\n        /* \"#utility.yul\":7568:7590   */\n      swap1\n      pop\n        /* \"#utility.yul\":7635:7636   */\n      0x01\n        /* \"#utility.yul\":7629:7633   */\n      dup3\n        /* \"#utility.yul\":7625:7637   */\n      and\n        /* \"#utility.yul\":7656:7674   */\n      dup1\n        /* \"#utility.yul\":7646:7727   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":7712:7716   */\n      0x7f\n        /* \"#utility.yul\":7704:7710   */\n      dup3\n        /* \"#utility.yul\":7700:7717   */\n      and\n        /* \"#utility.yul\":7690:7717   */\n      swap2\n      pop\n        /* \"#utility.yul\":7646:7727   */\n    tag_344:\n        /* \"#utility.yul\":7774:7776   */\n      0x20\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7763:7777   */\n      lt\n        /* \"#utility.yul\":7743:7761   */\n      dup2\n        /* \"#utility.yul\":7740:7778   */\n      sub\n        /* \"#utility.yul\":7737:7821   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":7793:7811   */\n      tag_346\n      tag_251\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7737:7821   */\n    tag_345:\n        /* \"#utility.yul\":7558:7827   */\n      pop\n        /* \"#utility.yul\":7507:7827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7833:8000   */\n    tag_252:\n        /* \"#utility.yul\":7973:7992   */\n      0x546178206d75737420626520302d313030000000000000000000000000000000\n        /* \"#utility.yul\":7969:7970   */\n      0x00\n        /* \"#utility.yul\":7961:7967   */\n      dup3\n        /* \"#utility.yul\":7957:7971   */\n      add\n        /* \"#utility.yul\":7950:7993   */\n      mstore\n        /* \"#utility.yul\":7833:8000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8006:8372   */\n    tag_253:\n        /* \"#utility.yul\":8148:8151   */\n      0x00\n        /* \"#utility.yul\":8169:8236   */\n      tag_349\n        /* \"#utility.yul\":8233:8235   */\n      0x11\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8169:8236   */\n      tag_229\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8162:8236   */\n      swap2\n      pop\n        /* \"#utility.yul\":8245:8338   */\n      tag_350\n        /* \"#utility.yul\":8334:8337   */\n      dup3\n        /* \"#utility.yul\":8245:8338   */\n      tag_252\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8363:8365   */\n      0x20\n        /* \"#utility.yul\":8358:8361   */\n      dup3\n        /* \"#utility.yul\":8354:8366   */\n      add\n        /* \"#utility.yul\":8347:8366   */\n      swap1\n      pop\n        /* \"#utility.yul\":8006:8372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8378:8797   */\n    tag_151:\n        /* \"#utility.yul\":8544:8548   */\n      0x00\n        /* \"#utility.yul\":8582:8584   */\n      0x20\n        /* \"#utility.yul\":8571:8580   */\n      dup3\n        /* \"#utility.yul\":8567:8585   */\n      add\n        /* \"#utility.yul\":8559:8585   */\n      swap1\n      pop\n        /* \"#utility.yul\":8631:8640   */\n      dup2\n        /* \"#utility.yul\":8625:8629   */\n      dup2\n        /* \"#utility.yul\":8621:8641   */\n      sub\n        /* \"#utility.yul\":8617:8618   */\n      0x00\n        /* \"#utility.yul\":8606:8615   */\n      dup4\n        /* \"#utility.yul\":8602:8619   */\n      add\n        /* \"#utility.yul\":8595:8642   */\n      mstore\n        /* \"#utility.yul\":8659:8790   */\n      tag_352\n        /* \"#utility.yul\":8785:8789   */\n      dup2\n        /* \"#utility.yul\":8659:8790   */\n      tag_253\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8651:8790   */\n      swap1\n      pop\n        /* \"#utility.yul\":8378:8797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:8983   */\n    tag_254:\n        /* \"#utility.yul\":8851:8928   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8848:8849   */\n      0x00\n        /* \"#utility.yul\":8841:8929   */\n      mstore\n        /* \"#utility.yul\":8948:8952   */\n      0x11\n        /* \"#utility.yul\":8945:8946   */\n      0x04\n        /* \"#utility.yul\":8938:8953   */\n      mstore\n        /* \"#utility.yul\":8972:8976   */\n      0x24\n        /* \"#utility.yul\":8969:8970   */\n      0x00\n        /* \"#utility.yul\":8962:8977   */\n      revert\n        /* \"#utility.yul\":8989:9399   */\n    tag_155:\n        /* \"#utility.yul\":9029:9036   */\n      0x00\n        /* \"#utility.yul\":9052:9072   */\n      tag_355\n        /* \"#utility.yul\":9070:9071   */\n      dup3\n        /* \"#utility.yul\":9052:9072   */\n      tag_240\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9047:9072   */\n      swap2\n      pop\n        /* \"#utility.yul\":9086:9106   */\n      tag_356\n        /* \"#utility.yul\":9104:9105   */\n      dup4\n        /* \"#utility.yul\":9086:9106   */\n      tag_240\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9081:9106   */\n      swap3\n      pop\n        /* \"#utility.yul\":9141:9142   */\n      dup3\n        /* \"#utility.yul\":9138:9139   */\n      dup3\n        /* \"#utility.yul\":9134:9143   */\n      mul\n        /* \"#utility.yul\":9163:9193   */\n      tag_357\n        /* \"#utility.yul\":9181:9192   */\n      dup2\n        /* \"#utility.yul\":9163:9193   */\n      tag_240\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9152:9193   */\n      swap2\n      pop\n        /* \"#utility.yul\":9342:9343   */\n      dup3\n        /* \"#utility.yul\":9333:9340   */\n      dup3\n        /* \"#utility.yul\":9329:9344   */\n      div\n        /* \"#utility.yul\":9326:9327   */\n      dup5\n        /* \"#utility.yul\":9323:9345   */\n      eq\n        /* \"#utility.yul\":9303:9304   */\n      dup4\n        /* \"#utility.yul\":9296:9305   */\n      iszero\n        /* \"#utility.yul\":9276:9359   */\n      or\n        /* \"#utility.yul\":9253:9392   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":9372:9390   */\n      tag_359\n      tag_254\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9253:9392   */\n    tag_358:\n        /* \"#utility.yul\":9037:9399   */\n      pop\n        /* \"#utility.yul\":8989:9399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9405:9585   */\n    tag_255:\n        /* \"#utility.yul\":9453:9530   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9450:9451   */\n      0x00\n        /* \"#utility.yul\":9443:9531   */\n      mstore\n        /* \"#utility.yul\":9550:9554   */\n      0x12\n        /* \"#utility.yul\":9547:9548   */\n      0x04\n        /* \"#utility.yul\":9540:9555   */\n      mstore\n        /* \"#utility.yul\":9574:9578   */\n      0x24\n        /* \"#utility.yul\":9571:9572   */\n      0x00\n        /* \"#utility.yul\":9564:9579   */\n      revert\n        /* \"#utility.yul\":9591:9776   */\n    tag_157:\n        /* \"#utility.yul\":9631:9632   */\n      0x00\n        /* \"#utility.yul\":9648:9668   */\n      tag_362\n        /* \"#utility.yul\":9666:9667   */\n      dup3\n        /* \"#utility.yul\":9648:9668   */\n      tag_240\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9643:9668   */\n      swap2\n      pop\n        /* \"#utility.yul\":9682:9702   */\n      tag_363\n        /* \"#utility.yul\":9700:9701   */\n      dup4\n        /* \"#utility.yul\":9682:9702   */\n      tag_240\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9677:9702   */\n      swap3\n      pop\n        /* \"#utility.yul\":9721:9722   */\n      dup3\n        /* \"#utility.yul\":9711:9746   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":9726:9744   */\n      tag_365\n      tag_255\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9711:9746   */\n    tag_364:\n        /* \"#utility.yul\":9768:9769   */\n      dup3\n        /* \"#utility.yul\":9765:9766   */\n      dup3\n        /* \"#utility.yul\":9761:9770   */\n      div\n        /* \"#utility.yul\":9756:9770   */\n      swap1\n      pop\n        /* \"#utility.yul\":9591:9776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9782:9976   */\n    tag_159:\n        /* \"#utility.yul\":9822:9826   */\n      0x00\n        /* \"#utility.yul\":9842:9862   */\n      tag_367\n        /* \"#utility.yul\":9860:9861   */\n      dup3\n        /* \"#utility.yul\":9842:9862   */\n      tag_240\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9837:9862   */\n      swap2\n      pop\n        /* \"#utility.yul\":9876:9896   */\n      tag_368\n        /* \"#utility.yul\":9894:9895   */\n      dup4\n        /* \"#utility.yul\":9876:9896   */\n      tag_240\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9871:9896   */\n      swap3\n      pop\n        /* \"#utility.yul\":9920:9921   */\n      dup3\n        /* \"#utility.yul\":9917:9918   */\n      dup3\n        /* \"#utility.yul\":9913:9922   */\n      sub\n        /* \"#utility.yul\":9905:9922   */\n      swap1\n      pop\n        /* \"#utility.yul\":9944:9945   */\n      dup2\n        /* \"#utility.yul\":9938:9942   */\n      dup2\n        /* \"#utility.yul\":9935:9946   */\n      gt\n        /* \"#utility.yul\":9932:9969   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":9949:9967   */\n      tag_370\n      tag_254\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9932:9969   */\n    tag_369:\n        /* \"#utility.yul\":9782:9976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9982:10150   */\n    tag_256:\n        /* \"#utility.yul\":10122:10142   */\n      0x496e76616c6964207461782077616c6c65740000000000000000000000000000\n        /* \"#utility.yul\":10118:10119   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup3\n        /* \"#utility.yul\":10106:10120   */\n      add\n        /* \"#utility.yul\":10099:10143   */\n      mstore\n        /* \"#utility.yul\":9982:10150   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10156:10522   */\n    tag_257:\n        /* \"#utility.yul\":10298:10301   */\n      0x00\n        /* \"#utility.yul\":10319:10386   */\n      tag_373\n        /* \"#utility.yul\":10383:10385   */\n      0x12\n        /* \"#utility.yul\":10378:10381   */\n      dup4\n        /* \"#utility.yul\":10319:10386   */\n      tag_229\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10312:10386   */\n      swap2\n      pop\n        /* \"#utility.yul\":10395:10488   */\n      tag_374\n        /* \"#utility.yul\":10484:10487   */\n      dup3\n        /* \"#utility.yul\":10395:10488   */\n      tag_256\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10513:10515   */\n      0x20\n        /* \"#utility.yul\":10508:10511   */\n      dup3\n        /* \"#utility.yul\":10504:10516   */\n      add\n        /* \"#utility.yul\":10497:10516   */\n      swap1\n      pop\n        /* \"#utility.yul\":10156:10522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10528:10947   */\n    tag_166:\n        /* \"#utility.yul\":10694:10698   */\n      0x00\n        /* \"#utility.yul\":10732:10734   */\n      0x20\n        /* \"#utility.yul\":10721:10730   */\n      dup3\n        /* \"#utility.yul\":10717:10735   */\n      add\n        /* \"#utility.yul\":10709:10735   */\n      swap1\n      pop\n        /* \"#utility.yul\":10781:10790   */\n      dup2\n        /* \"#utility.yul\":10775:10779   */\n      dup2\n        /* \"#utility.yul\":10771:10791   */\n      sub\n        /* \"#utility.yul\":10767:10768   */\n      0x00\n        /* \"#utility.yul\":10756:10765   */\n      dup4\n        /* \"#utility.yul\":10752:10769   */\n      add\n        /* \"#utility.yul\":10745:10792   */\n      mstore\n        /* \"#utility.yul\":10809:10940   */\n      tag_376\n        /* \"#utility.yul\":10935:10939   */\n      dup2\n        /* \"#utility.yul\":10809:10940   */\n      tag_257\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10801:10940   */\n      swap1\n      pop\n        /* \"#utility.yul\":10528:10947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10953:11395   */\n    tag_182:\n        /* \"#utility.yul\":11102:11106   */\n      0x00\n        /* \"#utility.yul\":11140:11142   */\n      0x60\n        /* \"#utility.yul\":11129:11138   */\n      dup3\n        /* \"#utility.yul\":11125:11143   */\n      add\n        /* \"#utility.yul\":11117:11143   */\n      swap1\n      pop\n        /* \"#utility.yul\":11153:11224   */\n      tag_378\n        /* \"#utility.yul\":11221:11222   */\n      0x00\n        /* \"#utility.yul\":11210:11219   */\n      dup4\n        /* \"#utility.yul\":11206:11223   */\n      add\n        /* \"#utility.yul\":11197:11203   */\n      dup7\n        /* \"#utility.yul\":11153:11224   */\n      tag_246\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11234:11306   */\n      tag_379\n        /* \"#utility.yul\":11302:11304   */\n      0x20\n        /* \"#utility.yul\":11291:11300   */\n      dup4\n        /* \"#utility.yul\":11287:11305   */\n      add\n        /* \"#utility.yul\":11278:11284   */\n      dup6\n        /* \"#utility.yul\":11234:11306   */\n      tag_245\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11316:11388   */\n      tag_380\n        /* \"#utility.yul\":11384:11386   */\n      0x40\n        /* \"#utility.yul\":11373:11382   */\n      dup4\n        /* \"#utility.yul\":11369:11387   */\n      add\n        /* \"#utility.yul\":11360:11366   */\n      dup5\n        /* \"#utility.yul\":11316:11388   */\n      tag_245\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10953:11395   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11401:11592   */\n    tag_221:\n        /* \"#utility.yul\":11441:11444   */\n      0x00\n        /* \"#utility.yul\":11460:11480   */\n      tag_382\n        /* \"#utility.yul\":11478:11479   */\n      dup3\n        /* \"#utility.yul\":11460:11480   */\n      tag_240\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11455:11480   */\n      swap2\n      pop\n        /* \"#utility.yul\":11494:11514   */\n      tag_383\n        /* \"#utility.yul\":11512:11513   */\n      dup4\n        /* \"#utility.yul\":11494:11514   */\n      tag_240\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11489:11514   */\n      swap3\n      pop\n        /* \"#utility.yul\":11537:11538   */\n      dup3\n        /* \"#utility.yul\":11534:11535   */\n      dup3\n        /* \"#utility.yul\":11530:11539   */\n      add\n        /* \"#utility.yul\":11523:11539   */\n      swap1\n      pop\n        /* \"#utility.yul\":11558:11561   */\n      dup1\n        /* \"#utility.yul\":11555:11556   */\n      dup3\n        /* \"#utility.yul\":11552:11562   */\n      gt\n        /* \"#utility.yul\":11549:11585   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":11565:11583   */\n      tag_385\n      tag_254\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11549:11585   */\n    tag_384:\n        /* \"#utility.yul\":11401:11592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207c71a7887e3bb518f4d22bf2f9a9f4c1831f7388abd3ef6a35a7f12ed0111e7b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1123": {
									"entryPoint": null,
									"id": 1123,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 788,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 593,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1272": {
									"entryPoint": 921,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1339,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11659:8",
										"nodeType": "YulBlock",
										"src": "0:11659:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:32:8",
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nativeSrc": "389:16:8",
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:8",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nativeSrc": "460:79:8",
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:8",
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nativeSrc": "519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nativeSrc": "519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nativeSrc": "490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nativeSrc": "480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nativeSrc": "473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nativeSrc": "470:63:8",
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:8",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nativeSrc": "608:80:8",
													"nodeType": "YulBlock",
													"src": "608:80:8",
													"statements": [
														{
															"nativeSrc": "618:22:8",
															"nodeType": "YulAssignment",
															"src": "618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:8"
																},
																"nativeSrc": "627:13:8",
																"nodeType": "YulFunctionCall",
																"src": "627:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:8"
																},
																"nativeSrc": "649:33:8",
																"nodeType": "YulFunctionCall",
																"src": "649:33:8"
															},
															"nativeSrc": "649:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:8",
														"nodeType": "YulTypedName",
														"src": "586:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:8",
														"nodeType": "YulTypedName",
														"src": "594:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:8",
														"nodeType": "YulTypedName",
														"src": "602:5:8",
														"type": ""
													}
												],
												"src": "545:143:8"
											},
											{
												"body": {
													"nativeSrc": "739:81:8",
													"nodeType": "YulBlock",
													"src": "739:81:8",
													"statements": [
														{
															"nativeSrc": "749:65:8",
															"nodeType": "YulAssignment",
															"src": "749:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:8",
																		"nodeType": "YulLiteral",
																		"src": "771:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:8"
																},
																"nativeSrc": "760:54:8",
																"nodeType": "YulFunctionCall",
																"src": "760:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:8",
														"nodeType": "YulTypedName",
														"src": "721:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:8",
														"nodeType": "YulTypedName",
														"src": "731:7:8",
														"type": ""
													}
												],
												"src": "694:126:8"
											},
											{
												"body": {
													"nativeSrc": "871:51:8",
													"nodeType": "YulBlock",
													"src": "871:51:8",
													"statements": [
														{
															"nativeSrc": "881:35:8",
															"nodeType": "YulAssignment",
															"src": "881:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:8"
																},
																"nativeSrc": "892:24:8",
																"nodeType": "YulFunctionCall",
																"src": "892:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:8",
														"nodeType": "YulTypedName",
														"src": "853:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:8",
														"nodeType": "YulTypedName",
														"src": "863:7:8",
														"type": ""
													}
												],
												"src": "826:96:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1316:552:8",
													"nodeType": "YulBlock",
													"src": "1316:552:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:8",
																"nodeType": "YulBlock",
																"src": "1362:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:8"
																			},
																			"nativeSrc": "1364:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:8"
																		},
																		"nativeSrc": "1364:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:8"
																		},
																		"nativeSrc": "1333:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:8"
																},
																"nativeSrc": "1329:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:8"
															},
															"nativeSrc": "1326:119:8",
															"nodeType": "YulIf",
															"src": "1326:119:8"
														},
														{
															"nativeSrc": "1455:128:8",
															"nodeType": "YulBlock",
															"src": "1455:128:8",
															"statements": [
																{
																	"nativeSrc": "1470:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:8"
																				},
																				"nativeSrc": "1541:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1509:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:8"
																		},
																		"nativeSrc": "1509:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:8",
															"nodeType": "YulBlock",
															"src": "1593:129:8",
															"statements": [
																{
																	"nativeSrc": "1608:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:8"
																				},
																				"nativeSrc": "1680:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:8"
																		},
																		"nativeSrc": "1648:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:8",
															"nodeType": "YulBlock",
															"src": "1732:129:8",
															"statements": [
																{
																	"nativeSrc": "1747:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:8"
																				},
																				"nativeSrc": "1819:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:8"
																		},
																		"nativeSrc": "1787:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:8",
														"nodeType": "YulTypedName",
														"src": "1270:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:8",
														"nodeType": "YulTypedName",
														"src": "1281:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:8",
														"nodeType": "YulTypedName",
														"src": "1293:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:8",
														"nodeType": "YulTypedName",
														"src": "1301:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:8",
														"nodeType": "YulTypedName",
														"src": "1309:6:8",
														"type": ""
													}
												],
												"src": "1205:663:8"
											},
											{
												"body": {
													"nativeSrc": "1933:40:8",
													"nodeType": "YulBlock",
													"src": "1933:40:8",
													"statements": [
														{
															"nativeSrc": "1944:22:8",
															"nodeType": "YulAssignment",
															"src": "1944:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1960:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1960:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1954:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1954:5:8"
																},
																"nativeSrc": "1954:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1954:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1874:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1916:5:8",
														"nodeType": "YulTypedName",
														"src": "1916:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1926:6:8",
														"nodeType": "YulTypedName",
														"src": "1926:6:8",
														"type": ""
													}
												],
												"src": "1874:99:8"
											},
											{
												"body": {
													"nativeSrc": "2007:152:8",
													"nodeType": "YulBlock",
													"src": "2007:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2024:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2024:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2027:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:8"
																},
																"nativeSrc": "2017:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2017:88:8"
															},
															"nativeSrc": "2017:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2017:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2121:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2121:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2124:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2124:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:8"
																},
																"nativeSrc": "2114:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2114:15:8"
															},
															"nativeSrc": "2114:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2114:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2145:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2145:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2148:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2148:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:8"
																},
																"nativeSrc": "2138:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2138:15:8"
															},
															"nativeSrc": "2138:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2138:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1979:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1979:180:8"
											},
											{
												"body": {
													"nativeSrc": "2193:152:8",
													"nodeType": "YulBlock",
													"src": "2193:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2210:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2213:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2213:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:8"
																},
																"nativeSrc": "2203:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2203:88:8"
															},
															"nativeSrc": "2203:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2203:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2307:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2307:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2310:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2310:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:8"
																},
																"nativeSrc": "2300:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2300:15:8"
															},
															"nativeSrc": "2300:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2300:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2331:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2331:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2334:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:8"
																},
																"nativeSrc": "2324:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2324:15:8"
															},
															"nativeSrc": "2324:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2324:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2165:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2165:180:8"
											},
											{
												"body": {
													"nativeSrc": "2402:269:8",
													"nodeType": "YulBlock",
													"src": "2402:269:8",
													"statements": [
														{
															"nativeSrc": "2412:22:8",
															"nodeType": "YulAssignment",
															"src": "2412:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2426:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2426:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2422:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:8"
																},
																"nativeSrc": "2422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2422:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2412:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:8"
																}
															]
														},
														{
															"nativeSrc": "2443:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2443:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2473:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2473:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2479:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2479:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2469:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:8"
																},
																"nativeSrc": "2469:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2469:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2447:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2447:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2520:51:8",
																"nodeType": "YulBlock",
																"src": "2520:51:8",
																"statements": [
																	{
																		"nativeSrc": "2534:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2534:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2548:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2548:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2556:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2556:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2544:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2544:3:8"
																			},
																			"nativeSrc": "2544:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2544:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2534:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2534:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2500:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2500:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:8"
																},
																"nativeSrc": "2493:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2493:26:8"
															},
															"nativeSrc": "2490:81:8",
															"nodeType": "YulIf",
															"src": "2490:81:8"
														},
														{
															"body": {
																"nativeSrc": "2623:42:8",
																"nodeType": "YulBlock",
																"src": "2623:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2637:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2637:16:8"
																			},
																			"nativeSrc": "2637:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:18:8"
																		},
																		"nativeSrc": "2637:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2587:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2587:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2610:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2618:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2618:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2607:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2607:2:8"
																		},
																		"nativeSrc": "2607:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2584:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2584:2:8"
																},
																"nativeSrc": "2584:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2584:38:8"
															},
															"nativeSrc": "2581:84:8",
															"nodeType": "YulIf",
															"src": "2581:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2351:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2386:4:8",
														"nodeType": "YulTypedName",
														"src": "2386:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2395:6:8",
														"nodeType": "YulTypedName",
														"src": "2395:6:8",
														"type": ""
													}
												],
												"src": "2351:320:8"
											},
											{
												"body": {
													"nativeSrc": "2731:87:8",
													"nodeType": "YulBlock",
													"src": "2731:87:8",
													"statements": [
														{
															"nativeSrc": "2741:11:8",
															"nodeType": "YulAssignment",
															"src": "2741:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2749:3:8",
																"nodeType": "YulIdentifier",
																"src": "2749:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2741:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2741:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2769:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2769:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2772:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2772:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2762:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:8"
																},
																"nativeSrc": "2762:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2762:14:8"
															},
															"nativeSrc": "2762:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2762:14:8"
														},
														{
															"nativeSrc": "2785:26:8",
															"nodeType": "YulAssignment",
															"src": "2785:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2803:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2793:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2793:9:8"
																},
																"nativeSrc": "2793:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2793:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2785:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2785:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2677:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2718:3:8",
														"nodeType": "YulTypedName",
														"src": "2718:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2726:4:8",
														"nodeType": "YulTypedName",
														"src": "2726:4:8",
														"type": ""
													}
												],
												"src": "2677:141:8"
											},
											{
												"body": {
													"nativeSrc": "2868:49:8",
													"nodeType": "YulBlock",
													"src": "2868:49:8",
													"statements": [
														{
															"nativeSrc": "2878:33:8",
															"nodeType": "YulAssignment",
															"src": "2878:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2903:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:8"
																		},
																		"nativeSrc": "2892:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2908:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																},
																"nativeSrc": "2888:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2888:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2824:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2851:5:8",
														"nodeType": "YulTypedName",
														"src": "2851:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2861:6:8",
														"nodeType": "YulTypedName",
														"src": "2861:6:8",
														"type": ""
													}
												],
												"src": "2824:93:8"
											},
											{
												"body": {
													"nativeSrc": "2976:54:8",
													"nodeType": "YulBlock",
													"src": "2976:54:8",
													"statements": [
														{
															"nativeSrc": "2986:37:8",
															"nodeType": "YulAssignment",
															"src": "2986:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3011:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3011:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3017:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3017:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:8"
																},
																"nativeSrc": "3007:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3007:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2986:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2986:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2923:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2951:4:8",
														"nodeType": "YulTypedName",
														"src": "2951:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2957:5:8",
														"nodeType": "YulTypedName",
														"src": "2957:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2967:8:8",
														"nodeType": "YulTypedName",
														"src": "2967:8:8",
														"type": ""
													}
												],
												"src": "2923:107:8"
											},
											{
												"body": {
													"nativeSrc": "3112:317:8",
													"nodeType": "YulBlock",
													"src": "3112:317:8",
													"statements": [
														{
															"nativeSrc": "3122:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3122:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3143:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "3143:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3155:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:8"
																},
																"nativeSrc": "3139:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3139:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3126:9:8",
																	"nodeType": "YulTypedName",
																	"src": "3126:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3166:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3166:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3197:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3197:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3208:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3208:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3178:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3178:18:8"
																},
																"nativeSrc": "3178:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3178:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3170:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3170:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3284:51:8",
															"nodeType": "YulAssignment",
															"src": "3284:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3315:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3326:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3326:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3296:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3296:18:8"
																},
																"nativeSrc": "3296:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3296:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3284:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3284:8:8"
																}
															]
														},
														{
															"nativeSrc": "3344:30:8",
															"nodeType": "YulAssignment",
															"src": "3344:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3357:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3357:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3368:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3368:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3364:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:8"
																		},
																		"nativeSrc": "3364:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3364:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3353:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:8"
																},
																"nativeSrc": "3353:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3353:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3344:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3344:5:8"
																}
															]
														},
														{
															"nativeSrc": "3383:40:8",
															"nodeType": "YulAssignment",
															"src": "3383:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3396:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3396:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3407:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3407:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3417:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3417:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3403:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:8"
																		},
																		"nativeSrc": "3403:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3393:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3393:2:8"
																},
																"nativeSrc": "3393:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3393:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3036:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3073:5:8",
														"nodeType": "YulTypedName",
														"src": "3073:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3080:10:8",
														"nodeType": "YulTypedName",
														"src": "3080:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3092:8:8",
														"nodeType": "YulTypedName",
														"src": "3092:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3105:6:8",
														"nodeType": "YulTypedName",
														"src": "3105:6:8",
														"type": ""
													}
												],
												"src": "3036:393:8"
											},
											{
												"body": {
													"nativeSrc": "3467:28:8",
													"nodeType": "YulBlock",
													"src": "3467:28:8",
													"statements": [
														{
															"nativeSrc": "3477:12:8",
															"nodeType": "YulAssignment",
															"src": "3477:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3484:5:8",
																"nodeType": "YulIdentifier",
																"src": "3484:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3435:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3453:5:8",
														"nodeType": "YulTypedName",
														"src": "3453:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3463:3:8",
														"nodeType": "YulTypedName",
														"src": "3463:3:8",
														"type": ""
													}
												],
												"src": "3435:60:8"
											},
											{
												"body": {
													"nativeSrc": "3561:82:8",
													"nodeType": "YulBlock",
													"src": "3561:82:8",
													"statements": [
														{
															"nativeSrc": "3571:66:8",
															"nodeType": "YulAssignment",
															"src": "3571:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3629:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3629:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3611:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3611:17:8"
																				},
																				"nativeSrc": "3611:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3611:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3602:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3602:8:8"
																		},
																		"nativeSrc": "3602:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3602:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3584:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3584:17:8"
																},
																"nativeSrc": "3584:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3584:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3571:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3501:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3541:5:8",
														"nodeType": "YulTypedName",
														"src": "3541:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3551:9:8",
														"nodeType": "YulTypedName",
														"src": "3551:9:8",
														"type": ""
													}
												],
												"src": "3501:142:8"
											},
											{
												"body": {
													"nativeSrc": "3696:28:8",
													"nodeType": "YulBlock",
													"src": "3696:28:8",
													"statements": [
														{
															"nativeSrc": "3706:12:8",
															"nodeType": "YulAssignment",
															"src": "3706:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3713:5:8",
																"nodeType": "YulIdentifier",
																"src": "3713:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3706:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3649:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3682:5:8",
														"nodeType": "YulTypedName",
														"src": "3682:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3692:3:8",
														"nodeType": "YulTypedName",
														"src": "3692:3:8",
														"type": ""
													}
												],
												"src": "3649:75:8"
											},
											{
												"body": {
													"nativeSrc": "3806:193:8",
													"nodeType": "YulBlock",
													"src": "3806:193:8",
													"statements": [
														{
															"nativeSrc": "3816:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3816:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3871:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3871:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3840:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3840:30:8"
																},
																"nativeSrc": "3840:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3840:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3820:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3820:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3895:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3895:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3935:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3935:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3929:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3929:5:8"
																				},
																				"nativeSrc": "3929:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3929:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3942:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3974:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3974:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3950:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3950:23:8"
																				},
																				"nativeSrc": "3950:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3950:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3901:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3901:27:8"
																		},
																		"nativeSrc": "3901:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3888:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:8"
																},
																"nativeSrc": "3888:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3888:105:8"
															},
															"nativeSrc": "3888:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3888:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3730:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3783:4:8",
														"nodeType": "YulTypedName",
														"src": "3783:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3789:6:8",
														"nodeType": "YulTypedName",
														"src": "3789:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3797:7:8",
														"nodeType": "YulTypedName",
														"src": "3797:7:8",
														"type": ""
													}
												],
												"src": "3730:269:8"
											},
											{
												"body": {
													"nativeSrc": "4054:24:8",
													"nodeType": "YulBlock",
													"src": "4054:24:8",
													"statements": [
														{
															"nativeSrc": "4064:8:8",
															"nodeType": "YulAssignment",
															"src": "4064:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4071:1:8",
																"nodeType": "YulLiteral",
																"src": "4071:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4064:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4005:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4050:3:8",
														"nodeType": "YulTypedName",
														"src": "4050:3:8",
														"type": ""
													}
												],
												"src": "4005:73:8"
											},
											{
												"body": {
													"nativeSrc": "4137:136:8",
													"nodeType": "YulBlock",
													"src": "4137:136:8",
													"statements": [
														{
															"nativeSrc": "4147:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4147:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4161:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:30:8"
																},
																"nativeSrc": "4161:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4151:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4151:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4246:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4246:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4252:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4252:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4260:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4260:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4202:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4202:43:8"
																},
																"nativeSrc": "4202:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4202:65:8"
															},
															"nativeSrc": "4202:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4202:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4084:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4123:4:8",
														"nodeType": "YulTypedName",
														"src": "4123:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4129:6:8",
														"nodeType": "YulTypedName",
														"src": "4129:6:8",
														"type": ""
													}
												],
												"src": "4084:189:8"
											},
											{
												"body": {
													"nativeSrc": "4329:136:8",
													"nodeType": "YulBlock",
													"src": "4329:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4396:63:8",
																"nodeType": "YulBlock",
																"src": "4396:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4440:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4440:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4447:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4447:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4410:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4410:29:8"
																			},
																			"nativeSrc": "4410:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4410:39:8"
																		},
																		"nativeSrc": "4410:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4410:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4349:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4349:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4356:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4356:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4346:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4346:2:8"
																},
																"nativeSrc": "4346:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4346:14:8"
															},
															"nativeSrc": "4339:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4361:26:8",
																"nodeType": "YulBlock",
																"src": "4361:26:8",
																"statements": [
																	{
																		"nativeSrc": "4363:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4363:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4376:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4376:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4383:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4383:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4372:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4372:3:8"
																			},
																			"nativeSrc": "4372:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4372:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4363:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4363:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4343:2:8",
																"nodeType": "YulBlock",
																"src": "4343:2:8",
																"statements": []
															},
															"src": "4339:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4279:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4317:5:8",
														"nodeType": "YulTypedName",
														"src": "4317:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4324:3:8",
														"nodeType": "YulTypedName",
														"src": "4324:3:8",
														"type": ""
													}
												],
												"src": "4279:186:8"
											},
											{
												"body": {
													"nativeSrc": "4550:464:8",
													"nodeType": "YulBlock",
													"src": "4550:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4576:431:8",
																"nodeType": "YulBlock",
																"src": "4576:431:8",
																"statements": [
																	{
																		"nativeSrc": "4590:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4590:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4638:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4638:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4606:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4606:31:8"
																			},
																			"nativeSrc": "4606:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4606:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4594:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4594:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4657:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4657:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4680:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4680:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4708:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4708:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4690:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4690:17:8"
																					},
																					"nativeSrc": "4690:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4690:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4676:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4676:3:8"
																			},
																			"nativeSrc": "4676:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4676:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4661:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4661:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4877:27:8",
																			"nodeType": "YulBlock",
																			"src": "4877:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4879:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4879:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4894:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4894:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4879:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4879:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4861:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4861:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4873:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4873:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4858:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4858:2:8"
																			},
																			"nativeSrc": "4858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4858:18:8"
																		},
																		"nativeSrc": "4855:49:8",
																		"nodeType": "YulIf",
																		"src": "4855:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4946:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4946:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4963:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4963:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4991:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4991:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4973:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4973:17:8"
																							},
																							"nativeSrc": "4973:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4973:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4959:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4959:3:8"
																					},
																					"nativeSrc": "4959:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4959:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4917:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4917:28:8"
																			},
																			"nativeSrc": "4917:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4917:80:8"
																		},
																		"nativeSrc": "4917:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4917:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4567:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4567:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4572:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4572:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4564:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4564:2:8"
																},
																"nativeSrc": "4564:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4564:11:8"
															},
															"nativeSrc": "4561:446:8",
															"nodeType": "YulIf",
															"src": "4561:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4471:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4526:5:8",
														"nodeType": "YulTypedName",
														"src": "4526:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4533:3:8",
														"nodeType": "YulTypedName",
														"src": "4533:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4538:10:8",
														"nodeType": "YulTypedName",
														"src": "4538:10:8",
														"type": ""
													}
												],
												"src": "4471:543:8"
											},
											{
												"body": {
													"nativeSrc": "5083:54:8",
													"nodeType": "YulBlock",
													"src": "5083:54:8",
													"statements": [
														{
															"nativeSrc": "5093:37:8",
															"nodeType": "YulAssignment",
															"src": "5093:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5118:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5118:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5124:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5124:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:8"
																},
																"nativeSrc": "5114:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5114:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5093:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5093:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5020:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5058:4:8",
														"nodeType": "YulTypedName",
														"src": "5058:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5064:5:8",
														"nodeType": "YulTypedName",
														"src": "5064:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5074:8:8",
														"nodeType": "YulTypedName",
														"src": "5074:8:8",
														"type": ""
													}
												],
												"src": "5020:117:8"
											},
											{
												"body": {
													"nativeSrc": "5194:118:8",
													"nodeType": "YulBlock",
													"src": "5194:118:8",
													"statements": [
														{
															"nativeSrc": "5204:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5204:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5253:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5253:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5256:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5256:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5249:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:8"
																				},
																				"nativeSrc": "5249:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5268:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5268:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5264:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5264:3:8"
																				},
																				"nativeSrc": "5264:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5264:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5220:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5220:28:8"
																		},
																		"nativeSrc": "5220:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5220:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5216:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:8"
																},
																"nativeSrc": "5216:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5216:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5208:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5208:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5281:25:8",
															"nodeType": "YulAssignment",
															"src": "5281:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5295:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5295:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5301:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5301:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5291:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5291:3:8"
																},
																"nativeSrc": "5291:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5291:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5281:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5143:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5171:4:8",
														"nodeType": "YulTypedName",
														"src": "5171:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5177:5:8",
														"nodeType": "YulTypedName",
														"src": "5177:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5187:6:8",
														"nodeType": "YulTypedName",
														"src": "5187:6:8",
														"type": ""
													}
												],
												"src": "5143:169:8"
											},
											{
												"body": {
													"nativeSrc": "5398:214:8",
													"nodeType": "YulBlock",
													"src": "5398:214:8",
													"statements": [
														{
															"nativeSrc": "5531:37:8",
															"nodeType": "YulAssignment",
															"src": "5531:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5558:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5558:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5564:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5564:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5539:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5539:18:8"
																},
																"nativeSrc": "5539:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5539:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5531:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:8"
																}
															]
														},
														{
															"nativeSrc": "5577:29:8",
															"nodeType": "YulAssignment",
															"src": "5577:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5588:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5588:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5598:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5598:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5601:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5601:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5594:3:8"
																		},
																		"nativeSrc": "5594:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5585:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5585:2:8"
																},
																"nativeSrc": "5585:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5585:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5577:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5577:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5317:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5379:4:8",
														"nodeType": "YulTypedName",
														"src": "5379:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5385:3:8",
														"nodeType": "YulTypedName",
														"src": "5385:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5393:4:8",
														"nodeType": "YulTypedName",
														"src": "5393:4:8",
														"type": ""
													}
												],
												"src": "5317:295:8"
											},
											{
												"body": {
													"nativeSrc": "5709:1303:8",
													"nodeType": "YulBlock",
													"src": "5709:1303:8",
													"statements": [
														{
															"nativeSrc": "5720:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5720:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5734:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5734:32:8"
																},
																"nativeSrc": "5734:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5734:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5724:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5724:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5856:22:8",
																"nodeType": "YulBlock",
																"src": "5856:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5858:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:8"
																			},
																			"nativeSrc": "5858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:8"
																		},
																		"nativeSrc": "5858:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5828:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5836:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5825:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:8"
																},
																"nativeSrc": "5825:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5825:30:8"
															},
															"nativeSrc": "5822:56:8",
															"nodeType": "YulIf",
															"src": "5822:56:8"
														},
														{
															"nativeSrc": "5888:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5888:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5934:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5934:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5928:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5928:5:8"
																		},
																		"nativeSrc": "5928:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5902:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5902:25:8"
																},
																"nativeSrc": "5902:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5902:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5892:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5892:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6033:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6033:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6039:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6039:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6047:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5987:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5987:45:8"
																},
																"nativeSrc": "5987:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5987:67:8"
															},
															"nativeSrc": "5987:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5987:67:8"
														},
														{
															"nativeSrc": "6064:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6064:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6081:1:8",
																"nodeType": "YulLiteral",
																"src": "6081:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6068:9:8",
																	"nodeType": "YulTypedName",
																	"src": "6068:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6092:17:8",
															"nodeType": "YulAssignment",
															"src": "6092:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6105:4:8",
																"nodeType": "YulLiteral",
																"src": "6105:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6092:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6092:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6156:611:8",
																		"nodeType": "YulBlock",
																		"src": "6156:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6170:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6170:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6189:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6189:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6201:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6201:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6197:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6197:3:8"
																							},
																							"nativeSrc": "6197:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6197:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6185:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6185:3:8"
																					},
																					"nativeSrc": "6185:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6185:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6174:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6174:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6221:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6221:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6267:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6267:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6235:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6235:31:8"
																					},
																					"nativeSrc": "6235:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6235:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6225:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6225:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6285:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6285:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6294:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6294:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6289:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6289:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6353:163:8",
																					"nodeType": "YulBlock",
																					"src": "6353:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6378:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6378:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6396:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6396:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6401:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6401:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6392:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6392:3:8"
																												},
																												"nativeSrc": "6392:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6392:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6386:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6386:5:8"
																										},
																										"nativeSrc": "6386:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6386:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6371:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6371:6:8"
																								},
																								"nativeSrc": "6371:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6371:42:8"
																							},
																							"nativeSrc": "6371:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6371:42:8"
																						},
																						{
																							"nativeSrc": "6430:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6430:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6444:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6444:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6452:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6452:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6440:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6440:3:8"
																								},
																								"nativeSrc": "6440:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6440:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6430:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6430:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6471:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6471:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6488:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6488:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6499:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6499:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6484:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6484:3:8"
																								},
																								"nativeSrc": "6484:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6484:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6471:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6471:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6319:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6319:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6322:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6322:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6316:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6316:2:8"
																					},
																					"nativeSrc": "6316:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6316:14:8"
																				},
																				"nativeSrc": "6308:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6331:21:8",
																					"nodeType": "YulBlock",
																					"src": "6331:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6333:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6333:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6342:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6342:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6345:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6345:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6338:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6338:3:8"
																								},
																								"nativeSrc": "6338:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6338:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6333:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6333:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6312:3:8",
																					"nodeType": "YulBlock",
																					"src": "6312:3:8",
																					"statements": []
																				},
																				"src": "6308:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6552:156:8",
																					"nodeType": "YulBlock",
																					"src": "6552:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6570:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6570:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6597:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6597:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6602:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6602:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6593:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6593:3:8"
																										},
																										"nativeSrc": "6593:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6593:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6587:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6587:5:8"
																								},
																								"nativeSrc": "6587:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6587:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6574:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6574:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6637:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6637:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6664:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6664:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6679:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6679:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6687:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6687:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6675:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6675:3:8"
																												},
																												"nativeSrc": "6675:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6675:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6645:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6645:18:8"
																										},
																										"nativeSrc": "6645:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6645:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6630:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6630:6:8"
																								},
																								"nativeSrc": "6630:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6630:64:8"
																							},
																							"nativeSrc": "6630:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6630:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6535:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6535:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6544:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6544:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6532:2:8"
																					},
																					"nativeSrc": "6532:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6532:19:8"
																				},
																				"nativeSrc": "6529:179:8",
																				"nodeType": "YulIf",
																				"src": "6529:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6728:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6728:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6742:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6742:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6750:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6750:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6738:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6738:3:8"
																									},
																									"nativeSrc": "6738:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6738:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6754:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6754:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6734:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6734:3:8"
																							},
																							"nativeSrc": "6734:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6734:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6721:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6721:6:8"
																					},
																					"nativeSrc": "6721:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6721:36:8"
																				},
																				"nativeSrc": "6721:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6721:36:8"
																			}
																		]
																	},
																	"nativeSrc": "6149:618:8",
																	"nodeType": "YulCase",
																	"src": "6149:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6784:222:8",
																		"nodeType": "YulBlock",
																		"src": "6784:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6798:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6798:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6811:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6811:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6802:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6802:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6835:67:8",
																					"nodeType": "YulBlock",
																					"src": "6835:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6853:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6853:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6872:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6872:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6877:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6877:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6868:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6868:3:8"
																										},
																										"nativeSrc": "6868:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6868:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6862:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6862:5:8"
																								},
																								"nativeSrc": "6862:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6862:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6853:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6853:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6828:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6828:6:8"
																				},
																				"nativeSrc": "6825:77:8",
																				"nodeType": "YulIf",
																				"src": "6825:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6922:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6922:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6981:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6981:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6988:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6988:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6928:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6928:52:8"
																							},
																							"nativeSrc": "6928:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6928:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6915:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6915:6:8"
																					},
																					"nativeSrc": "6915:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6915:81:8"
																				},
																				"nativeSrc": "6915:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6915:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6776:230:8",
																	"nodeType": "YulCase",
																	"src": "6776:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6129:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6129:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6137:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6126:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6126:2:8"
																},
																"nativeSrc": "6126:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6126:14:8"
															},
															"nativeSrc": "6119:887:8",
															"nodeType": "YulSwitch",
															"src": "6119:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5617:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5698:4:8",
														"nodeType": "YulTypedName",
														"src": "5698:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5704:3:8",
														"nodeType": "YulTypedName",
														"src": "5704:3:8",
														"type": ""
													}
												],
												"src": "5617:1395:8"
											},
											{
												"body": {
													"nativeSrc": "7083:53:8",
													"nodeType": "YulBlock",
													"src": "7083:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7100:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7123:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7123:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7105:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7105:17:8"
																		},
																		"nativeSrc": "7105:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7093:6:8"
																},
																"nativeSrc": "7093:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7093:37:8"
															},
															"nativeSrc": "7093:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7093:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7018:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7071:5:8",
														"nodeType": "YulTypedName",
														"src": "7071:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7078:3:8",
														"nodeType": "YulTypedName",
														"src": "7078:3:8",
														"type": ""
													}
												],
												"src": "7018:118:8"
											},
											{
												"body": {
													"nativeSrc": "7240:124:8",
													"nodeType": "YulBlock",
													"src": "7240:124:8",
													"statements": [
														{
															"nativeSrc": "7250:26:8",
															"nodeType": "YulAssignment",
															"src": "7250:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7262:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7262:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7273:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7258:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:8"
																},
																"nativeSrc": "7258:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7258:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7250:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7330:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7330:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7343:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7343:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7354:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7339:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7339:3:8"
																		},
																		"nativeSrc": "7339:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7286:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7286:43:8"
																},
																"nativeSrc": "7286:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7286:71:8"
															},
															"nativeSrc": "7286:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7286:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7142:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7212:9:8",
														"nodeType": "YulTypedName",
														"src": "7212:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7224:6:8",
														"nodeType": "YulTypedName",
														"src": "7224:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7235:4:8",
														"nodeType": "YulTypedName",
														"src": "7235:4:8",
														"type": ""
													}
												],
												"src": "7142:222:8"
											},
											{
												"body": {
													"nativeSrc": "7466:73:8",
													"nodeType": "YulBlock",
													"src": "7466:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7483:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7483:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7488:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7488:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7476:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:8"
																},
																"nativeSrc": "7476:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7476:19:8"
															},
															"nativeSrc": "7476:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "7476:19:8"
														},
														{
															"nativeSrc": "7504:29:8",
															"nodeType": "YulAssignment",
															"src": "7504:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7523:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7523:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7528:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7528:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7519:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7519:3:8"
																},
																"nativeSrc": "7519:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7519:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7504:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "7504:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7370:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7438:3:8",
														"nodeType": "YulTypedName",
														"src": "7438:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7443:6:8",
														"nodeType": "YulTypedName",
														"src": "7443:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7454:11:8",
														"nodeType": "YulTypedName",
														"src": "7454:11:8",
														"type": ""
													}
												],
												"src": "7370:169:8"
											},
											{
												"body": {
													"nativeSrc": "7651:62:8",
													"nodeType": "YulBlock",
													"src": "7651:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7673:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7673:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7681:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7681:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7669:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7669:3:8"
																		},
																		"nativeSrc": "7669:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964207461782077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "7685:20:8",
																		"nodeType": "YulLiteral",
																		"src": "7685:20:8",
																		"type": "",
																		"value": "Invalid tax wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7662:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7662:6:8"
																},
																"nativeSrc": "7662:44:8",
																"nodeType": "YulFunctionCall",
																"src": "7662:44:8"
															},
															"nativeSrc": "7662:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "7662:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
												"nativeSrc": "7545:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7643:6:8",
														"nodeType": "YulTypedName",
														"src": "7643:6:8",
														"type": ""
													}
												],
												"src": "7545:168:8"
											},
											{
												"body": {
													"nativeSrc": "7865:220:8",
													"nodeType": "YulBlock",
													"src": "7865:220:8",
													"statements": [
														{
															"nativeSrc": "7875:74:8",
															"nodeType": "YulAssignment",
															"src": "7875:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7941:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7946:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7882:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7882:58:8"
																},
																"nativeSrc": "7882:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7882:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7875:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8047:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8047:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
																	"nativeSrc": "7958:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7958:88:8"
																},
																"nativeSrc": "7958:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7958:93:8"
															},
															"nativeSrc": "7958:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7958:93:8"
														},
														{
															"nativeSrc": "8060:19:8",
															"nodeType": "YulAssignment",
															"src": "8060:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8071:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8071:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8076:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8076:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8067:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8067:3:8"
																},
																"nativeSrc": "8067:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8067:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8060:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7719:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7853:3:8",
														"nodeType": "YulTypedName",
														"src": "7853:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7861:3:8",
														"nodeType": "YulTypedName",
														"src": "7861:3:8",
														"type": ""
													}
												],
												"src": "7719:366:8"
											},
											{
												"body": {
													"nativeSrc": "8262:248:8",
													"nodeType": "YulBlock",
													"src": "8262:248:8",
													"statements": [
														{
															"nativeSrc": "8272:26:8",
															"nodeType": "YulAssignment",
															"src": "8272:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8284:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8284:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8295:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8295:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8280:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8280:3:8"
																},
																"nativeSrc": "8280:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8280:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8272:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8272:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8319:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8319:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8330:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8330:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8315:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8315:3:8"
																		},
																		"nativeSrc": "8315:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8315:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8338:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8338:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8344:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8344:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8334:3:8"
																		},
																		"nativeSrc": "8334:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8334:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8308:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8308:6:8"
																},
																"nativeSrc": "8308:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8308:47:8"
															},
															"nativeSrc": "8308:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8308:47:8"
														},
														{
															"nativeSrc": "8364:139:8",
															"nodeType": "YulAssignment",
															"src": "8364:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8498:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8498:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8372:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8372:124:8"
																},
																"nativeSrc": "8372:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8372:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8091:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8242:9:8",
														"nodeType": "YulTypedName",
														"src": "8242:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8257:4:8",
														"nodeType": "YulTypedName",
														"src": "8257:4:8",
														"type": ""
													}
												],
												"src": "8091:419:8"
											},
											{
												"body": {
													"nativeSrc": "8622:61:8",
													"nodeType": "YulBlock",
													"src": "8622:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8644:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8644:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8652:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8652:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8640:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8640:3:8"
																		},
																		"nativeSrc": "8640:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8640:14:8"
																	},
																	{
																		"hexValue": "546178206d75737420626520302d313030",
																		"kind": "string",
																		"nativeSrc": "8656:19:8",
																		"nodeType": "YulLiteral",
																		"src": "8656:19:8",
																		"type": "",
																		"value": "Tax must be 0-100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8633:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8633:6:8"
																},
																"nativeSrc": "8633:43:8",
																"nodeType": "YulFunctionCall",
																"src": "8633:43:8"
															},
															"nativeSrc": "8633:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "8633:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
												"nativeSrc": "8516:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8614:6:8",
														"nodeType": "YulTypedName",
														"src": "8614:6:8",
														"type": ""
													}
												],
												"src": "8516:167:8"
											},
											{
												"body": {
													"nativeSrc": "8835:220:8",
													"nodeType": "YulBlock",
													"src": "8835:220:8",
													"statements": [
														{
															"nativeSrc": "8845:74:8",
															"nodeType": "YulAssignment",
															"src": "8845:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8911:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8911:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8916:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8916:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8852:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8852:58:8"
																},
																"nativeSrc": "8852:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8852:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8845:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8845:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9017:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9017:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
																	"nativeSrc": "8928:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8928:88:8"
																},
																"nativeSrc": "8928:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8928:93:8"
															},
															"nativeSrc": "8928:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8928:93:8"
														},
														{
															"nativeSrc": "9030:19:8",
															"nodeType": "YulAssignment",
															"src": "9030:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9041:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9041:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9046:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9046:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9037:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9037:3:8"
																},
																"nativeSrc": "9037:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9037:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9030:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9030:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8689:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8823:3:8",
														"nodeType": "YulTypedName",
														"src": "8823:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8831:3:8",
														"nodeType": "YulTypedName",
														"src": "8831:3:8",
														"type": ""
													}
												],
												"src": "8689:366:8"
											},
											{
												"body": {
													"nativeSrc": "9232:248:8",
													"nodeType": "YulBlock",
													"src": "9232:248:8",
													"statements": [
														{
															"nativeSrc": "9242:26:8",
															"nodeType": "YulAssignment",
															"src": "9242:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9254:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9254:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9265:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9265:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9250:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9250:3:8"
																},
																"nativeSrc": "9250:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9250:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9242:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9242:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9289:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9289:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9300:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9300:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9285:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9285:3:8"
																		},
																		"nativeSrc": "9285:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9285:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9308:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9308:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9314:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9314:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9304:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9304:3:8"
																		},
																		"nativeSrc": "9304:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9304:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9278:6:8"
																},
																"nativeSrc": "9278:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9278:47:8"
															},
															"nativeSrc": "9278:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9278:47:8"
														},
														{
															"nativeSrc": "9334:139:8",
															"nodeType": "YulAssignment",
															"src": "9334:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9468:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9468:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9342:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9342:124:8"
																},
																"nativeSrc": "9342:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9342:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9334:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9334:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9061:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9212:9:8",
														"nodeType": "YulTypedName",
														"src": "9212:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9227:4:8",
														"nodeType": "YulTypedName",
														"src": "9227:4:8",
														"type": ""
													}
												],
												"src": "9061:419:8"
											},
											{
												"body": {
													"nativeSrc": "9514:152:8",
													"nodeType": "YulBlock",
													"src": "9514:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9531:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9531:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9534:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9534:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9524:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9524:6:8"
																},
																"nativeSrc": "9524:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9524:88:8"
															},
															"nativeSrc": "9524:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9524:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9628:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9628:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9631:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9631:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9621:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:8"
																},
																"nativeSrc": "9621:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9621:15:8"
															},
															"nativeSrc": "9621:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9621:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9652:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9652:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9655:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9655:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9645:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9645:6:8"
																},
																"nativeSrc": "9645:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9645:15:8"
															},
															"nativeSrc": "9645:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9645:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9486:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9486:180:8"
											},
											{
												"body": {
													"nativeSrc": "9720:362:8",
													"nodeType": "YulBlock",
													"src": "9720:362:8",
													"statements": [
														{
															"nativeSrc": "9730:25:8",
															"nodeType": "YulAssignment",
															"src": "9730:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9753:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9753:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9735:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9735:17:8"
																},
																"nativeSrc": "9735:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9735:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9730:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9730:1:8"
																}
															]
														},
														{
															"nativeSrc": "9764:25:8",
															"nodeType": "YulAssignment",
															"src": "9764:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9787:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9787:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9769:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9769:17:8"
																},
																"nativeSrc": "9769:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9769:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9764:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9764:1:8"
																}
															]
														},
														{
															"nativeSrc": "9798:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9798:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9821:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9821:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9824:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9824:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9817:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9817:3:8"
																},
																"nativeSrc": "9817:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9817:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9802:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9802:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9835:41:8",
															"nodeType": "YulAssignment",
															"src": "9835:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9864:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9864:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9846:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9846:17:8"
																},
																"nativeSrc": "9846:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9846:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9835:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9835:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10053:22:8",
																"nodeType": "YulBlock",
																"src": "10053:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10055:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10055:16:8"
																			},
																			"nativeSrc": "10055:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10055:18:8"
																		},
																		"nativeSrc": "10055:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10055:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9986:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9986:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9979:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9979:6:8"
																				},
																				"nativeSrc": "9979:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9979:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10009:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10009:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10016:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "10016:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10025:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "10025:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10012:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10012:3:8"
																						},
																						"nativeSrc": "10012:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10012:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10006:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10006:2:8"
																				},
																				"nativeSrc": "10006:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10006:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9959:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9959:2:8"
																		},
																		"nativeSrc": "9959:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9959:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9939:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:8"
																},
																"nativeSrc": "9939:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9939:113:8"
															},
															"nativeSrc": "9936:139:8",
															"nodeType": "YulIf",
															"src": "9936:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9672:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9703:1:8",
														"nodeType": "YulTypedName",
														"src": "9703:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9706:1:8",
														"nodeType": "YulTypedName",
														"src": "9706:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9712:7:8",
														"nodeType": "YulTypedName",
														"src": "9712:7:8",
														"type": ""
													}
												],
												"src": "9672:410:8"
											},
											{
												"body": {
													"nativeSrc": "10116:152:8",
													"nodeType": "YulBlock",
													"src": "10116:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10133:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10133:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10136:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10136:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10126:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10126:6:8"
																},
																"nativeSrc": "10126:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10126:88:8"
															},
															"nativeSrc": "10126:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10126:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10230:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10230:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10233:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10233:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10223:6:8"
																},
																"nativeSrc": "10223:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10223:15:8"
															},
															"nativeSrc": "10223:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10223:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10254:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10254:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10257:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10247:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10247:6:8"
																},
																"nativeSrc": "10247:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10247:15:8"
															},
															"nativeSrc": "10247:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10247:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10088:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10088:180:8"
											},
											{
												"body": {
													"nativeSrc": "10316:143:8",
													"nodeType": "YulBlock",
													"src": "10316:143:8",
													"statements": [
														{
															"nativeSrc": "10326:25:8",
															"nodeType": "YulAssignment",
															"src": "10326:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10349:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10349:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10331:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10331:17:8"
																},
																"nativeSrc": "10331:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10331:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10326:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10326:1:8"
																}
															]
														},
														{
															"nativeSrc": "10360:25:8",
															"nodeType": "YulAssignment",
															"src": "10360:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10383:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10383:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10365:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10365:17:8"
																},
																"nativeSrc": "10365:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10365:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10360:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10360:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10407:22:8",
																"nodeType": "YulBlock",
																"src": "10407:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10409:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10409:16:8"
																			},
																			"nativeSrc": "10409:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10409:18:8"
																		},
																		"nativeSrc": "10409:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10409:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10404:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10404:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10397:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10397:6:8"
																},
																"nativeSrc": "10397:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10397:9:8"
															},
															"nativeSrc": "10394:35:8",
															"nodeType": "YulIf",
															"src": "10394:35:8"
														},
														{
															"nativeSrc": "10439:14:8",
															"nodeType": "YulAssignment",
															"src": "10439:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10448:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10448:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10451:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10451:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10444:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10444:3:8"
																},
																"nativeSrc": "10444:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10444:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10439:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10439:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10274:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10305:1:8",
														"nodeType": "YulTypedName",
														"src": "10305:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10308:1:8",
														"nodeType": "YulTypedName",
														"src": "10308:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10314:1:8",
														"nodeType": "YulTypedName",
														"src": "10314:1:8",
														"type": ""
													}
												],
												"src": "10274:185:8"
											},
											{
												"body": {
													"nativeSrc": "10510:149:8",
													"nodeType": "YulBlock",
													"src": "10510:149:8",
													"statements": [
														{
															"nativeSrc": "10520:25:8",
															"nodeType": "YulAssignment",
															"src": "10520:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10543:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10543:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10525:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10525:17:8"
																},
																"nativeSrc": "10525:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10525:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10520:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10520:1:8"
																}
															]
														},
														{
															"nativeSrc": "10554:25:8",
															"nodeType": "YulAssignment",
															"src": "10554:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10577:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10577:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10559:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10559:17:8"
																},
																"nativeSrc": "10559:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10559:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10554:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10554:1:8"
																}
															]
														},
														{
															"nativeSrc": "10588:17:8",
															"nodeType": "YulAssignment",
															"src": "10588:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10600:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10600:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10603:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10603:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10596:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10596:3:8"
																},
																"nativeSrc": "10596:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10596:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10588:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10588:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10630:22:8",
																"nodeType": "YulBlock",
																"src": "10630:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10632:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10632:16:8"
																			},
																			"nativeSrc": "10632:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10632:18:8"
																		},
																		"nativeSrc": "10632:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10632:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10621:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10621:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10627:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10627:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10618:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10618:2:8"
																},
																"nativeSrc": "10618:11:8",
																"nodeType": "YulFunctionCall",
																"src": "10618:11:8"
															},
															"nativeSrc": "10615:37:8",
															"nodeType": "YulIf",
															"src": "10615:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10465:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10496:1:8",
														"nodeType": "YulTypedName",
														"src": "10496:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10499:1:8",
														"nodeType": "YulTypedName",
														"src": "10499:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10505:4:8",
														"nodeType": "YulTypedName",
														"src": "10505:4:8",
														"type": ""
													}
												],
												"src": "10465:194:8"
											},
											{
												"body": {
													"nativeSrc": "10709:147:8",
													"nodeType": "YulBlock",
													"src": "10709:147:8",
													"statements": [
														{
															"nativeSrc": "10719:25:8",
															"nodeType": "YulAssignment",
															"src": "10719:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10742:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10742:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10724:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10724:17:8"
																},
																"nativeSrc": "10724:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10724:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10719:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10719:1:8"
																}
															]
														},
														{
															"nativeSrc": "10753:25:8",
															"nodeType": "YulAssignment",
															"src": "10753:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10776:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10776:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10758:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10758:17:8"
																},
																"nativeSrc": "10758:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10758:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10753:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10753:1:8"
																}
															]
														},
														{
															"nativeSrc": "10787:16:8",
															"nodeType": "YulAssignment",
															"src": "10787:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10798:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10798:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10801:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10801:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10794:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10794:3:8"
																},
																"nativeSrc": "10794:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10794:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10787:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10787:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10827:22:8",
																"nodeType": "YulBlock",
																"src": "10827:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10829:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10829:16:8"
																			},
																			"nativeSrc": "10829:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10829:18:8"
																		},
																		"nativeSrc": "10829:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10829:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10819:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10819:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10822:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10822:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10816:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10816:2:8"
																},
																"nativeSrc": "10816:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10816:10:8"
															},
															"nativeSrc": "10813:36:8",
															"nodeType": "YulIf",
															"src": "10813:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10665:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10696:1:8",
														"nodeType": "YulTypedName",
														"src": "10696:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10699:1:8",
														"nodeType": "YulTypedName",
														"src": "10699:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10705:3:8",
														"nodeType": "YulTypedName",
														"src": "10705:3:8",
														"type": ""
													}
												],
												"src": "10665:191:8"
											},
											{
												"body": {
													"nativeSrc": "10927:53:8",
													"nodeType": "YulBlock",
													"src": "10927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10949:17:8"
																		},
																		"nativeSrc": "10949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10937:6:8"
																},
																"nativeSrc": "10937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10937:37:8"
															},
															"nativeSrc": "10937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10937:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10915:5:8",
														"nodeType": "YulTypedName",
														"src": "10915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10922:3:8",
														"nodeType": "YulTypedName",
														"src": "10922:3:8",
														"type": ""
													}
												],
												"src": "10862:118:8"
											},
											{
												"body": {
													"nativeSrc": "11140:288:8",
													"nodeType": "YulBlock",
													"src": "11140:288:8",
													"statements": [
														{
															"nativeSrc": "11150:26:8",
															"nodeType": "YulAssignment",
															"src": "11150:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11162:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11162:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11173:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11173:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11158:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11158:3:8"
																},
																"nativeSrc": "11158:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11158:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11150:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11150:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11230:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11243:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11243:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11254:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11254:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11239:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11239:3:8"
																		},
																		"nativeSrc": "11239:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11239:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11186:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11186:43:8"
																},
																"nativeSrc": "11186:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11186:71:8"
															},
															"nativeSrc": "11186:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11186:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11311:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11311:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11324:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11335:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11335:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11320:3:8"
																		},
																		"nativeSrc": "11320:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11320:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11267:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11267:43:8"
																},
																"nativeSrc": "11267:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11267:72:8"
															},
															"nativeSrc": "11267:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11267:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11417:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11417:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11402:3:8"
																		},
																		"nativeSrc": "11402:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11402:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11349:43:8"
																},
																"nativeSrc": "11349:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11349:72:8"
															},
															"nativeSrc": "11349:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11349:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10986:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11096:9:8",
														"nodeType": "YulTypedName",
														"src": "11096:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11108:6:8",
														"nodeType": "YulTypedName",
														"src": "11108:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11116:6:8",
														"nodeType": "YulTypedName",
														"src": "11116:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11124:6:8",
														"nodeType": "YulTypedName",
														"src": "11124:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11135:4:8",
														"nodeType": "YulTypedName",
														"src": "11135:4:8",
														"type": ""
													}
												],
												"src": "10986:442:8"
											},
											{
												"body": {
													"nativeSrc": "11532:124:8",
													"nodeType": "YulBlock",
													"src": "11532:124:8",
													"statements": [
														{
															"nativeSrc": "11542:26:8",
															"nodeType": "YulAssignment",
															"src": "11542:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11554:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11554:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11565:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11565:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:8"
																},
																"nativeSrc": "11550:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11550:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11542:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11542:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11622:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11622:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11635:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11635:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11646:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11646:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11631:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11631:3:8"
																		},
																		"nativeSrc": "11631:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11631:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11578:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11578:43:8"
																},
																"nativeSrc": "11578:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11578:71:8"
															},
															"nativeSrc": "11578:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11578:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11434:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11504:9:8",
														"nodeType": "YulTypedName",
														"src": "11504:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11516:6:8",
														"nodeType": "YulTypedName",
														"src": "11516:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11527:4:8",
														"nodeType": "YulTypedName",
														"src": "11527:4:8",
														"type": ""
													}
												],
												"src": "11434:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid tax wallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tax must be 0-100\")\n\n    }\n\n    function abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612663380380612663833981810160405281019061003191906107e5565b336040518060400160405280600a81526020017f5375706572426f496e75000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f534249000000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610a69565b5080600490816100bd9190610a69565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610b47565b60405180910390fd5b61013f8161025160201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a590610bba565b60405180910390fd5b60648111156101f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e990610c22565b60405180910390fd5b8160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600681905550610249338461031460201b60201c565b505050610dce565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610384575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161037b9190610b47565b60405180910390fd5b6103955f838361039960201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806103fe57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061044f575060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b806104a0575060085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b156104bb576104b683838361053b60201b60201c565b610536565b5f6064600654836104cc9190610c6d565b6104d69190610cdb565b90505f81836104e59190610d0b565b90505f821115610522576105218560075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461053b60201b60201c565b5b61053385858361053b60201b60201c565b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361058b578060025f82825461057f9190610d3e565b92505081905550610659565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610614578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161060b93929190610d80565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a0578060025f82825403925050819055506106ea565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107479190610db5565b60405180910390a3505050565b5f5ffd5b5f819050919050565b61076a81610758565b8114610774575f5ffd5b50565b5f8151905061078581610761565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107b48261078b565b9050919050565b6107c4816107aa565b81146107ce575f5ffd5b50565b5f815190506107df816107bb565b92915050565b5f5f5f606084860312156107fc576107fb610754565b5b5f61080986828701610777565b935050602061081a868287016107d1565b925050604061082b86828701610777565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806108b057607f821691505b6020821081036108c3576108c261086c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026109257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108ea565b61092f86836108ea565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61096a61096561096084610758565b610947565b610758565b9050919050565b5f819050919050565b61098383610950565b61099761098f82610971565b8484546108f6565b825550505050565b5f5f905090565b6109ae61099f565b6109b981848461097a565b505050565b5b818110156109dc576109d15f826109a6565b6001810190506109bf565b5050565b601f821115610a21576109f2816108c9565b6109fb846108db565b81016020851015610a0a578190505b610a1e610a16856108db565b8301826109be565b50505b505050565b5f82821c905092915050565b5f610a415f1984600802610a26565b1980831691505092915050565b5f610a598383610a32565b9150826002028217905092915050565b610a7282610835565b67ffffffffffffffff811115610a8b57610a8a61083f565b5b610a958254610899565b610aa08282856109e0565b5f60209050601f831160018114610ad1575f8415610abf578287015190505b610ac98582610a4e565b865550610b30565b601f198416610adf866108c9565b5f5b82811015610b0657848901518255600182019150602085019450602081019050610ae1565b86831015610b235784890151610b1f601f891682610a32565b8355505b6001600288020188555050505b505050505050565b610b41816107aa565b82525050565b5f602082019050610b5a5f830184610b38565b92915050565b5f82825260208201905092915050565b7f496e76616c6964207461782077616c6c657400000000000000000000000000005f82015250565b5f610ba4601283610b60565b9150610baf82610b70565b602082019050919050565b5f6020820190508181035f830152610bd181610b98565b9050919050565b7f546178206d75737420626520302d3130300000000000000000000000000000005f82015250565b5f610c0c601183610b60565b9150610c1782610bd8565b602082019050919050565b5f6020820190508181035f830152610c3981610c00565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c7782610758565b9150610c8283610758565b9250828202610c9081610758565b91508282048414831517610ca757610ca6610c40565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ce582610758565b9150610cf083610758565b925082610d0057610cff610cae565b5b828204905092915050565b5f610d1582610758565b9150610d2083610758565b9250828203905081811115610d3857610d37610c40565b5b92915050565b5f610d4882610758565b9150610d5383610758565b9250828201905080821115610d6b57610d6a610c40565b5b92915050565b610d7a81610758565b82525050565b5f606082019050610d935f830186610b38565b610da06020830185610d71565b610dad6040830184610d71565b949350505050565b5f602082019050610dc85f830184610d71565b92915050565b61188880610ddb5f395ff3fe608060405234801561000f575f5ffd5b506004361061012a575f3560e01c8063771a3a1d116100ab578063c6d69a301161006f578063c6d69a3014610334578063d9b2c9cc14610350578063dd62ed3e14610381578063ea414b28146103b1578063f2fde38b146103cd5761012a565b8063771a3a1d1461028e5780638da5cb5b146102ac5780638ebfc796146102ca57806395d89b41146102e6578063a9059cbb146103045761012a565b8063313ce567116100f2578063313ce567146101e85780633f4218e0146102065780635c975abb1461023657806370a0823114610254578063715018a6146102845761012a565b806306fdde031461012e578063095ea7b31461014c57806318160ddd1461017c57806323b872dd1461019a5780632dc0562d146101ca575b5f5ffd5b6101366103e9565b60405161014391906112a6565b60405180910390f35b61016660048036038101906101619190611357565b610479565b60405161017391906113af565b60405180910390f35b61018461049b565b60405161019191906113d7565b60405180910390f35b6101b460048036038101906101af91906113f0565b6104a4565b6040516101c191906113af565b60405180910390f35b6101d26104d2565b6040516101df919061144f565b60405180910390f35b6101f06104f7565b6040516101fd9190611483565b60405180910390f35b610220600480360381019061021b919061149c565b6104ff565b60405161022d91906113af565b60405180910390f35b61023e61051c565b60405161024b91906113af565b60405180910390f35b61026e6004803603810190610269919061149c565b610532565b60405161027b91906113d7565b60405180910390f35b61028c610577565b005b61029661058a565b6040516102a391906113d7565b60405180910390f35b6102b4610590565b6040516102c1919061144f565b60405180910390f35b6102e460048036038101906102df91906114f1565b6105b8565b005b6102ee610666565b6040516102fb91906112a6565b60405180910390f35b61031e60048036038101906103199190611357565b6106f6565b60405161032b91906113af565b60405180910390f35b61034e6004803603810190610349919061152f565b610718565b005b61036a6004803603810190610365919061152f565b6107a5565b60405161037892919061155a565b60405180910390f35b61039b60048036038101906103969190611581565b6107d6565b6040516103a891906113d7565b60405180910390f35b6103cb60048036038101906103c6919061149c565b610858565b005b6103e760048036038101906103e2919061149c565b610954565b005b6060600380546103f8906115ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610424906115ec565b801561046f5780601f106104465761010080835404028352916020019161046f565b820191905f5260205f20905b81548152906001019060200180831161045257829003601f168201915b5050505050905090565b5f5f6104836109d8565b90506104908185856109df565b600191505092915050565b5f600254905090565b5f5f6104ae6109d8565b90506104bb8582856109f1565b6104c6858585610a84565b60019150509392505050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b5f600560149054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61057f610b74565b6105885f610bfb565b565b60065481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105c0610b74565b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f9b8f7e0160b0b3dbd1778c94df017a106051c9cfc844b82de0b4036a967d2d2b8260405161065a91906113af565b60405180910390a25050565b606060048054610675906115ec565b80601f01602080910402602001604051908101604052809291908181526020018280546106a1906115ec565b80156106ec5780601f106106c3576101008083540402835291602001916106ec565b820191905f5260205f20905b8154815290600101906020018083116106cf57829003601f168201915b5050505050905090565b5f5f6107006109d8565b905061070d818585610a84565b600191505092915050565b610720610b74565b6064811115610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90611666565b60405180910390fd5b806006819055507f82754e7bf8e3395ddb4a767c52b21ed0c3b9da843001b2e07ab46f25803234578160405161079a91906113d7565b60405180910390a150565b5f5f6064600654846107b791906116b1565b6107c1919061171f565b915081836107cf919061174f565b9050915091565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610860610b74565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c5906117cc565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1797049ec5d8ec17fdce2660fb55e33695fd7ebbdb65726cc6d171c0e1c312c760405160405180910390a250565b61095c610b74565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109c3919061144f565b60405180910390fd5b6109d581610bfb565b50565b5f33905090565b6109ec8383836001610cbe565b505050565b5f6109fc84846107d6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a7e5781811015610a6f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a66939291906117ea565b60405180910390fd5b610a7d84848484035f610cbe565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af4575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aeb919061144f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b64575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b5b919061144f565b60405180910390fd5b610b6f838383610e8d565b505050565b610b7c6109d8565b73ffffffffffffffffffffffffffffffffffffffff16610b9a610590565b73ffffffffffffffffffffffffffffffffffffffff1614610bf957610bbd6109d8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bf0919061144f565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d2e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d25919061144f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d9e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d95919061144f565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e87578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e7e91906113d7565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610ef257505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80610f43575060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b80610f94575060085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610fa957610fa483838361101d565b611018565b5f606460065483610fba91906116b1565b610fc4919061171f565b90505f8183610fd3919061174f565b90505f82111561100a576110098560075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461101d565b5b61101585858361101d565b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106d578060025f828254611061919061181f565b9250508190555061113b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110f6578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ed939291906117ea565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611182578060025f82825403925050819055506111cc565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122991906113d7565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61127882611236565b6112828185611240565b9350611292818560208601611250565b61129b8161125e565b840191505092915050565b5f6020820190508181035f8301526112be818461126e565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112f3826112ca565b9050919050565b611303816112e9565b811461130d575f5ffd5b50565b5f8135905061131e816112fa565b92915050565b5f819050919050565b61133681611324565b8114611340575f5ffd5b50565b5f813590506113518161132d565b92915050565b5f5f6040838503121561136d5761136c6112c6565b5b5f61137a85828601611310565b925050602061138b85828601611343565b9150509250929050565b5f8115159050919050565b6113a981611395565b82525050565b5f6020820190506113c25f8301846113a0565b92915050565b6113d181611324565b82525050565b5f6020820190506113ea5f8301846113c8565b92915050565b5f5f5f60608486031215611407576114066112c6565b5b5f61141486828701611310565b935050602061142586828701611310565b925050604061143686828701611343565b9150509250925092565b611449816112e9565b82525050565b5f6020820190506114625f830184611440565b92915050565b5f60ff82169050919050565b61147d81611468565b82525050565b5f6020820190506114965f830184611474565b92915050565b5f602082840312156114b1576114b06112c6565b5b5f6114be84828501611310565b91505092915050565b6114d081611395565b81146114da575f5ffd5b50565b5f813590506114eb816114c7565b92915050565b5f5f60408385031215611507576115066112c6565b5b5f61151485828601611310565b9250506020611525858286016114dd565b9150509250929050565b5f60208284031215611544576115436112c6565b5b5f61155184828501611343565b91505092915050565b5f60408201905061156d5f8301856113c8565b61157a60208301846113c8565b9392505050565b5f5f60408385031215611597576115966112c6565b5b5f6115a485828601611310565b92505060206115b585828601611310565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061160357607f821691505b602082108103611616576116156115bf565b5b50919050565b7f546178206d75737420626520302d3130300000000000000000000000000000005f82015250565b5f611650601183611240565b915061165b8261161c565b602082019050919050565b5f6020820190508181035f83015261167d81611644565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116bb82611324565b91506116c683611324565b92508282026116d481611324565b915082820484148315176116eb576116ea611684565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61172982611324565b915061173483611324565b925082611744576117436116f2565b5b828204905092915050565b5f61175982611324565b915061176483611324565b925082820390508181111561177c5761177b611684565b5b92915050565b7f496e76616c6964207461782077616c6c657400000000000000000000000000005f82015250565b5f6117b6601283611240565b91506117c182611782565b602082019050919050565b5f6020820190508181035f8301526117e3816117aa565b9050919050565b5f6060820190506117fd5f830186611440565b61180a60208301856113c8565b61181760408301846113c8565b949350505050565b5f61182982611324565b915061183483611324565b925082820190508082111561184c5761184b611684565b5b9291505056fea26469706673582212207c71a7887e3bb518f4d22bf2f9a9f4c1831f7388abd3ef6a35a7f12ed0111e7b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2663 CODESIZE SUB DUP1 PUSH2 0x2663 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5375706572426F496E7500000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5342490000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xA69 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xA69 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x251 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x249 CALLER DUP5 PUSH2 0x314 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xDCE JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x384 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x395 PUSH0 DUP4 DUP4 PUSH2 0x399 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x44F JUMPI POP PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x4A0 JUMPI POP PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x53B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0x522 JUMPI PUSH2 0x521 DUP6 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x53B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH2 0x533 DUP6 DUP6 DUP4 PUSH2 0x53B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57F SWAP2 SWAP1 PUSH2 0xD3E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x659 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x614 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6EA JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x747 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76A DUP2 PUSH2 0x758 JUMP JUMPDEST DUP2 EQ PUSH2 0x774 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x785 DUP2 PUSH2 0x761 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7B4 DUP3 PUSH2 0x78B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C4 DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP2 EQ PUSH2 0x7CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7DF DUP2 PUSH2 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0x754 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x809 DUP7 DUP3 DUP8 ADD PUSH2 0x777 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x81A DUP7 DUP3 DUP8 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x82B DUP7 DUP3 DUP8 ADD PUSH2 0x777 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x86C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x925 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8EA JUMP JUMPDEST PUSH2 0x92F DUP7 DUP4 PUSH2 0x8EA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x96A PUSH2 0x965 PUSH2 0x960 DUP5 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x983 DUP4 PUSH2 0x950 JUMP JUMPDEST PUSH2 0x997 PUSH2 0x98F DUP3 PUSH2 0x971 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8F6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9AE PUSH2 0x99F JUMP JUMPDEST PUSH2 0x9B9 DUP2 DUP5 DUP5 PUSH2 0x97A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x9D1 PUSH0 DUP3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA21 JUMPI PUSH2 0x9F2 DUP2 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x9FB DUP5 PUSH2 0x8DB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xA0A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xA1E PUSH2 0xA16 DUP6 PUSH2 0x8DB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x9BE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA41 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA26 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA59 DUP4 DUP4 PUSH2 0xA32 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA72 DUP3 PUSH2 0x835 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0x83F JUMP JUMPDEST JUMPDEST PUSH2 0xA95 DUP3 SLOAD PUSH2 0x899 JUMP JUMPDEST PUSH2 0xAA0 DUP3 DUP3 DUP6 PUSH2 0x9E0 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAD1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xABF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAC9 DUP6 DUP3 PUSH2 0xA4E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xADF DUP7 PUSH2 0x8C9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB06 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAE1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xB23 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xB1F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA32 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5A PUSH0 DUP4 ADD DUP5 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207461782077616C6C65740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBA4 PUSH1 0x12 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP PUSH2 0xBAF DUP3 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD1 DUP2 PUSH2 0xB98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546178206D75737420626520302D313030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC0C PUSH1 0x11 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP PUSH2 0xC17 DUP3 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC39 DUP2 PUSH2 0xC00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC77 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP2 POP PUSH2 0xC82 DUP4 PUSH2 0x758 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC90 DUP2 PUSH2 0x758 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCA7 JUMPI PUSH2 0xCA6 PUSH2 0xC40 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCE5 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF0 DUP4 PUSH2 0x758 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD00 JUMPI PUSH2 0xCFF PUSH2 0xCAE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD15 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP2 POP PUSH2 0xD20 DUP4 PUSH2 0x758 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD38 JUMPI PUSH2 0xD37 PUSH2 0xC40 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD48 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP2 POP PUSH2 0xD53 DUP4 PUSH2 0x758 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD6B JUMPI PUSH2 0xD6A PUSH2 0xC40 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7A DUP2 PUSH2 0x758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD93 PUSH0 DUP4 ADD DUP7 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xDA0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xDAD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC8 PUSH0 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1888 DUP1 PUSH2 0xDDB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771A3A1D GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC6D69A30 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xD9B2C9CC EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xEA414B28 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CD JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x304 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x284 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x2DC0562D EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP3 SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x46F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x446 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x452 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x483 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x490 DUP2 DUP6 DUP6 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AE PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BB DUP6 DUP3 DUP6 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x4C6 DUP6 DUP6 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57F PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x588 PUSH0 PUSH2 0xBFB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0xB74 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B8F7E0160B0B3DBD1778C94DF017A106051C9CFC844B82DE0B4036A967D2D2B DUP3 PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x675 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x700 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x70D DUP2 DUP6 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x720 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x82754E7BF8E3395DDB4A767C52B21ED0C3B9DA843001B2E07AB46F2580323457 DUP2 PUSH1 0x40 MLOAD PUSH2 0x79A SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP5 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x171F JUMP JUMPDEST SWAP2 POP DUP2 DUP4 PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x860 PUSH2 0xB74 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1797049EC5D8EC17FDCE2660FB55E33695FD7EBBDB65726CC6D171C0E1C312C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x95C PUSH2 0xB74 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0xBFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9EC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCBE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9FC DUP5 DUP5 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA7E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA6F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6F DUP4 DUP4 DUP4 PUSH2 0xE8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB7C PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB9A PUSH2 0x590 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF9 JUMPI PUSH2 0xBBD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE87 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEF2 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xF43 JUMPI POP PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xF94 JUMPI POP PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xFA9 JUMPI PUSH2 0xFA4 DUP4 DUP4 DUP4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x1018 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x171F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0x100A JUMPI PUSH2 0x1009 DUP6 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x101D JUMP JUMPDEST JUMPDEST PUSH2 0x1015 DUP6 DUP6 DUP4 PUSH2 0x101D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1061 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x113B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1182 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11CC JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1278 DUP3 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x1282 DUP2 DUP6 PUSH2 0x1240 JUMP JUMPDEST SWAP4 POP PUSH2 0x1292 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x125E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BE DUP2 DUP5 PUSH2 0x126E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12F3 DUP3 PUSH2 0x12CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1303 DUP2 PUSH2 0x12E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x130D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131E DUP2 PUSH2 0x12FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1336 DUP2 PUSH2 0x1324 JUMP JUMPDEST DUP2 EQ PUSH2 0x1340 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1351 DUP2 PUSH2 0x132D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136D JUMPI PUSH2 0x136C PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x137A DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x138B DUP6 DUP3 DUP7 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A9 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D1 DUP2 PUSH2 0x1324 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13EA PUSH0 DUP4 ADD DUP5 PUSH2 0x13C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1407 JUMPI PUSH2 0x1406 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1414 DUP7 DUP3 DUP8 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1425 DUP7 DUP3 DUP8 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1436 DUP7 DUP3 DUP8 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1449 DUP2 PUSH2 0x12E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1462 PUSH0 DUP4 ADD DUP5 PUSH2 0x1440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147D DUP2 PUSH2 0x1468 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1496 PUSH0 DUP4 ADD DUP5 PUSH2 0x1474 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH2 0x14B0 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BE DUP5 DUP3 DUP6 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D0 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP2 EQ PUSH2 0x14DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EB DUP2 PUSH2 0x14C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1507 JUMPI PUSH2 0x1506 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1514 DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1525 DUP6 DUP3 DUP7 ADD PUSH2 0x14DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1551 DUP5 DUP3 DUP6 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x156D PUSH0 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x157A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1597 JUMPI PUSH2 0x1596 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1603 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x15BF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546178206D75737420626520302D313030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1650 PUSH1 0x11 DUP4 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP PUSH2 0x165B DUP3 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167D DUP2 PUSH2 0x1644 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16BB DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C6 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16D4 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1684 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1729 DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x1734 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x16F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1759 DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x1764 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177B PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207461782077616C6C65740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B6 PUSH1 0x12 DUP4 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C1 DUP3 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E3 DUP2 PUSH2 0x17AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17FD PUSH0 DUP4 ADD DUP7 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x180A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1817 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1829 DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x1834 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x184C JUMPI PUSH2 0x184B PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x71A7887E3BB518F4D22BF2F9A9F4C1831F7388ABD3EF6A35A7F12ED011 0x1E PUSH28 0x64736F6C634300081E00330000000000000000000000000000000000 ",
							"sourceMap": "228:2214:7:-:0;;;594:393;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;736:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;789:1:7::2;767:24;;:10;:24;;::::0;759:55:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;845:3;833:8;:15;;825:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;895:10;883:9;;:22;;;;;;;;;;;;;;;;;;926:8;916:7;:18;;;;947:32;953:10;965:13;947:5;;;:32;;:::i;:::-;594:393:::0;;;228:2214;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7362:208:2:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;1642:554:7:-;1795:1;1779:18;;:4;:18;;;:38;;;;1815:1;1801:16;;:2;:16;;;1779:38;:59;;;;1821:11;:17;1833:4;1821:17;;;;;;;;;;;;;;;;;;;;;;;;;1779:59;:78;;;;1842:11;:15;1854:2;1842:15;;;;;;;;;;;;;;;;;;;;;;;;;1779:78;1775:162;;;1874:30;1888:4;1894:2;1898:5;1874:13;;;:30;;:::i;:::-;1919:7;;1775:162;1949:17;1989:3;1978:7;;1970:5;:15;;;;:::i;:::-;1969:23;;;;:::i;:::-;1949:43;;2003:18;2032:9;2024:5;:17;;;;:::i;:::-;2003:38;;2070:1;2058:9;:13;2054:87;;;2088:41;2102:4;2108:9;;;;;;;;;;;2119;2088:13;;;:41;;:::i;:::-;2054:87;2153:35;2167:4;2173:2;2177:10;2153:13;;;:35;;:::i;:::-;1718:478;;1642:554;;;;:::o;5912:1107:2:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:99::-;1926:6;1960:5;1954:12;1944:22;;1874:99;;;:::o;1979:180::-;2027:77;2024:1;2017:88;2124:4;2121:1;2114:15;2148:4;2145:1;2138:15;2165:180;2213:77;2210:1;2203:88;2310:4;2307:1;2300:15;2334:4;2331:1;2324:15;2351:320;2395:6;2432:1;2426:4;2422:12;2412:22;;2479:1;2473:4;2469:12;2500:18;2490:81;;2556:4;2548:6;2544:17;2534:27;;2490:81;2618:2;2610:6;2607:14;2587:18;2584:38;2581:84;;2637:18;;:::i;:::-;2581:84;2402:269;2351:320;;;:::o;2677:141::-;2726:4;2749:3;2741:11;;2772:3;2769:1;2762:14;2806:4;2803:1;2793:18;2785:26;;2677:141;;;:::o;2824:93::-;2861:6;2908:2;2903;2896:5;2892:14;2888:23;2878:33;;2824:93;;;:::o;2923:107::-;2967:8;3017:5;3011:4;3007:16;2986:37;;2923:107;;;;:::o;3036:393::-;3105:6;3155:1;3143:10;3139:18;3178:97;3208:66;3197:9;3178:97;:::i;:::-;3296:39;3326:8;3315:9;3296:39;:::i;:::-;3284:51;;3368:4;3364:9;3357:5;3353:21;3344:30;;3417:4;3407:8;3403:19;3396:5;3393:30;3383:40;;3112:317;;3036:393;;;;;:::o;3435:60::-;3463:3;3484:5;3477:12;;3435:60;;;:::o;3501:142::-;3551:9;3584:53;3602:34;3611:24;3629:5;3611:24;:::i;:::-;3602:34;:::i;:::-;3584:53;:::i;:::-;3571:66;;3501:142;;;:::o;3649:75::-;3692:3;3713:5;3706:12;;3649:75;;;:::o;3730:269::-;3840:39;3871:7;3840:39;:::i;:::-;3901:91;3950:41;3974:16;3950:41;:::i;:::-;3942:6;3935:4;3929:11;3901:91;:::i;:::-;3895:4;3888:105;3806:193;3730:269;;;:::o;4005:73::-;4050:3;4071:1;4064:8;;4005:73;:::o;4084:189::-;4161:32;;:::i;:::-;4202:65;4260:6;4252;4246:4;4202:65;:::i;:::-;4137:136;4084:189;;:::o;4279:186::-;4339:120;4356:3;4349:5;4346:14;4339:120;;;4410:39;4447:1;4440:5;4410:39;:::i;:::-;4383:1;4376:5;4372:13;4363:22;;4339:120;;;4279:186;;:::o;4471:543::-;4572:2;4567:3;4564:11;4561:446;;;4606:38;4638:5;4606:38;:::i;:::-;4690:29;4708:10;4690:29;:::i;:::-;4680:8;4676:44;4873:2;4861:10;4858:18;4855:49;;;4894:8;4879:23;;4855:49;4917:80;4973:22;4991:3;4973:22;:::i;:::-;4963:8;4959:37;4946:11;4917:80;:::i;:::-;4576:431;;4561:446;4471:543;;;:::o;5020:117::-;5074:8;5124:5;5118:4;5114:16;5093:37;;5020:117;;;;:::o;5143:169::-;5187:6;5220:51;5268:1;5264:6;5256:5;5253:1;5249:13;5220:51;:::i;:::-;5216:56;5301:4;5295;5291:15;5281:25;;5194:118;5143:169;;;;:::o;5317:295::-;5393:4;5539:29;5564:3;5558:4;5539:29;:::i;:::-;5531:37;;5601:3;5598:1;5594:11;5588:4;5585:21;5577:29;;5317:295;;;;:::o;5617:1395::-;5734:37;5767:3;5734:37;:::i;:::-;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5902:38;5934:4;5928:11;5902:38;:::i;:::-;5987:67;6047:6;6039;6033:4;5987:67;:::i;:::-;6081:1;6105:4;6092:17;;6137:2;6129:6;6126:14;6154:1;6149:618;;;;6811:1;6828:6;6825:77;;;6877:9;6872:3;6868:19;6862:26;6853:35;;6825:77;6928:67;6988:6;6981:5;6928:67;:::i;:::-;6922:4;6915:81;6784:222;6119:887;;6149:618;6201:4;6197:9;6189:6;6185:22;6235:37;6267:4;6235:37;:::i;:::-;6294:1;6308:208;6322:7;6319:1;6316:14;6308:208;;;6401:9;6396:3;6392:19;6386:26;6378:6;6371:42;6452:1;6444:6;6440:14;6430:24;;6499:2;6488:9;6484:18;6471:31;;6345:4;6342:1;6338:12;6333:17;;6308:208;;;6544:6;6535:7;6532:19;6529:179;;;6602:9;6597:3;6593:19;6587:26;6645:48;6687:4;6679:6;6675:17;6664:9;6645:48;:::i;:::-;6637:6;6630:64;6552:156;6529:179;6754:1;6750;6742:6;6738:14;6734:22;6728:4;6721:36;6156:611;;;6119:887;;5709:1303;;;5617:1395;;:::o;7018:118::-;7105:24;7123:5;7105:24;:::i;:::-;7100:3;7093:37;7018:118;;:::o;7142:222::-;7235:4;7273:2;7262:9;7258:18;7250:26;;7286:71;7354:1;7343:9;7339:17;7330:6;7286:71;:::i;:::-;7142:222;;;;:::o;7370:169::-;7454:11;7488:6;7483:3;7476:19;7528:4;7523:3;7519:14;7504:29;;7370:169;;;;:::o;7545:168::-;7685:20;7681:1;7673:6;7669:14;7662:44;7545:168;:::o;7719:366::-;7861:3;7882:67;7946:2;7941:3;7882:67;:::i;:::-;7875:74;;7958:93;8047:3;7958:93;:::i;:::-;8076:2;8071:3;8067:12;8060:19;;7719:366;;;:::o;8091:419::-;8257:4;8295:2;8284:9;8280:18;8272:26;;8344:9;8338:4;8334:20;8330:1;8319:9;8315:17;8308:47;8372:131;8498:4;8372:131;:::i;:::-;8364:139;;8091:419;;;:::o;8516:167::-;8656:19;8652:1;8644:6;8640:14;8633:43;8516:167;:::o;8689:366::-;8831:3;8852:67;8916:2;8911:3;8852:67;:::i;:::-;8845:74;;8928:93;9017:3;8928:93;:::i;:::-;9046:2;9041:3;9037:12;9030:19;;8689:366;;;:::o;9061:419::-;9227:4;9265:2;9254:9;9250:18;9242:26;;9314:9;9308:4;9304:20;9300:1;9289:9;9285:17;9278:47;9342:131;9468:4;9342:131;:::i;:::-;9334:139;;9061:419;;;:::o;9486:180::-;9534:77;9531:1;9524:88;9631:4;9628:1;9621:15;9655:4;9652:1;9645:15;9672:410;9712:7;9735:20;9753:1;9735:20;:::i;:::-;9730:25;;9769:20;9787:1;9769:20;:::i;:::-;9764:25;;9824:1;9821;9817:9;9846:30;9864:11;9846:30;:::i;:::-;9835:41;;10025:1;10016:7;10012:15;10009:1;10006:22;9986:1;9979:9;9959:83;9936:139;;10055:18;;:::i;:::-;9936:139;9720:362;9672:410;;;;:::o;10088:180::-;10136:77;10133:1;10126:88;10233:4;10230:1;10223:15;10257:4;10254:1;10247:15;10274:185;10314:1;10331:20;10349:1;10331:20;:::i;:::-;10326:25;;10365:20;10383:1;10365:20;:::i;:::-;10360:25;;10404:1;10394:35;;10409:18;;:::i;:::-;10394:35;10451:1;10448;10444:9;10439:14;;10274:185;;;;:::o;10465:194::-;10505:4;10525:20;10543:1;10525:20;:::i;:::-;10520:25;;10559:20;10577:1;10559:20;:::i;:::-;10554:25;;10603:1;10600;10596:9;10588:17;;10627:1;10621:4;10618:11;10615:37;;;10632:18;;:::i;:::-;10615:37;10465:194;;;;:::o;10665:191::-;10705:3;10724:20;10742:1;10724:20;:::i;:::-;10719:25;;10758:20;10776:1;10758:20;:::i;:::-;10753:25;;10801:1;10798;10794:9;10787:16;;10822:3;10819:1;10816:10;10813:36;;;10829:18;;:::i;:::-;10813:36;10665:191;;;;:::o;10862:118::-;10949:24;10967:5;10949:24;:::i;:::-;10944:3;10937:37;10862:118;;:::o;10986:442::-;11135:4;11173:2;11162:9;11158:18;11150:26;;11186:71;11254:1;11243:9;11239:17;11230:6;11186:71;:::i;:::-;11267:72;11335:2;11324:9;11320:18;11311:6;11267:72;:::i;:::-;11349;11417:2;11406:9;11402:18;11393:6;11349:72;:::i;:::-;10986:442;;;;;;:::o;11434:222::-;11527:4;11565:2;11554:9;11550:18;11542:26;;11578:71;11646:1;11635:9;11631:17;11622:6;11578:71;:::i;:::-;11434:222;;;;:::o;228:2214:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2527,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3262,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2932,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2520,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2545,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3067,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2692,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1272": {
									"entryPoint": 3725,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4125,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2006,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1145,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1330,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1271,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFeeExempt_1060": {
									"entryPoint": 1279,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1001,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1424,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_983": {
									"entryPoint": 1308,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1399,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeExempt_1193": {
									"entryPoint": 1464,
									"id": 1193,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTaxRate_1146": {
									"entryPoint": 1816,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxWallet_1172": {
									"entryPoint": 2136,
									"id": 1172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1638,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxRate_1054": {
									"entryPoint": 1418,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@taxWallet_1056": {
									"entryPoint": 1234,
									"id": 1056,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1179,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1188,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2388,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1782,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@viewTax_1297": {
									"entryPoint": 1957,
									"id": 1297,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_address": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5466,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11595:8",
										"nodeType": "YulBlock",
										"src": "0:11595:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4381:53:8",
													"nodeType": "YulBlock",
													"src": "4381:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4398:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4398:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4421:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4421:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4403:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4403:17:8"
																		},
																		"nativeSrc": "4403:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4391:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:8"
																},
																"nativeSrc": "4391:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4391:37:8"
															},
															"nativeSrc": "4391:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4391:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4316:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4369:5:8",
														"nodeType": "YulTypedName",
														"src": "4369:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4376:3:8",
														"nodeType": "YulTypedName",
														"src": "4376:3:8",
														"type": ""
													}
												],
												"src": "4316:118:8"
											},
											{
												"body": {
													"nativeSrc": "4538:124:8",
													"nodeType": "YulBlock",
													"src": "4538:124:8",
													"statements": [
														{
															"nativeSrc": "4548:26:8",
															"nodeType": "YulAssignment",
															"src": "4548:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4560:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4560:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4571:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4571:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4556:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4556:3:8"
																},
																"nativeSrc": "4556:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4556:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4548:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4548:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4628:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4628:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4641:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4652:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4652:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4637:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:8"
																		},
																		"nativeSrc": "4637:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4637:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4584:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4584:43:8"
																},
																"nativeSrc": "4584:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4584:71:8"
															},
															"nativeSrc": "4584:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4584:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4440:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4510:9:8",
														"nodeType": "YulTypedName",
														"src": "4510:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4522:6:8",
														"nodeType": "YulTypedName",
														"src": "4522:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4533:4:8",
														"nodeType": "YulTypedName",
														"src": "4533:4:8",
														"type": ""
													}
												],
												"src": "4440:222:8"
											},
											{
												"body": {
													"nativeSrc": "4711:43:8",
													"nodeType": "YulBlock",
													"src": "4711:43:8",
													"statements": [
														{
															"nativeSrc": "4721:27:8",
															"nodeType": "YulAssignment",
															"src": "4721:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4736:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4736:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4743:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4732:3:8"
																},
																"nativeSrc": "4732:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4732:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4721:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4721:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4668:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4693:5:8",
														"nodeType": "YulTypedName",
														"src": "4693:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4703:7:8",
														"nodeType": "YulTypedName",
														"src": "4703:7:8",
														"type": ""
													}
												],
												"src": "4668:86:8"
											},
											{
												"body": {
													"nativeSrc": "4821:51:8",
													"nodeType": "YulBlock",
													"src": "4821:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4838:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4859:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4859:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4843:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4843:15:8"
																		},
																		"nativeSrc": "4843:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:8"
																},
																"nativeSrc": "4831:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4831:35:8"
															},
															"nativeSrc": "4831:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4831:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4760:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4809:5:8",
														"nodeType": "YulTypedName",
														"src": "4809:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4816:3:8",
														"nodeType": "YulTypedName",
														"src": "4816:3:8",
														"type": ""
													}
												],
												"src": "4760:112:8"
											},
											{
												"body": {
													"nativeSrc": "4972:120:8",
													"nodeType": "YulBlock",
													"src": "4972:120:8",
													"statements": [
														{
															"nativeSrc": "4982:26:8",
															"nodeType": "YulAssignment",
															"src": "4982:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4994:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5005:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4990:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:8"
																},
																"nativeSrc": "4990:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4990:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4982:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4982:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5058:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5082:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:8"
																		},
																		"nativeSrc": "5067:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5018:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5018:39:8"
																},
																"nativeSrc": "5018:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5018:67:8"
															},
															"nativeSrc": "5018:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5018:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4878:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:8",
														"nodeType": "YulTypedName",
														"src": "4944:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4956:6:8",
														"nodeType": "YulTypedName",
														"src": "4956:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4967:4:8",
														"nodeType": "YulTypedName",
														"src": "4967:4:8",
														"type": ""
													}
												],
												"src": "4878:214:8"
											},
											{
												"body": {
													"nativeSrc": "5164:263:8",
													"nodeType": "YulBlock",
													"src": "5164:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:8",
																"nodeType": "YulBlock",
																"src": "5210:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:8"
																			},
																			"nativeSrc": "5212:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:8"
																		},
																		"nativeSrc": "5212:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:8"
																		},
																		"nativeSrc": "5181:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:8"
																},
																"nativeSrc": "5177:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:8"
															},
															"nativeSrc": "5174:119:8",
															"nodeType": "YulIf",
															"src": "5174:119:8"
														},
														{
															"nativeSrc": "5303:117:8",
															"nodeType": "YulBlock",
															"src": "5303:117:8",
															"statements": [
																{
																	"nativeSrc": "5318:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:8"
																				},
																				"nativeSrc": "5378:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:8"
																		},
																		"nativeSrc": "5357:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5098:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5134:9:8",
														"nodeType": "YulTypedName",
														"src": "5134:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5145:7:8",
														"nodeType": "YulTypedName",
														"src": "5145:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5157:6:8",
														"nodeType": "YulTypedName",
														"src": "5157:6:8",
														"type": ""
													}
												],
												"src": "5098:329:8"
											},
											{
												"body": {
													"nativeSrc": "5473:76:8",
													"nodeType": "YulBlock",
													"src": "5473:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5527:16:8",
																"nodeType": "YulBlock",
																"src": "5527:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5536:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5539:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5539:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5529:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:8"
																			},
																			"nativeSrc": "5529:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5529:12:8"
																		},
																		"nativeSrc": "5529:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5496:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5496:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5518:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5518:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5503:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "5503:14:8"
																				},
																				"nativeSrc": "5503:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5503:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5493:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5493:2:8"
																		},
																		"nativeSrc": "5493:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5493:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5486:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5486:6:8"
																},
																"nativeSrc": "5486:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5486:40:8"
															},
															"nativeSrc": "5483:60:8",
															"nodeType": "YulIf",
															"src": "5483:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5433:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5466:5:8",
														"nodeType": "YulTypedName",
														"src": "5466:5:8",
														"type": ""
													}
												],
												"src": "5433:116:8"
											},
											{
												"body": {
													"nativeSrc": "5604:84:8",
													"nodeType": "YulBlock",
													"src": "5604:84:8",
													"statements": [
														{
															"nativeSrc": "5614:29:8",
															"nodeType": "YulAssignment",
															"src": "5614:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5636:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5636:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5623:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5623:12:8"
																},
																"nativeSrc": "5623:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5623:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5614:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5614:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5676:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5652:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "5652:23:8"
																},
																"nativeSrc": "5652:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5652:30:8"
															},
															"nativeSrc": "5652:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5652:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5555:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5582:6:8",
														"nodeType": "YulTypedName",
														"src": "5582:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5590:3:8",
														"nodeType": "YulTypedName",
														"src": "5590:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5598:5:8",
														"nodeType": "YulTypedName",
														"src": "5598:5:8",
														"type": ""
													}
												],
												"src": "5555:133:8"
											},
											{
												"body": {
													"nativeSrc": "5774:388:8",
													"nodeType": "YulBlock",
													"src": "5774:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5820:83:8",
																"nodeType": "YulBlock",
																"src": "5820:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5822:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5822:77:8"
																			},
																			"nativeSrc": "5822:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5822:79:8"
																		},
																		"nativeSrc": "5822:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5795:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5795:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5804:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5791:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:8"
																		},
																		"nativeSrc": "5791:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5816:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5787:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:8"
																},
																"nativeSrc": "5787:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5787:32:8"
															},
															"nativeSrc": "5784:119:8",
															"nodeType": "YulIf",
															"src": "5784:119:8"
														},
														{
															"nativeSrc": "5913:117:8",
															"nodeType": "YulBlock",
															"src": "5913:117:8",
															"statements": [
																{
																	"nativeSrc": "5928:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5928:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5942:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5942:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5932:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5932:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5957:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5957:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5992:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5992:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6003:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6003:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5988:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5988:3:8"
																				},
																				"nativeSrc": "5988:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5988:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6012:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6012:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5967:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5967:20:8"
																		},
																		"nativeSrc": "5967:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5967:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5957:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5957:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6040:115:8",
															"nodeType": "YulBlock",
															"src": "6040:115:8",
															"statements": [
																{
																	"nativeSrc": "6055:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6055:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6069:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6069:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6059:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6059:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6085:60:8",
																	"nodeType": "YulAssignment",
																	"src": "6085:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6117:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6117:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6128:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6128:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6113:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6113:3:8"
																				},
																				"nativeSrc": "6113:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6113:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6137:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6137:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6095:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6095:17:8"
																		},
																		"nativeSrc": "6095:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6095:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6085:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6085:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5694:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5736:9:8",
														"nodeType": "YulTypedName",
														"src": "5736:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5747:7:8",
														"nodeType": "YulTypedName",
														"src": "5747:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5759:6:8",
														"nodeType": "YulTypedName",
														"src": "5759:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5767:6:8",
														"nodeType": "YulTypedName",
														"src": "5767:6:8",
														"type": ""
													}
												],
												"src": "5694:468:8"
											},
											{
												"body": {
													"nativeSrc": "6234:263:8",
													"nodeType": "YulBlock",
													"src": "6234:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6280:83:8",
																"nodeType": "YulBlock",
																"src": "6280:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6282:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6282:77:8"
																			},
																			"nativeSrc": "6282:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6282:79:8"
																		},
																		"nativeSrc": "6282:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6282:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6255:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6255:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6264:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6251:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6251:3:8"
																		},
																		"nativeSrc": "6251:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6251:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6276:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6276:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6247:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6247:3:8"
																},
																"nativeSrc": "6247:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6247:32:8"
															},
															"nativeSrc": "6244:119:8",
															"nodeType": "YulIf",
															"src": "6244:119:8"
														},
														{
															"nativeSrc": "6373:117:8",
															"nodeType": "YulBlock",
															"src": "6373:117:8",
															"statements": [
																{
																	"nativeSrc": "6388:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6388:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6402:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6402:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6392:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6392:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6417:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6417:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6452:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6452:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6463:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6463:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6448:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6448:3:8"
																				},
																				"nativeSrc": "6448:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6448:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6472:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6472:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6427:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6427:20:8"
																		},
																		"nativeSrc": "6427:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6427:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6417:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6417:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6168:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6204:9:8",
														"nodeType": "YulTypedName",
														"src": "6204:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6215:7:8",
														"nodeType": "YulTypedName",
														"src": "6215:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6227:6:8",
														"nodeType": "YulTypedName",
														"src": "6227:6:8",
														"type": ""
													}
												],
												"src": "6168:329:8"
											},
											{
												"body": {
													"nativeSrc": "6629:206:8",
													"nodeType": "YulBlock",
													"src": "6629:206:8",
													"statements": [
														{
															"nativeSrc": "6639:26:8",
															"nodeType": "YulAssignment",
															"src": "6639:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6651:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6651:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6662:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6662:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6647:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6647:3:8"
																},
																"nativeSrc": "6647:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6647:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6639:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6639:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6719:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6719:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6732:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6732:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6743:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6743:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6728:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6728:3:8"
																		},
																		"nativeSrc": "6728:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6728:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6675:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6675:43:8"
																},
																"nativeSrc": "6675:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6675:71:8"
															},
															"nativeSrc": "6675:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6675:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6800:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6813:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6813:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6824:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6824:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6809:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:8"
																		},
																		"nativeSrc": "6809:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6756:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6756:43:8"
																},
																"nativeSrc": "6756:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6756:72:8"
															},
															"nativeSrc": "6756:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6756:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6503:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6593:9:8",
														"nodeType": "YulTypedName",
														"src": "6593:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6605:6:8",
														"nodeType": "YulTypedName",
														"src": "6605:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6613:6:8",
														"nodeType": "YulTypedName",
														"src": "6613:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6624:4:8",
														"nodeType": "YulTypedName",
														"src": "6624:4:8",
														"type": ""
													}
												],
												"src": "6503:332:8"
											},
											{
												"body": {
													"nativeSrc": "6924:391:8",
													"nodeType": "YulBlock",
													"src": "6924:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6970:83:8",
																"nodeType": "YulBlock",
																"src": "6970:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6972:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6972:77:8"
																			},
																			"nativeSrc": "6972:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6972:79:8"
																		},
																		"nativeSrc": "6972:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6972:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6945:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6945:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6954:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6954:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6941:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6941:3:8"
																		},
																		"nativeSrc": "6941:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6941:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6966:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6966:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6937:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6937:3:8"
																},
																"nativeSrc": "6937:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6937:32:8"
															},
															"nativeSrc": "6934:119:8",
															"nodeType": "YulIf",
															"src": "6934:119:8"
														},
														{
															"nativeSrc": "7063:117:8",
															"nodeType": "YulBlock",
															"src": "7063:117:8",
															"statements": [
																{
																	"nativeSrc": "7078:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7078:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7092:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7092:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7082:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7082:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7107:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7107:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7142:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7142:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7153:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7153:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7138:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7138:3:8"
																				},
																				"nativeSrc": "7138:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7138:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7162:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7162:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7117:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7117:20:8"
																		},
																		"nativeSrc": "7117:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7117:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7107:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7107:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7190:118:8",
															"nodeType": "YulBlock",
															"src": "7190:118:8",
															"statements": [
																{
																	"nativeSrc": "7205:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7205:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7219:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7219:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7209:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7209:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7235:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7235:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7270:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7270:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7281:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7281:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7266:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7266:3:8"
																				},
																				"nativeSrc": "7266:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7266:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7290:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7290:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7245:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7245:20:8"
																		},
																		"nativeSrc": "7245:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7245:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7235:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7235:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6841:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6886:9:8",
														"nodeType": "YulTypedName",
														"src": "6886:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6897:7:8",
														"nodeType": "YulTypedName",
														"src": "6897:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6909:6:8",
														"nodeType": "YulTypedName",
														"src": "6909:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6917:6:8",
														"nodeType": "YulTypedName",
														"src": "6917:6:8",
														"type": ""
													}
												],
												"src": "6841:474:8"
											},
											{
												"body": {
													"nativeSrc": "7349:152:8",
													"nodeType": "YulBlock",
													"src": "7349:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7366:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7366:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7369:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7369:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7359:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7359:6:8"
																},
																"nativeSrc": "7359:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7359:88:8"
															},
															"nativeSrc": "7359:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7359:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7463:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7463:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7466:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7466:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7456:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:8"
																},
																"nativeSrc": "7456:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7456:15:8"
															},
															"nativeSrc": "7456:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7456:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7487:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7487:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7490:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7490:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7480:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:8"
																},
																"nativeSrc": "7480:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7480:15:8"
															},
															"nativeSrc": "7480:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7480:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7321:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7321:180:8"
											},
											{
												"body": {
													"nativeSrc": "7558:269:8",
													"nodeType": "YulBlock",
													"src": "7558:269:8",
													"statements": [
														{
															"nativeSrc": "7568:22:8",
															"nodeType": "YulAssignment",
															"src": "7568:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7582:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7582:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7588:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7588:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7578:3:8"
																},
																"nativeSrc": "7578:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7578:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7568:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7568:6:8"
																}
															]
														},
														{
															"nativeSrc": "7599:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7599:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7629:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7629:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7635:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7635:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7625:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7625:3:8"
																},
																"nativeSrc": "7625:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7625:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7603:18:8",
																	"nodeType": "YulTypedName",
																	"src": "7603:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7676:51:8",
																"nodeType": "YulBlock",
																"src": "7676:51:8",
																"statements": [
																	{
																		"nativeSrc": "7690:27:8",
																		"nodeType": "YulAssignment",
																		"src": "7690:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7704:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "7704:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7712:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7712:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7700:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7700:3:8"
																			},
																			"nativeSrc": "7700:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7700:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7690:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7690:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7656:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7656:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7649:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7649:6:8"
																},
																"nativeSrc": "7649:26:8",
																"nodeType": "YulFunctionCall",
																"src": "7649:26:8"
															},
															"nativeSrc": "7646:81:8",
															"nodeType": "YulIf",
															"src": "7646:81:8"
														},
														{
															"body": {
																"nativeSrc": "7779:42:8",
																"nodeType": "YulBlock",
																"src": "7779:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7793:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7793:16:8"
																			},
																			"nativeSrc": "7793:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7793:18:8"
																		},
																		"nativeSrc": "7793:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7793:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7743:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "7743:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7766:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7766:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7774:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7774:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7763:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7763:2:8"
																		},
																		"nativeSrc": "7763:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7763:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7740:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7740:2:8"
																},
																"nativeSrc": "7740:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7740:38:8"
															},
															"nativeSrc": "7737:84:8",
															"nodeType": "YulIf",
															"src": "7737:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7507:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7542:4:8",
														"nodeType": "YulTypedName",
														"src": "7542:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7551:6:8",
														"nodeType": "YulTypedName",
														"src": "7551:6:8",
														"type": ""
													}
												],
												"src": "7507:320:8"
											},
											{
												"body": {
													"nativeSrc": "7939:61:8",
													"nodeType": "YulBlock",
													"src": "7939:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7961:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7961:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7969:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7969:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7957:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:8"
																		},
																		"nativeSrc": "7957:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:14:8"
																	},
																	{
																		"hexValue": "546178206d75737420626520302d313030",
																		"kind": "string",
																		"nativeSrc": "7973:19:8",
																		"nodeType": "YulLiteral",
																		"src": "7973:19:8",
																		"type": "",
																		"value": "Tax must be 0-100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7950:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7950:6:8"
																},
																"nativeSrc": "7950:43:8",
																"nodeType": "YulFunctionCall",
																"src": "7950:43:8"
															},
															"nativeSrc": "7950:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "7950:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
												"nativeSrc": "7833:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7931:6:8",
														"nodeType": "YulTypedName",
														"src": "7931:6:8",
														"type": ""
													}
												],
												"src": "7833:167:8"
											},
											{
												"body": {
													"nativeSrc": "8152:220:8",
													"nodeType": "YulBlock",
													"src": "8152:220:8",
													"statements": [
														{
															"nativeSrc": "8162:74:8",
															"nodeType": "YulAssignment",
															"src": "8162:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8228:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8228:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8233:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8169:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8169:58:8"
																},
																"nativeSrc": "8169:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8169:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8162:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8162:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8334:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8334:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
																	"nativeSrc": "8245:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8245:88:8"
																},
																"nativeSrc": "8245:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8245:93:8"
															},
															"nativeSrc": "8245:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8245:93:8"
														},
														{
															"nativeSrc": "8347:19:8",
															"nodeType": "YulAssignment",
															"src": "8347:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8358:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8358:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8363:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8363:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8354:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8354:3:8"
																},
																"nativeSrc": "8354:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8354:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8347:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8347:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8006:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8140:3:8",
														"nodeType": "YulTypedName",
														"src": "8140:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8148:3:8",
														"nodeType": "YulTypedName",
														"src": "8148:3:8",
														"type": ""
													}
												],
												"src": "8006:366:8"
											},
											{
												"body": {
													"nativeSrc": "8549:248:8",
													"nodeType": "YulBlock",
													"src": "8549:248:8",
													"statements": [
														{
															"nativeSrc": "8559:26:8",
															"nodeType": "YulAssignment",
															"src": "8559:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8571:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8571:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8582:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8582:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8567:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8567:3:8"
																},
																"nativeSrc": "8567:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8567:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8559:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8559:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8606:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8606:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8617:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8617:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8602:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8602:3:8"
																		},
																		"nativeSrc": "8602:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8625:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8625:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8631:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8631:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8621:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8621:3:8"
																		},
																		"nativeSrc": "8621:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8621:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8595:6:8"
																},
																"nativeSrc": "8595:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8595:47:8"
															},
															"nativeSrc": "8595:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8595:47:8"
														},
														{
															"nativeSrc": "8651:139:8",
															"nodeType": "YulAssignment",
															"src": "8651:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8785:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8785:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8659:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8659:124:8"
																},
																"nativeSrc": "8659:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8659:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8651:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8651:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8378:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8529:9:8",
														"nodeType": "YulTypedName",
														"src": "8529:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8544:4:8",
														"nodeType": "YulTypedName",
														"src": "8544:4:8",
														"type": ""
													}
												],
												"src": "8378:419:8"
											},
											{
												"body": {
													"nativeSrc": "8831:152:8",
													"nodeType": "YulBlock",
													"src": "8831:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8848:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8848:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8851:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8851:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8841:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8841:6:8"
																},
																"nativeSrc": "8841:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8841:88:8"
															},
															"nativeSrc": "8841:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8841:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8945:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8945:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8948:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8948:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8938:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8938:6:8"
																},
																"nativeSrc": "8938:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8938:15:8"
															},
															"nativeSrc": "8938:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8938:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8969:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8969:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8972:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8972:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8962:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8962:6:8"
																},
																"nativeSrc": "8962:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8962:15:8"
															},
															"nativeSrc": "8962:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8962:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8803:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8803:180:8"
											},
											{
												"body": {
													"nativeSrc": "9037:362:8",
													"nodeType": "YulBlock",
													"src": "9037:362:8",
													"statements": [
														{
															"nativeSrc": "9047:25:8",
															"nodeType": "YulAssignment",
															"src": "9047:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9070:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9070:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9052:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9052:17:8"
																},
																"nativeSrc": "9052:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9052:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9047:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9047:1:8"
																}
															]
														},
														{
															"nativeSrc": "9081:25:8",
															"nodeType": "YulAssignment",
															"src": "9081:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9104:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9104:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9086:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9086:17:8"
																},
																"nativeSrc": "9086:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9086:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9081:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9081:1:8"
																}
															]
														},
														{
															"nativeSrc": "9115:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9115:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9138:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9138:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9141:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9141:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9134:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9134:3:8"
																},
																"nativeSrc": "9134:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9134:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9119:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9119:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9152:41:8",
															"nodeType": "YulAssignment",
															"src": "9152:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9181:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9181:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9163:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9163:17:8"
																},
																"nativeSrc": "9163:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9163:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9152:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9152:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9370:22:8",
																"nodeType": "YulBlock",
																"src": "9370:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9372:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9372:16:8"
																			},
																			"nativeSrc": "9372:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9372:18:8"
																		},
																		"nativeSrc": "9372:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9372:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9303:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9303:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9296:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9296:6:8"
																				},
																				"nativeSrc": "9296:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9296:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9326:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9326:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9333:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9333:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9342:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9342:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9329:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9329:3:8"
																						},
																						"nativeSrc": "9329:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9329:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9323:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9323:2:8"
																				},
																				"nativeSrc": "9323:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9323:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9276:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9276:2:8"
																		},
																		"nativeSrc": "9276:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9276:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9256:6:8"
																},
																"nativeSrc": "9256:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9256:113:8"
															},
															"nativeSrc": "9253:139:8",
															"nodeType": "YulIf",
															"src": "9253:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8989:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9020:1:8",
														"nodeType": "YulTypedName",
														"src": "9020:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9023:1:8",
														"nodeType": "YulTypedName",
														"src": "9023:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9029:7:8",
														"nodeType": "YulTypedName",
														"src": "9029:7:8",
														"type": ""
													}
												],
												"src": "8989:410:8"
											},
											{
												"body": {
													"nativeSrc": "9433:152:8",
													"nodeType": "YulBlock",
													"src": "9433:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9450:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9450:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9453:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9453:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9443:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9443:6:8"
																},
																"nativeSrc": "9443:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9443:88:8"
															},
															"nativeSrc": "9443:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9443:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9547:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9547:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9550:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9550:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9540:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9540:6:8"
																},
																"nativeSrc": "9540:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9540:15:8"
															},
															"nativeSrc": "9540:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9540:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9571:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9571:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9574:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9574:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9564:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9564:6:8"
																},
																"nativeSrc": "9564:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9564:15:8"
															},
															"nativeSrc": "9564:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9564:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9405:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9405:180:8"
											},
											{
												"body": {
													"nativeSrc": "9633:143:8",
													"nodeType": "YulBlock",
													"src": "9633:143:8",
													"statements": [
														{
															"nativeSrc": "9643:25:8",
															"nodeType": "YulAssignment",
															"src": "9643:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9666:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9666:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9648:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9648:17:8"
																},
																"nativeSrc": "9648:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9648:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9643:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9643:1:8"
																}
															]
														},
														{
															"nativeSrc": "9677:25:8",
															"nodeType": "YulAssignment",
															"src": "9677:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9700:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9700:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9682:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9682:17:8"
																},
																"nativeSrc": "9682:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9682:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9677:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9677:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9724:22:8",
																"nodeType": "YulBlock",
																"src": "9724:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9726:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9726:16:8"
																			},
																			"nativeSrc": "9726:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9726:18:8"
																		},
																		"nativeSrc": "9726:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9726:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9721:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9714:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9714:6:8"
																},
																"nativeSrc": "9714:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9714:9:8"
															},
															"nativeSrc": "9711:35:8",
															"nodeType": "YulIf",
															"src": "9711:35:8"
														},
														{
															"nativeSrc": "9756:14:8",
															"nodeType": "YulAssignment",
															"src": "9756:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9765:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9765:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9768:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9768:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9761:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9761:3:8"
																},
																"nativeSrc": "9761:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9761:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9756:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9756:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9591:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9622:1:8",
														"nodeType": "YulTypedName",
														"src": "9622:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9625:1:8",
														"nodeType": "YulTypedName",
														"src": "9625:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9631:1:8",
														"nodeType": "YulTypedName",
														"src": "9631:1:8",
														"type": ""
													}
												],
												"src": "9591:185:8"
											},
											{
												"body": {
													"nativeSrc": "9827:149:8",
													"nodeType": "YulBlock",
													"src": "9827:149:8",
													"statements": [
														{
															"nativeSrc": "9837:25:8",
															"nodeType": "YulAssignment",
															"src": "9837:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9860:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9860:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9842:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9842:17:8"
																},
																"nativeSrc": "9842:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9842:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9837:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9837:1:8"
																}
															]
														},
														{
															"nativeSrc": "9871:25:8",
															"nodeType": "YulAssignment",
															"src": "9871:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9894:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9894:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9876:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9876:17:8"
																},
																"nativeSrc": "9876:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9876:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9871:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9871:1:8"
																}
															]
														},
														{
															"nativeSrc": "9905:17:8",
															"nodeType": "YulAssignment",
															"src": "9905:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9917:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9917:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9920:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9920:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9913:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:8"
																},
																"nativeSrc": "9913:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9913:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9905:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9905:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9947:22:8",
																"nodeType": "YulBlock",
																"src": "9947:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9949:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9949:16:8"
																			},
																			"nativeSrc": "9949:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9949:18:8"
																		},
																		"nativeSrc": "9949:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9949:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9938:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9938:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9944:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9935:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9935:2:8"
																},
																"nativeSrc": "9935:11:8",
																"nodeType": "YulFunctionCall",
																"src": "9935:11:8"
															},
															"nativeSrc": "9932:37:8",
															"nodeType": "YulIf",
															"src": "9932:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9782:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9813:1:8",
														"nodeType": "YulTypedName",
														"src": "9813:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9816:1:8",
														"nodeType": "YulTypedName",
														"src": "9816:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9822:4:8",
														"nodeType": "YulTypedName",
														"src": "9822:4:8",
														"type": ""
													}
												],
												"src": "9782:194:8"
											},
											{
												"body": {
													"nativeSrc": "10088:62:8",
													"nodeType": "YulBlock",
													"src": "10088:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10110:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10110:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10118:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10118:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10106:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10106:3:8"
																		},
																		"nativeSrc": "10106:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10106:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964207461782077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "10122:20:8",
																		"nodeType": "YulLiteral",
																		"src": "10122:20:8",
																		"type": "",
																		"value": "Invalid tax wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10099:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:8"
																},
																"nativeSrc": "10099:44:8",
																"nodeType": "YulFunctionCall",
																"src": "10099:44:8"
															},
															"nativeSrc": "10099:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "10099:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
												"nativeSrc": "9982:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10080:6:8",
														"nodeType": "YulTypedName",
														"src": "10080:6:8",
														"type": ""
													}
												],
												"src": "9982:168:8"
											},
											{
												"body": {
													"nativeSrc": "10302:220:8",
													"nodeType": "YulBlock",
													"src": "10302:220:8",
													"statements": [
														{
															"nativeSrc": "10312:74:8",
															"nodeType": "YulAssignment",
															"src": "10312:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10378:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10378:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10383:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10383:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10319:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10319:58:8"
																},
																"nativeSrc": "10319:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10319:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10312:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10312:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10484:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10484:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
																	"nativeSrc": "10395:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10395:88:8"
																},
																"nativeSrc": "10395:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10395:93:8"
															},
															"nativeSrc": "10395:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10395:93:8"
														},
														{
															"nativeSrc": "10497:19:8",
															"nodeType": "YulAssignment",
															"src": "10497:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10508:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10508:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10513:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10513:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10504:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10504:3:8"
																},
																"nativeSrc": "10504:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10504:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10497:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10497:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10156:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10290:3:8",
														"nodeType": "YulTypedName",
														"src": "10290:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10298:3:8",
														"nodeType": "YulTypedName",
														"src": "10298:3:8",
														"type": ""
													}
												],
												"src": "10156:366:8"
											},
											{
												"body": {
													"nativeSrc": "10699:248:8",
													"nodeType": "YulBlock",
													"src": "10699:248:8",
													"statements": [
														{
															"nativeSrc": "10709:26:8",
															"nodeType": "YulAssignment",
															"src": "10709:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10721:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10721:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10732:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10732:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10717:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10717:3:8"
																},
																"nativeSrc": "10717:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10717:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10709:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10709:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10756:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10756:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10767:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10767:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10752:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10752:3:8"
																		},
																		"nativeSrc": "10752:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10752:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10775:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10775:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10781:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10781:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10771:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:8"
																		},
																		"nativeSrc": "10771:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10771:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10745:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10745:6:8"
																},
																"nativeSrc": "10745:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10745:47:8"
															},
															"nativeSrc": "10745:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10745:47:8"
														},
														{
															"nativeSrc": "10801:139:8",
															"nodeType": "YulAssignment",
															"src": "10801:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10935:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10935:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10809:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10809:124:8"
																},
																"nativeSrc": "10809:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10809:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10801:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10801:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10528:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10679:9:8",
														"nodeType": "YulTypedName",
														"src": "10679:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10694:4:8",
														"nodeType": "YulTypedName",
														"src": "10694:4:8",
														"type": ""
													}
												],
												"src": "10528:419:8"
											},
											{
												"body": {
													"nativeSrc": "11107:288:8",
													"nodeType": "YulBlock",
													"src": "11107:288:8",
													"statements": [
														{
															"nativeSrc": "11117:26:8",
															"nodeType": "YulAssignment",
															"src": "11117:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11129:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11129:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11140:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11140:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11125:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11125:3:8"
																},
																"nativeSrc": "11125:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11125:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11117:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11117:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11197:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11197:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11210:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11210:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11221:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11221:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11206:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:8"
																		},
																		"nativeSrc": "11206:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11206:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11153:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11153:43:8"
																},
																"nativeSrc": "11153:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11153:71:8"
															},
															"nativeSrc": "11153:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11153:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11278:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11278:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11291:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11291:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11302:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11302:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11287:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11287:3:8"
																		},
																		"nativeSrc": "11287:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11287:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11234:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11234:43:8"
																},
																"nativeSrc": "11234:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11234:72:8"
															},
															"nativeSrc": "11234:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11234:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11360:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11360:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11373:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11373:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11384:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11384:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11369:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11369:3:8"
																		},
																		"nativeSrc": "11369:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11369:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11316:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11316:43:8"
																},
																"nativeSrc": "11316:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11316:72:8"
															},
															"nativeSrc": "11316:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11316:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10953:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11063:9:8",
														"nodeType": "YulTypedName",
														"src": "11063:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11075:6:8",
														"nodeType": "YulTypedName",
														"src": "11075:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11083:6:8",
														"nodeType": "YulTypedName",
														"src": "11083:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11091:6:8",
														"nodeType": "YulTypedName",
														"src": "11091:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11102:4:8",
														"nodeType": "YulTypedName",
														"src": "11102:4:8",
														"type": ""
													}
												],
												"src": "10953:442:8"
											},
											{
												"body": {
													"nativeSrc": "11445:147:8",
													"nodeType": "YulBlock",
													"src": "11445:147:8",
													"statements": [
														{
															"nativeSrc": "11455:25:8",
															"nodeType": "YulAssignment",
															"src": "11455:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11478:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11478:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11460:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11460:17:8"
																},
																"nativeSrc": "11460:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11460:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11455:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11455:1:8"
																}
															]
														},
														{
															"nativeSrc": "11489:25:8",
															"nodeType": "YulAssignment",
															"src": "11489:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11512:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11512:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11494:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11494:17:8"
																},
																"nativeSrc": "11494:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11494:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11489:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11489:1:8"
																}
															]
														},
														{
															"nativeSrc": "11523:16:8",
															"nodeType": "YulAssignment",
															"src": "11523:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11534:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11534:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11537:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11537:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11530:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11530:3:8"
																},
																"nativeSrc": "11530:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11530:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11523:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11523:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11563:22:8",
																"nodeType": "YulBlock",
																"src": "11563:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11565:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11565:16:8"
																			},
																			"nativeSrc": "11565:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11565:18:8"
																		},
																		"nativeSrc": "11565:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11565:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11555:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11555:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11558:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11558:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11552:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11552:2:8"
																},
																"nativeSrc": "11552:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11552:10:8"
															},
															"nativeSrc": "11549:36:8",
															"nodeType": "YulIf",
															"src": "11549:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11401:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11432:1:8",
														"nodeType": "YulTypedName",
														"src": "11432:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11435:1:8",
														"nodeType": "YulTypedName",
														"src": "11435:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11441:3:8",
														"nodeType": "YulTypedName",
														"src": "11441:3:8",
														"type": ""
													}
												],
												"src": "11401:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tax must be 0-100\")\n\n    }\n\n    function abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid tax wallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061012a575f3560e01c8063771a3a1d116100ab578063c6d69a301161006f578063c6d69a3014610334578063d9b2c9cc14610350578063dd62ed3e14610381578063ea414b28146103b1578063f2fde38b146103cd5761012a565b8063771a3a1d1461028e5780638da5cb5b146102ac5780638ebfc796146102ca57806395d89b41146102e6578063a9059cbb146103045761012a565b8063313ce567116100f2578063313ce567146101e85780633f4218e0146102065780635c975abb1461023657806370a0823114610254578063715018a6146102845761012a565b806306fdde031461012e578063095ea7b31461014c57806318160ddd1461017c57806323b872dd1461019a5780632dc0562d146101ca575b5f5ffd5b6101366103e9565b60405161014391906112a6565b60405180910390f35b61016660048036038101906101619190611357565b610479565b60405161017391906113af565b60405180910390f35b61018461049b565b60405161019191906113d7565b60405180910390f35b6101b460048036038101906101af91906113f0565b6104a4565b6040516101c191906113af565b60405180910390f35b6101d26104d2565b6040516101df919061144f565b60405180910390f35b6101f06104f7565b6040516101fd9190611483565b60405180910390f35b610220600480360381019061021b919061149c565b6104ff565b60405161022d91906113af565b60405180910390f35b61023e61051c565b60405161024b91906113af565b60405180910390f35b61026e6004803603810190610269919061149c565b610532565b60405161027b91906113d7565b60405180910390f35b61028c610577565b005b61029661058a565b6040516102a391906113d7565b60405180910390f35b6102b4610590565b6040516102c1919061144f565b60405180910390f35b6102e460048036038101906102df91906114f1565b6105b8565b005b6102ee610666565b6040516102fb91906112a6565b60405180910390f35b61031e60048036038101906103199190611357565b6106f6565b60405161032b91906113af565b60405180910390f35b61034e6004803603810190610349919061152f565b610718565b005b61036a6004803603810190610365919061152f565b6107a5565b60405161037892919061155a565b60405180910390f35b61039b60048036038101906103969190611581565b6107d6565b6040516103a891906113d7565b60405180910390f35b6103cb60048036038101906103c6919061149c565b610858565b005b6103e760048036038101906103e2919061149c565b610954565b005b6060600380546103f8906115ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610424906115ec565b801561046f5780601f106104465761010080835404028352916020019161046f565b820191905f5260205f20905b81548152906001019060200180831161045257829003601f168201915b5050505050905090565b5f5f6104836109d8565b90506104908185856109df565b600191505092915050565b5f600254905090565b5f5f6104ae6109d8565b90506104bb8582856109f1565b6104c6858585610a84565b60019150509392505050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b5f600560149054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61057f610b74565b6105885f610bfb565b565b60065481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105c0610b74565b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f9b8f7e0160b0b3dbd1778c94df017a106051c9cfc844b82de0b4036a967d2d2b8260405161065a91906113af565b60405180910390a25050565b606060048054610675906115ec565b80601f01602080910402602001604051908101604052809291908181526020018280546106a1906115ec565b80156106ec5780601f106106c3576101008083540402835291602001916106ec565b820191905f5260205f20905b8154815290600101906020018083116106cf57829003601f168201915b5050505050905090565b5f5f6107006109d8565b905061070d818585610a84565b600191505092915050565b610720610b74565b6064811115610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90611666565b60405180910390fd5b806006819055507f82754e7bf8e3395ddb4a767c52b21ed0c3b9da843001b2e07ab46f25803234578160405161079a91906113d7565b60405180910390a150565b5f5f6064600654846107b791906116b1565b6107c1919061171f565b915081836107cf919061174f565b9050915091565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610860610b74565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c5906117cc565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1797049ec5d8ec17fdce2660fb55e33695fd7ebbdb65726cc6d171c0e1c312c760405160405180910390a250565b61095c610b74565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109c3919061144f565b60405180910390fd5b6109d581610bfb565b50565b5f33905090565b6109ec8383836001610cbe565b505050565b5f6109fc84846107d6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a7e5781811015610a6f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a66939291906117ea565b60405180910390fd5b610a7d84848484035f610cbe565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af4575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aeb919061144f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b64575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b5b919061144f565b60405180910390fd5b610b6f838383610e8d565b505050565b610b7c6109d8565b73ffffffffffffffffffffffffffffffffffffffff16610b9a610590565b73ffffffffffffffffffffffffffffffffffffffff1614610bf957610bbd6109d8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bf0919061144f565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d2e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d25919061144f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d9e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d95919061144f565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e87578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e7e91906113d7565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610ef257505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80610f43575060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b80610f94575060085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15610fa957610fa483838361101d565b611018565b5f606460065483610fba91906116b1565b610fc4919061171f565b90505f8183610fd3919061174f565b90505f82111561100a576110098560075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461101d565b5b61101585858361101d565b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106d578060025f828254611061919061181f565b9250508190555061113b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110f6578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ed939291906117ea565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611182578060025f82825403925050819055506111cc565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122991906113d7565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61127882611236565b6112828185611240565b9350611292818560208601611250565b61129b8161125e565b840191505092915050565b5f6020820190508181035f8301526112be818461126e565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112f3826112ca565b9050919050565b611303816112e9565b811461130d575f5ffd5b50565b5f8135905061131e816112fa565b92915050565b5f819050919050565b61133681611324565b8114611340575f5ffd5b50565b5f813590506113518161132d565b92915050565b5f5f6040838503121561136d5761136c6112c6565b5b5f61137a85828601611310565b925050602061138b85828601611343565b9150509250929050565b5f8115159050919050565b6113a981611395565b82525050565b5f6020820190506113c25f8301846113a0565b92915050565b6113d181611324565b82525050565b5f6020820190506113ea5f8301846113c8565b92915050565b5f5f5f60608486031215611407576114066112c6565b5b5f61141486828701611310565b935050602061142586828701611310565b925050604061143686828701611343565b9150509250925092565b611449816112e9565b82525050565b5f6020820190506114625f830184611440565b92915050565b5f60ff82169050919050565b61147d81611468565b82525050565b5f6020820190506114965f830184611474565b92915050565b5f602082840312156114b1576114b06112c6565b5b5f6114be84828501611310565b91505092915050565b6114d081611395565b81146114da575f5ffd5b50565b5f813590506114eb816114c7565b92915050565b5f5f60408385031215611507576115066112c6565b5b5f61151485828601611310565b9250506020611525858286016114dd565b9150509250929050565b5f60208284031215611544576115436112c6565b5b5f61155184828501611343565b91505092915050565b5f60408201905061156d5f8301856113c8565b61157a60208301846113c8565b9392505050565b5f5f60408385031215611597576115966112c6565b5b5f6115a485828601611310565b92505060206115b585828601611310565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061160357607f821691505b602082108103611616576116156115bf565b5b50919050565b7f546178206d75737420626520302d3130300000000000000000000000000000005f82015250565b5f611650601183611240565b915061165b8261161c565b602082019050919050565b5f6020820190508181035f83015261167d81611644565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116bb82611324565b91506116c683611324565b92508282026116d481611324565b915082820484148315176116eb576116ea611684565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61172982611324565b915061173483611324565b925082611744576117436116f2565b5b828204905092915050565b5f61175982611324565b915061176483611324565b925082820390508181111561177c5761177b611684565b5b92915050565b7f496e76616c6964207461782077616c6c657400000000000000000000000000005f82015250565b5f6117b6601283611240565b91506117c182611782565b602082019050919050565b5f6020820190508181035f8301526117e3816117aa565b9050919050565b5f6060820190506117fd5f830186611440565b61180a60208301856113c8565b61181760408301846113c8565b949350505050565b5f61182982611324565b915061183483611324565b925082820190508082111561184c5761184b611684565b5b9291505056fea26469706673582212207c71a7887e3bb518f4d22bf2f9a9f4c1831f7388abd3ef6a35a7f12ed0111e7b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771A3A1D GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC6D69A30 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xD9B2C9CC EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xEA414B28 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CD JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x304 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x284 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x2DC0562D EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP3 SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x46F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x446 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x452 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x483 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x490 DUP2 DUP6 DUP6 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AE PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BB DUP6 DUP3 DUP6 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x4C6 DUP6 DUP6 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57F PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x588 PUSH0 PUSH2 0xBFB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0xB74 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B8F7E0160B0B3DBD1778C94DF017A106051C9CFC844B82DE0B4036A967D2D2B DUP3 PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x675 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x15EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x700 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x70D DUP2 DUP6 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x720 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x82754E7BF8E3395DDB4A767C52B21ED0C3B9DA843001B2E07AB46F2580323457 DUP2 PUSH1 0x40 MLOAD PUSH2 0x79A SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP5 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x171F JUMP JUMPDEST SWAP2 POP DUP2 DUP4 PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x860 PUSH2 0xB74 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1797049EC5D8EC17FDCE2660FB55E33695FD7EBBDB65726CC6D171C0E1C312C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x95C PUSH2 0xB74 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0xBFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9EC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCBE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9FC DUP5 DUP5 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA7E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA6F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB64 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6F DUP4 DUP4 DUP4 PUSH2 0xE8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB7C PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB9A PUSH2 0x590 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF9 JUMPI PUSH2 0xBBD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE87 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEF2 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xF43 JUMPI POP PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xF94 JUMPI POP PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xFA9 JUMPI PUSH2 0xFA4 DUP4 DUP4 DUP4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x1018 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x171F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0x100A JUMPI PUSH2 0x1009 DUP6 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x101D JUMP JUMPDEST JUMPDEST PUSH2 0x1015 DUP6 DUP6 DUP4 PUSH2 0x101D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1061 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x113B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1182 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11CC JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1278 DUP3 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x1282 DUP2 DUP6 PUSH2 0x1240 JUMP JUMPDEST SWAP4 POP PUSH2 0x1292 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x125E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BE DUP2 DUP5 PUSH2 0x126E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12F3 DUP3 PUSH2 0x12CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1303 DUP2 PUSH2 0x12E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x130D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131E DUP2 PUSH2 0x12FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1336 DUP2 PUSH2 0x1324 JUMP JUMPDEST DUP2 EQ PUSH2 0x1340 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1351 DUP2 PUSH2 0x132D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136D JUMPI PUSH2 0x136C PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x137A DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x138B DUP6 DUP3 DUP7 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A9 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D1 DUP2 PUSH2 0x1324 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13EA PUSH0 DUP4 ADD DUP5 PUSH2 0x13C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1407 JUMPI PUSH2 0x1406 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1414 DUP7 DUP3 DUP8 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1425 DUP7 DUP3 DUP8 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1436 DUP7 DUP3 DUP8 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1449 DUP2 PUSH2 0x12E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1462 PUSH0 DUP4 ADD DUP5 PUSH2 0x1440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147D DUP2 PUSH2 0x1468 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1496 PUSH0 DUP4 ADD DUP5 PUSH2 0x1474 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH2 0x14B0 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BE DUP5 DUP3 DUP6 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D0 DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP2 EQ PUSH2 0x14DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EB DUP2 PUSH2 0x14C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1507 JUMPI PUSH2 0x1506 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1514 DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1525 DUP6 DUP3 DUP7 ADD PUSH2 0x14DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1551 DUP5 DUP3 DUP6 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x156D PUSH0 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x157A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1597 JUMPI PUSH2 0x1596 PUSH2 0x12C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1603 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x15BF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546178206D75737420626520302D313030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1650 PUSH1 0x11 DUP4 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP PUSH2 0x165B DUP3 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167D DUP2 PUSH2 0x1644 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16BB DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C6 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16D4 DUP2 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1684 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1729 DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x1734 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x16F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1759 DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x1764 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177B PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207461782077616C6C65740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B6 PUSH1 0x12 DUP4 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C1 DUP3 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E3 DUP2 PUSH2 0x17AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17FD PUSH0 DUP4 ADD DUP7 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x180A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x1817 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1829 DUP3 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP PUSH2 0x1834 DUP4 PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x184C JUMPI PUSH2 0x184B PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x71A7887E3BB518F4D22BF2F9A9F4C1831F7388ABD3EF6A35A7F12ED011 0x1E PUSH28 0x64736F6C634300081E00330000000000000000000000000000000000 ",
							"sourceMap": "228:2214:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331:24:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362:43:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:84:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;285:22:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1413:171:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;995:190:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:192;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3455:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1193:212:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;331:24:7:-;;;;;;;;;;;;;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;362:43:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;1726:84:6:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;2933:116:2:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;285:22:7:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1413:171:7:-;1531:13:0;:11;:13::i;:::-;1518:6:7::1;1495:11;:20;1507:7;1495:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1560:7;1540:36;;;1569:6;1540:36;;;;;;:::i;:::-;;;;;;;;1413:171:::0;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;995:190:7:-;1531:13:0;:11;:13::i;:::-;1083:3:7::1;1071:8;:15;;1063:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:8;1119:7;:18;;;;1153:24;1168:8;1153:24;;;;;;:::i;:::-;;;;;;;;995:190:::0;:::o;2247:192::-;2303:17;2322:18;2386:3;2375:7;;2366:6;:16;;;;:::i;:::-;2365:24;;;;:::i;:::-;2353:36;;2422:9;2413:6;:18;;;;:::i;:::-;2400:31;;2247:192;;;:::o;3455:140:2:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;1193:212:7:-;1531:13:0;:11;:13::i;:::-;1295:1:7::1;1273:24;;:10;:24;;::::0;1265:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1343:10;1331:9;;:22;;;;;;;;;;;;;;;;;;1386:10;1369:28;;;;;;;;;;;;1193:212:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9605:432:2:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;1642:554:7:-;1795:1;1779:18;;:4;:18;;;:38;;;;1815:1;1801:16;;:2;:16;;;1779:38;:59;;;;1821:11;:17;1833:4;1821:17;;;;;;;;;;;;;;;;;;;;;;;;;1779:59;:78;;;;1842:11;:15;1854:2;1842:15;;;;;;;;;;;;;;;;;;;;;;;;;1779:78;1775:162;;;1874:30;1888:4;1894:2;1898:5;1874:13;:30::i;:::-;1919:7;;1775:162;1949:17;1989:3;1978:7;;1970:5;:15;;;;:::i;:::-;1969:23;;;;:::i;:::-;1949:43;;2003:18;2032:9;2024:5;:17;;;;:::i;:::-;2003:38;;2070:1;2058:9;:13;2054:87;;;2088:41;2102:4;2108:9;;;;;;;;;;;2119;2088:13;:41::i;:::-;2054:87;2153:35;2167:4;2173:2;2177:10;2153:13;:35::i;:::-;1718:478;;1642:554;;;;:::o;5912:1107:2:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:118::-;4403:24;4421:5;4403:24;:::i;:::-;4398:3;4391:37;4316:118;;:::o;4440:222::-;4533:4;4571:2;4560:9;4556:18;4548:26;;4584:71;4652:1;4641:9;4637:17;4628:6;4584:71;:::i;:::-;4440:222;;;;:::o;4668:86::-;4703:7;4743:4;4736:5;4732:16;4721:27;;4668:86;;;:::o;4760:112::-;4843:22;4859:5;4843:22;:::i;:::-;4838:3;4831:35;4760:112;;:::o;4878:214::-;4967:4;5005:2;4994:9;4990:18;4982:26;;5018:67;5082:1;5071:9;5067:17;5058:6;5018:67;:::i;:::-;4878:214;;;;:::o;5098:329::-;5157:6;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5098:329;;;;:::o;5433:116::-;5503:21;5518:5;5503:21;:::i;:::-;5496:5;5493:32;5483:60;;5539:1;5536;5529:12;5483:60;5433:116;:::o;5555:133::-;5598:5;5636:6;5623:20;5614:29;;5652:30;5676:5;5652:30;:::i;:::-;5555:133;;;;:::o;5694:468::-;5759:6;5767;5816:2;5804:9;5795:7;5791:23;5787:32;5784:119;;;5822:79;;:::i;:::-;5784:119;5942:1;5967:53;6012:7;6003:6;5992:9;5988:22;5967:53;:::i;:::-;5957:63;;5913:117;6069:2;6095:50;6137:7;6128:6;6117:9;6113:22;6095:50;:::i;:::-;6085:60;;6040:115;5694:468;;;;;:::o;6168:329::-;6227:6;6276:2;6264:9;6255:7;6251:23;6247:32;6244:119;;;6282:79;;:::i;:::-;6244:119;6402:1;6427:53;6472:7;6463:6;6452:9;6448:22;6427:53;:::i;:::-;6417:63;;6373:117;6168:329;;;;:::o;6503:332::-;6624:4;6662:2;6651:9;6647:18;6639:26;;6675:71;6743:1;6732:9;6728:17;6719:6;6675:71;:::i;:::-;6756:72;6824:2;6813:9;6809:18;6800:6;6756:72;:::i;:::-;6503:332;;;;;:::o;6841:474::-;6909:6;6917;6966:2;6954:9;6945:7;6941:23;6937:32;6934:119;;;6972:79;;:::i;:::-;6934:119;7092:1;7117:53;7162:7;7153:6;7142:9;7138:22;7117:53;:::i;:::-;7107:63;;7063:117;7219:2;7245:53;7290:7;7281:6;7270:9;7266:22;7245:53;:::i;:::-;7235:63;;7190:118;6841:474;;;;;:::o;7321:180::-;7369:77;7366:1;7359:88;7466:4;7463:1;7456:15;7490:4;7487:1;7480:15;7507:320;7551:6;7588:1;7582:4;7578:12;7568:22;;7635:1;7629:4;7625:12;7656:18;7646:81;;7712:4;7704:6;7700:17;7690:27;;7646:81;7774:2;7766:6;7763:14;7743:18;7740:38;7737:84;;7793:18;;:::i;:::-;7737:84;7558:269;7507:320;;;:::o;7833:167::-;7973:19;7969:1;7961:6;7957:14;7950:43;7833:167;:::o;8006:366::-;8148:3;8169:67;8233:2;8228:3;8169:67;:::i;:::-;8162:74;;8245:93;8334:3;8245:93;:::i;:::-;8363:2;8358:3;8354:12;8347:19;;8006:366;;;:::o;8378:419::-;8544:4;8582:2;8571:9;8567:18;8559:26;;8631:9;8625:4;8621:20;8617:1;8606:9;8602:17;8595:47;8659:131;8785:4;8659:131;:::i;:::-;8651:139;;8378:419;;;:::o;8803:180::-;8851:77;8848:1;8841:88;8948:4;8945:1;8938:15;8972:4;8969:1;8962:15;8989:410;9029:7;9052:20;9070:1;9052:20;:::i;:::-;9047:25;;9086:20;9104:1;9086:20;:::i;:::-;9081:25;;9141:1;9138;9134:9;9163:30;9181:11;9163:30;:::i;:::-;9152:41;;9342:1;9333:7;9329:15;9326:1;9323:22;9303:1;9296:9;9276:83;9253:139;;9372:18;;:::i;:::-;9253:139;9037:362;8989:410;;;;:::o;9405:180::-;9453:77;9450:1;9443:88;9550:4;9547:1;9540:15;9574:4;9571:1;9564:15;9591:185;9631:1;9648:20;9666:1;9648:20;:::i;:::-;9643:25;;9682:20;9700:1;9682:20;:::i;:::-;9677:25;;9721:1;9711:35;;9726:18;;:::i;:::-;9711:35;9768:1;9765;9761:9;9756:14;;9591:185;;;;:::o;9782:194::-;9822:4;9842:20;9860:1;9842:20;:::i;:::-;9837:25;;9876:20;9894:1;9876:20;:::i;:::-;9871:25;;9920:1;9917;9913:9;9905:17;;9944:1;9938:4;9935:11;9932:37;;;9949:18;;:::i;:::-;9932:37;9782:194;;;;:::o;9982:168::-;10122:20;10118:1;10110:6;10106:14;10099:44;9982:168;:::o;10156:366::-;10298:3;10319:67;10383:2;10378:3;10319:67;:::i;:::-;10312:74;;10395:93;10484:3;10395:93;:::i;:::-;10513:2;10508:3;10504:12;10497:19;;10156:366;;;:::o;10528:419::-;10694:4;10732:2;10721:9;10717:18;10709:26;;10781:9;10775:4;10771:20;10767:1;10756:9;10752:17;10745:47;10809:131;10935:4;10809:131;:::i;:::-;10801:139;;10528:419;;;:::o;10953:442::-;11102:4;11140:2;11129:9;11125:18;11117:26;;11153:71;11221:1;11210:9;11206:17;11197:6;11153:71;:::i;:::-;11234:72;11302:2;11291:9;11287:18;11278:6;11234:72;:::i;:::-;11316;11384:2;11373:9;11369:18;11360:6;11316:72;:::i;:::-;10953:442;;;;;;:::o;11401:191::-;11441:3;11460:20;11478:1;11460:20;:::i;:::-;11455:25;;11494:20;11512:1;11494:20;:::i;:::-;11489:25;;11537:1;11534;11530:9;11523:16;;11558:3;11555:1;11552:10;11549:36;;;11565:18;;:::i;:::-;11549:36;11401:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1256000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"decimals()": "361",
								"isFeeExempt(address)": "2878",
								"name()": "infinite",
								"owner()": "2560",
								"paused()": "2591",
								"renounceOwnership()": "infinite",
								"setFeeExempt(address,bool)": "infinite",
								"setTaxRate(uint256)": "infinite",
								"setTaxWallet(address)": "infinite",
								"symbol()": "infinite",
								"taxRate()": "2448",
								"taxWallet()": "2620",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"viewTax(uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 228,
									"end": 2442,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 594,
									"end": 987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5375706572426F496E7500000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5342490000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 789,
									"end": 790,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 767,
									"end": 791,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 767,
									"end": 791,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 767,
									"end": 777,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 767,
									"end": 791,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 767,
									"end": 791,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 767,
									"end": 791,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 759,
									"end": 814,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 759,
									"end": 814,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 845,
									"end": 848,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 833,
									"end": 841,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 833,
									"end": 848,
									"modifierDepth": 2,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 833,
									"end": 848,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 825,
									"end": 870,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 825,
									"end": 870,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 895,
									"end": 905,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 883,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 883,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 883,
									"end": 905,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 926,
									"end": 934,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 916,
									"end": 923,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 916,
									"end": 934,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 916,
									"end": 934,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 916,
									"end": 934,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 916,
									"end": 934,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 947,
									"end": 979,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 953,
									"end": 963,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 965,
									"end": 978,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 947,
									"end": 952,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 947,
									"end": 952,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 947,
									"end": 952,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 947,
									"end": 979,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 947,
									"end": 979,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 947,
									"end": 979,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 947,
									"end": 979,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 947,
									"end": 979,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 987,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1642,
									"end": 2196,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1642,
									"end": 2196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1796,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1797,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1817,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1817,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1779,
									"end": 1817,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1817,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1801,
									"end": 1817,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1801,
									"end": 1817,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1801,
									"end": 1817,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1801,
									"end": 1817,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1801,
									"end": 1817,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1817,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1779,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1838,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1779,
									"end": 1838,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1838,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1832,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1833,
									"end": 1837,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1821,
									"end": 1838,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1838,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1779,
									"end": 1838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1853,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1775,
									"end": 1937,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1775,
									"end": 1937,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1775,
									"end": 1937,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1904,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1888,
									"end": 1892,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1896,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 1903,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1887,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1874,
									"end": 1887,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1874,
									"end": 1887,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1904,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1874,
									"end": 1904,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1904,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1874,
									"end": 1904,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1919,
									"end": 1926,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1919,
									"end": 1926,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1775,
									"end": 1937,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1775,
									"end": 1937,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1989,
									"end": 1992,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1970,
									"end": 1985,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1985,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1970,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1985,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1970,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 1992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1969,
									"end": 1992,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 1992,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 1992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1969,
									"end": 1992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 1992,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1969,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1992,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2032,
									"end": 2041,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2024,
									"end": 2029,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2024,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2003,
									"end": 2041,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2003,
									"end": 2041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2071,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2058,
									"end": 2067,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2141,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2141,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2054,
									"end": 2141,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2102,
									"end": 2106,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2108,
									"end": 2117,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2128,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2129,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2088,
									"end": 2129,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2129,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2088,
									"end": 2129,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2141,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2054,
									"end": 2141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2153,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2167,
									"end": 2171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2173,
									"end": 2175,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2177,
									"end": 2187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2153,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2153,
									"end": 2166,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2153,
									"end": 2166,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2153,
									"end": 2188,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2153,
									"end": 2188,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2153,
									"end": 2188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2153,
									"end": 2188,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2153,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 2196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 2196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 2196,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1642,
									"end": 2196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 2196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 2196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 2196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 2196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1926,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1960,
									"end": 1965,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2104,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2024,
									"end": 2025,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2017,
									"end": 2105,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2124,
									"end": 2128,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2121,
									"end": 2122,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2114,
									"end": 2129,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2138,
									"end": 2153,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2213,
									"end": 2290,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2203,
									"end": 2291,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2310,
									"end": 2314,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2307,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2338,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2331,
									"end": 2332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2324,
									"end": 2339,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2395,
									"end": 2401,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2433,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2426,
									"end": 2430,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2422,
									"end": 2434,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2480,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2469,
									"end": 2481,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2556,
									"end": 2560,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2548,
									"end": 2554,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2544,
									"end": 2561,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2618,
									"end": 2620,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2610,
									"end": 2616,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2607,
									"end": 2621,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2587,
									"end": 2605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2584,
									"end": 2622,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2637,
									"end": 2655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2402,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2752,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2775,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2806,
									"end": 2810,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2803,
									"end": 2804,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2793,
									"end": 2811,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2861,
									"end": 2867,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2908,
									"end": 2910,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2896,
									"end": 2901,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2906,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2911,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2975,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3022,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3007,
									"end": 3023,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3111,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3155,
									"end": 3156,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3143,
									"end": 3153,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3157,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 3208,
									"end": 3274,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 3178,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3326,
									"end": 3334,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3324,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 3296,
									"end": 3335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3368,
									"end": 3372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3364,
									"end": 3373,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3362,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3374,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3407,
									"end": 3415,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3422,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3396,
									"end": 3401,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3393,
									"end": 3423,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3463,
									"end": 3466,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3484,
									"end": 3489,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3551,
									"end": 3560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 3629,
									"end": 3634,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3611,
									"end": 3635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3602,
									"end": 3636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3584,
									"end": 3637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3692,
									"end": 3695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3713,
									"end": 3718,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 3871,
									"end": 3878,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3840,
									"end": 3879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 3974,
									"end": 3990,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3950,
									"end": 3991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3939,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3929,
									"end": 3940,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3901,
									"end": 3992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3895,
									"end": 3899,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3888,
									"end": 3993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3806,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4053,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4071,
									"end": 4072,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4064,
									"end": 4072,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 4161,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4260,
									"end": 4266,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4246,
									"end": 4250,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 4202,
									"end": 4267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4137,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4356,
									"end": 4359,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4349,
									"end": 4354,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4346,
									"end": 4360,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 4447,
									"end": 4448,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4440,
									"end": 4445,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4410,
									"end": 4449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4383,
									"end": 4384,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4376,
									"end": 4381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4385,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4572,
									"end": 4574,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4567,
									"end": 4570,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4564,
									"end": 4575,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 4638,
									"end": 4643,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4606,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 4708,
									"end": 4718,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 4690,
									"end": 4719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4680,
									"end": 4688,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4676,
									"end": 4720,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 4875,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4871,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4894,
									"end": 4902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 4991,
									"end": 4994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 4973,
									"end": 4995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4963,
									"end": 4971,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4959,
									"end": 4996,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4946,
									"end": 4957,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 4917,
									"end": 4997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5074,
									"end": 5082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5124,
									"end": 5129,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5118,
									"end": 5122,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5114,
									"end": 5130,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5187,
									"end": 5193,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5268,
									"end": 5269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5264,
									"end": 5270,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5253,
									"end": 5254,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5249,
									"end": 5262,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5220,
									"end": 5271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5216,
									"end": 5272,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5301,
									"end": 5305,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5295,
									"end": 5299,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5306,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5194,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5393,
									"end": 5397,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5564,
									"end": 5567,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5558,
									"end": 5562,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 5539,
									"end": 5568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5601,
									"end": 5604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5598,
									"end": 5599,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5594,
									"end": 5605,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5588,
									"end": 5592,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5585,
									"end": 5606,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 5767,
									"end": 5770,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5734,
									"end": 5771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5836,
									"end": 5854,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5828,
									"end": 5834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5825,
									"end": 5855,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5858,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 5934,
									"end": 5938,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5928,
									"end": 5939,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5902,
									"end": 5940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6047,
									"end": 6053,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6039,
									"end": 6045,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6037,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 5987,
									"end": 6054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6105,
									"end": 6109,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6137,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6140,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6155,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6811,
									"end": 6812,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6828,
									"end": 6834,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6877,
									"end": 6886,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6872,
									"end": 6875,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6868,
									"end": 6887,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6888,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6988,
									"end": 6994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6981,
									"end": 6986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 6928,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6922,
									"end": 6926,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6915,
									"end": 6996,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6784,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6201,
									"end": 6205,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6197,
									"end": 6206,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6195,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6185,
									"end": 6207,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 6267,
									"end": 6271,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 6235,
									"end": 6272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6294,
									"end": 6295,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6322,
									"end": 6329,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6319,
									"end": 6320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6316,
									"end": 6330,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6401,
									"end": 6410,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6411,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6412,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6378,
									"end": 6384,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6371,
									"end": 6413,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6452,
									"end": 6453,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6444,
									"end": 6450,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6440,
									"end": 6454,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6499,
									"end": 6501,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6488,
									"end": 6497,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6484,
									"end": 6502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6342,
									"end": 6343,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6338,
									"end": 6350,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6544,
									"end": 6550,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6535,
									"end": 6542,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6532,
									"end": 6551,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6602,
									"end": 6611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6597,
									"end": 6600,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6593,
									"end": 6612,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6587,
									"end": 6613,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 6687,
									"end": 6691,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6679,
									"end": 6685,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6675,
									"end": 6692,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6664,
									"end": 6673,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 6645,
									"end": 6693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6637,
									"end": 6643,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6630,
									"end": 6694,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6552,
									"end": 6708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6754,
									"end": 6755,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6750,
									"end": 6751,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6742,
									"end": 6748,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6738,
									"end": 6752,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6734,
									"end": 6756,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6728,
									"end": 6732,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6757,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7123,
									"end": 7128,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 7105,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7100,
									"end": 7103,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7093,
									"end": 7130,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7235,
									"end": 7239,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7273,
									"end": 7275,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7262,
									"end": 7271,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7258,
									"end": 7276,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7354,
									"end": 7355,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7343,
									"end": 7352,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7339,
									"end": 7356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7330,
									"end": 7336,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7286,
									"end": 7357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7488,
									"end": 7494,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7483,
									"end": 7486,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7476,
									"end": 7495,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7528,
									"end": 7532,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7523,
									"end": 7526,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7519,
									"end": 7533,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7504,
									"end": 7533,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7504,
									"end": 7533,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7545,
									"end": 7713,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 7545,
									"end": 7713,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7685,
									"end": 7705,
									"name": "PUSH",
									"source": 8,
									"value": "496E76616C6964207461782077616C6C65740000000000000000000000000000"
								},
								{
									"begin": 7681,
									"end": 7682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7673,
									"end": 7679,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7669,
									"end": 7683,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7662,
									"end": 7706,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7545,
									"end": 7713,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7545,
									"end": 7713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7719,
									"end": 8085,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 7719,
									"end": 8085,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7861,
									"end": 7864,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7882,
									"end": 7949,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 7946,
									"end": 7948,
									"name": "PUSH",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 7941,
									"end": 7944,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7882,
									"end": 7949,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 7882,
									"end": 7949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7882,
									"end": 7949,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 7882,
									"end": 7949,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7875,
									"end": 7949,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7875,
									"end": 7949,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7958,
									"end": 8051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8047,
									"end": 8050,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7958,
									"end": 8051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 7958,
									"end": 8051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7958,
									"end": 8051,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 7958,
									"end": 8051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8076,
									"end": 8078,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8071,
									"end": 8074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8067,
									"end": 8079,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8060,
									"end": 8079,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8060,
									"end": 8079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7719,
									"end": 8085,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7719,
									"end": 8085,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7719,
									"end": 8085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7719,
									"end": 8085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8510,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8091,
									"end": 8510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8257,
									"end": 8261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8295,
									"end": 8297,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8284,
									"end": 8293,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8280,
									"end": 8298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8272,
									"end": 8298,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8272,
									"end": 8298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8344,
									"end": 8353,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8338,
									"end": 8342,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8334,
									"end": 8354,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 8330,
									"end": 8331,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8319,
									"end": 8328,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8315,
									"end": 8332,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8308,
									"end": 8355,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8372,
									"end": 8503,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 8498,
									"end": 8502,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8372,
									"end": 8503,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 8372,
									"end": 8503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8372,
									"end": 8503,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 8372,
									"end": 8503,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8364,
									"end": 8503,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8364,
									"end": 8503,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8510,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8510,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8510,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8091,
									"end": 8510,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8516,
									"end": 8683,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 8516,
									"end": 8683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8656,
									"end": 8675,
									"name": "PUSH",
									"source": 8,
									"value": "546178206D75737420626520302D313030000000000000000000000000000000"
								},
								{
									"begin": 8652,
									"end": 8653,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8644,
									"end": 8650,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8640,
									"end": 8654,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8633,
									"end": 8676,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8516,
									"end": 8683,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8516,
									"end": 8683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8689,
									"end": 9055,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 8689,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8831,
									"end": 8834,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8852,
									"end": 8919,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 8916,
									"end": 8918,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 8911,
									"end": 8914,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8852,
									"end": 8919,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8852,
									"end": 8919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8852,
									"end": 8919,
									"name": "tag",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 8852,
									"end": 8919,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8845,
									"end": 8919,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8845,
									"end": 8919,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8928,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9017,
									"end": 9020,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8928,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 8928,
									"end": 9021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8928,
									"end": 9021,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 8928,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9046,
									"end": 9048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9041,
									"end": 9044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9037,
									"end": 9049,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9030,
									"end": 9049,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9030,
									"end": 9049,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8689,
									"end": 9055,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8689,
									"end": 9055,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8689,
									"end": 9055,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8689,
									"end": 9055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9061,
									"end": 9480,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 9061,
									"end": 9480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9227,
									"end": 9231,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9265,
									"end": 9267,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9254,
									"end": 9263,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9250,
									"end": 9268,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9242,
									"end": 9268,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9242,
									"end": 9268,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9323,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9308,
									"end": 9312,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9304,
									"end": 9324,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 9300,
									"end": 9301,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9289,
									"end": 9298,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9285,
									"end": 9302,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9278,
									"end": 9325,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9342,
									"end": 9473,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9468,
									"end": 9472,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9342,
									"end": 9473,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 9342,
									"end": 9473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9342,
									"end": 9473,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9342,
									"end": 9473,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9334,
									"end": 9473,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9334,
									"end": 9473,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9061,
									"end": 9480,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9061,
									"end": 9480,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9061,
									"end": 9480,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9061,
									"end": 9480,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9486,
									"end": 9666,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 9486,
									"end": 9666,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9534,
									"end": 9611,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9531,
									"end": 9532,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9524,
									"end": 9612,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9631,
									"end": 9635,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 9628,
									"end": 9629,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 9621,
									"end": 9636,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9655,
									"end": 9659,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 9652,
									"end": 9653,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9645,
									"end": 9660,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10082,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 9672,
									"end": 10082,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9712,
									"end": 9719,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9735,
									"end": 9755,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 9753,
									"end": 9754,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9735,
									"end": 9755,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 9735,
									"end": 9755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9735,
									"end": 9755,
									"name": "tag",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 9735,
									"end": 9755,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9730,
									"end": 9755,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9730,
									"end": 9755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9769,
									"end": 9789,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9769,
									"end": 9789,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 9769,
									"end": 9789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9769,
									"end": 9789,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9769,
									"end": 9789,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9764,
									"end": 9789,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9764,
									"end": 9789,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9824,
									"end": 9825,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9821,
									"end": 9822,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9817,
									"end": 9826,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9846,
									"end": 9876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9864,
									"end": 9875,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9846,
									"end": 9876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 9846,
									"end": 9876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9846,
									"end": 9876,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9846,
									"end": 9876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9835,
									"end": 9876,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9835,
									"end": 9876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10025,
									"end": 10026,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10016,
									"end": 10023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10012,
									"end": 10027,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 10009,
									"end": 10010,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10006,
									"end": 10028,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 9986,
									"end": 9987,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9979,
									"end": 9988,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 10042,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 9936,
									"end": 10075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 9936,
									"end": 10075,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10055,
									"end": 10073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10055,
									"end": 10073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 10055,
									"end": 10073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10055,
									"end": 10073,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10055,
									"end": 10073,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9936,
									"end": 10075,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 9936,
									"end": 10075,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9720,
									"end": 10082,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10082,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10082,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10082,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10082,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10082,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10088,
									"end": 10268,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 10088,
									"end": 10268,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10136,
									"end": 10213,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10133,
									"end": 10134,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10126,
									"end": 10214,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10233,
									"end": 10237,
									"name": "PUSH",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 10230,
									"end": 10231,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 10223,
									"end": 10238,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10257,
									"end": 10261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 10254,
									"end": 10255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10247,
									"end": 10262,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 10274,
									"end": 10459,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 10274,
									"end": 10459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10314,
									"end": 10315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10331,
									"end": 10351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 10349,
									"end": 10350,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10331,
									"end": 10351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10331,
									"end": 10351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10331,
									"end": 10351,
									"name": "tag",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 10331,
									"end": 10351,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10326,
									"end": 10351,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10326,
									"end": 10351,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10365,
									"end": 10385,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10383,
									"end": 10384,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10365,
									"end": 10385,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10365,
									"end": 10385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10365,
									"end": 10385,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10365,
									"end": 10385,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10360,
									"end": 10385,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10360,
									"end": 10385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10404,
									"end": 10405,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10394,
									"end": 10429,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10394,
									"end": 10429,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10409,
									"end": 10427,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10409,
									"end": 10427,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 10409,
									"end": 10427,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10409,
									"end": 10427,
									"name": "tag",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10409,
									"end": 10427,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10394,
									"end": 10429,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10394,
									"end": 10429,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10451,
									"end": 10452,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10448,
									"end": 10449,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10444,
									"end": 10453,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 10439,
									"end": 10453,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10439,
									"end": 10453,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10274,
									"end": 10459,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10274,
									"end": 10459,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10274,
									"end": 10459,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10274,
									"end": 10459,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10274,
									"end": 10459,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10465,
									"end": 10659,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 10465,
									"end": 10659,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10505,
									"end": 10509,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10525,
									"end": 10545,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10543,
									"end": 10544,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10525,
									"end": 10545,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10525,
									"end": 10545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10525,
									"end": 10545,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10525,
									"end": 10545,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10520,
									"end": 10545,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10520,
									"end": 10545,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10559,
									"end": 10579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10577,
									"end": 10578,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10559,
									"end": 10579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10559,
									"end": 10579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10559,
									"end": 10579,
									"name": "tag",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10559,
									"end": 10579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10554,
									"end": 10579,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10554,
									"end": 10579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10603,
									"end": 10604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10600,
									"end": 10601,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10596,
									"end": 10605,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 10588,
									"end": 10605,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10588,
									"end": 10605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10627,
									"end": 10628,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10621,
									"end": 10625,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10618,
									"end": 10629,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 10615,
									"end": 10652,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10615,
									"end": 10652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10615,
									"end": 10652,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10632,
									"end": 10650,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 10632,
									"end": 10650,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 10632,
									"end": 10650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10632,
									"end": 10650,
									"name": "tag",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 10632,
									"end": 10650,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10615,
									"end": 10652,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10615,
									"end": 10652,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10465,
									"end": 10659,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10465,
									"end": 10659,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10465,
									"end": 10659,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10465,
									"end": 10659,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10465,
									"end": 10659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10665,
									"end": 10856,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 10665,
									"end": 10856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10705,
									"end": 10708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10724,
									"end": 10744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 10742,
									"end": 10743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10724,
									"end": 10744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10724,
									"end": 10744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10724,
									"end": 10744,
									"name": "tag",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 10724,
									"end": 10744,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10719,
									"end": 10744,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10719,
									"end": 10744,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10758,
									"end": 10778,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "220"
								},
								{
									"begin": 10776,
									"end": 10777,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10758,
									"end": 10778,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10758,
									"end": 10778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10758,
									"end": 10778,
									"name": "tag",
									"source": 8,
									"value": "220"
								},
								{
									"begin": 10758,
									"end": 10778,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10753,
									"end": 10778,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10753,
									"end": 10778,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10801,
									"end": 10802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10798,
									"end": 10799,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10794,
									"end": 10803,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10787,
									"end": 10803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10787,
									"end": 10803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10822,
									"end": 10825,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 10819,
									"end": 10820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10816,
									"end": 10826,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 10813,
									"end": 10849,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10813,
									"end": 10849,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 10813,
									"end": 10849,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10829,
									"end": 10847,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "222"
								},
								{
									"begin": 10829,
									"end": 10847,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 10829,
									"end": 10847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10829,
									"end": 10847,
									"name": "tag",
									"source": 8,
									"value": "222"
								},
								{
									"begin": 10829,
									"end": 10847,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10813,
									"end": 10849,
									"name": "tag",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 10813,
									"end": 10849,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10665,
									"end": 10856,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10665,
									"end": 10856,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10665,
									"end": 10856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10665,
									"end": 10856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10665,
									"end": 10856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10862,
									"end": 10980,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 10862,
									"end": 10980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10949,
									"end": 10973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "224"
								},
								{
									"begin": 10967,
									"end": 10972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10949,
									"end": 10973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 10949,
									"end": 10973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10949,
									"end": 10973,
									"name": "tag",
									"source": 8,
									"value": "224"
								},
								{
									"begin": 10949,
									"end": 10973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10944,
									"end": 10947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10937,
									"end": 10974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10862,
									"end": 10980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10862,
									"end": 10980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10862,
									"end": 10980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11135,
									"end": 11139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11173,
									"end": 11175,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 11162,
									"end": 11171,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11158,
									"end": 11176,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11150,
									"end": 11176,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11150,
									"end": 11176,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11186,
									"end": 11257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "226"
								},
								{
									"begin": 11254,
									"end": 11255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11243,
									"end": 11252,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11239,
									"end": 11256,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11230,
									"end": 11236,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 11186,
									"end": 11257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 11186,
									"end": 11257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11186,
									"end": 11257,
									"name": "tag",
									"source": 8,
									"value": "226"
								},
								{
									"begin": 11186,
									"end": 11257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11267,
									"end": 11339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "227"
								},
								{
									"begin": 11335,
									"end": 11337,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11324,
									"end": 11333,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11320,
									"end": 11338,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11311,
									"end": 11317,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 11267,
									"end": 11339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 11267,
									"end": 11339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11267,
									"end": 11339,
									"name": "tag",
									"source": 8,
									"value": "227"
								},
								{
									"begin": 11267,
									"end": 11339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11349,
									"end": 11421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "228"
								},
								{
									"begin": 11417,
									"end": 11419,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 11406,
									"end": 11415,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11402,
									"end": 11420,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11393,
									"end": 11399,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11349,
									"end": 11421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 11349,
									"end": 11421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11349,
									"end": 11421,
									"name": "tag",
									"source": 8,
									"value": "228"
								},
								{
									"begin": 11349,
									"end": 11421,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10986,
									"end": 11428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11656,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 11434,
									"end": 11656,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11527,
									"end": 11531,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11565,
									"end": 11567,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11554,
									"end": 11563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11550,
									"end": 11568,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11542,
									"end": 11568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11542,
									"end": 11568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "230"
								},
								{
									"begin": 11646,
									"end": 11647,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11635,
									"end": 11644,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11631,
									"end": 11648,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11622,
									"end": 11628,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 11578,
									"end": 11649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "tag",
									"source": 8,
									"value": "230"
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11656,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11656,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11656,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11656,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 2442,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c71a7887e3bb518f4d22bf2f9a9f4c1831f7388abd3ef6a35a7f12ed0111e7b64736f6c634300081e0033",
									".code": [
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "771A3A1D"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "C6D69A30"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "C6D69A30"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "D9B2C9CC"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "EA414B28"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "771A3A1D"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "8EBFC796"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "3F4218E0"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "2DC0562D"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 2442,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 331,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 331,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 362,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 362,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 362,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 307,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 285,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 285,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1413,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1413,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 995,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 995,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2247,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2247,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2247,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1193,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1193,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 331,
											"end": 355,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 331,
											"end": 355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 331,
											"end": 355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 362,
											"end": 405,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 307,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 285,
											"end": 307,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 285,
											"end": 307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1514,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9B8F7E0160B0B3DBD1778C94DF017A106051C9CFC844B82DE0B4036A967D2D2B"
										},
										{
											"begin": 1569,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1540,
											"end": 1576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1576,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1071,
											"end": 1079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1071,
											"end": 1086,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1071,
											"end": 1086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1063,
											"end": 1108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1063,
											"end": 1108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1119,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "82754E7BF8E3395DDB4A767C52B21ED0C3B9DA843001B2E07AB46F2580323457"
										},
										{
											"begin": 1168,
											"end": 1176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1153,
											"end": 1177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1177,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2340,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2375,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2375,
											"end": 2382,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2372,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2366,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2365,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2413,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1297,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1265,
											"end": 1320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1265,
											"end": 1320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1331,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1396,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1797049EC5D8EC17FDCE2660FB55E33695FD7EBBDB65726CC6D171C0E1C312C7"
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1397,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 2196,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1642,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1783,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1779,
											"end": 1817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1779,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1838,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1779,
											"end": 1838,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1838,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1779,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1857,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1779,
											"end": 1857,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1856,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1857,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1779,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1937,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1775,
											"end": 1937,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1888,
											"end": 1892,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1903,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1874,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1874,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1919,
											"end": 1926,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1937,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1775,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1992,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1975,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1970,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1969,
											"end": 1992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2024,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2054,
											"end": 2141,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2088,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2088,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2141,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2054,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2167,
											"end": 2171,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2175,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2153,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2188,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2153,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 2196,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1642,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 2196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4403,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4403,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4391,
											"end": 4428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 4584,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 4584,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4736,
											"end": 4741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4732,
											"end": 4748,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4859,
											"end": 4864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4843,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5007,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5018,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5549,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5433,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5503,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 5503,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5493,
											"end": 5525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5483,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5623,
											"end": 5643,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5676,
											"end": 5681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5652,
											"end": 5682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5652,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5802,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5787,
											"end": 5819,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5822,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5967,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 6020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 6020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6137,
											"end": 6144,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6126,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 6095,
											"end": 6145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6095,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6085,
											"end": 6145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6085,
											"end": 6145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6040,
											"end": 6155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 6162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6497,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 6168,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6227,
											"end": 6233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6278,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6255,
											"end": 6262,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6251,
											"end": 6274,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6247,
											"end": 6279,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6363,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6244,
											"end": 6363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6282,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6282,
											"end": 6361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6361,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6282,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6363,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6244,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6472,
											"end": 6479,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6427,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6427,
											"end": 6480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6427,
											"end": 6480,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6427,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6497,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6835,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6503,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6743,
											"end": 6744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 6725,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6675,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6746,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6675,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6824,
											"end": 6826,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6822,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6756,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6756,
											"end": 6828,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6756,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6835,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 7315,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 6841,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6954,
											"end": 6963,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 6952,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6941,
											"end": 6964,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 6969,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7053,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 6934,
											"end": 7053,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6972,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6972,
											"end": 7051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 7051,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6972,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 7053,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 6934,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 7162,
											"end": 7169,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7153,
											"end": 7159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7117,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7117,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7117,
											"end": 7170,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 7117,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7063,
											"end": 7180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7245,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 7290,
											"end": 7297,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7281,
											"end": 7287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7279,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7245,
											"end": 7298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7298,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 7245,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 7315,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 7315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 7315,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 7315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 7315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 7315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7501,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7321,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7446,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7366,
											"end": 7367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7359,
											"end": 7447,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7470,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7456,
											"end": 7471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7495,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7827,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 7507,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 7557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7589,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7582,
											"end": 7586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7568,
											"end": 7590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7568,
											"end": 7590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7635,
											"end": 7636,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7629,
											"end": 7633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7637,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7656,
											"end": 7674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7646,
											"end": 7727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7712,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7704,
											"end": 7710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7700,
											"end": 7717,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7717,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7727,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7646,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7774,
											"end": 7776,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7777,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7778,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7737,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 7737,
											"end": 7821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7793,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7737,
											"end": 7821,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 7737,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7558,
											"end": 7827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 8000,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7833,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 7992,
											"name": "PUSH",
											"source": 8,
											"value": "546178206D75737420626520302D313030000000000000000000000000000000"
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7957,
											"end": 7971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7950,
											"end": 7993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 8000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 8000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8372,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8006,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 8233,
											"end": 8235,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8169,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8169,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8169,
											"end": 8236,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 8169,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8162,
											"end": 8236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8162,
											"end": 8236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8245,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8334,
											"end": 8337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8245,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8245,
											"end": 8338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8245,
											"end": 8338,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8245,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8365,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8358,
											"end": 8361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8354,
											"end": 8366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8797,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 8378,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8584,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8585,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8631,
											"end": 8640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8625,
											"end": 8629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8621,
											"end": 8641,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8602,
											"end": 8619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8595,
											"end": 8642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8659,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8785,
											"end": 8789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8659,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8659,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8659,
											"end": 8790,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8659,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8651,
											"end": 8790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8651,
											"end": 8790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8983,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8803,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8928,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8948,
											"end": 8952,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8945,
											"end": 8946,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8938,
											"end": 8953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8972,
											"end": 8976,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8969,
											"end": 8970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8962,
											"end": 8977,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9399,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 8989,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9029,
											"end": 9036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9052,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9070,
											"end": 9071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9052,
											"end": 9072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9072,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9052,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9104,
											"end": 9105,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9086,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9106,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9086,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9081,
											"end": 9106,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9081,
											"end": 9106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9181,
											"end": 9192,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9163,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9193,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9163,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9152,
											"end": 9193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9152,
											"end": 9193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9342,
											"end": 9343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9333,
											"end": 9340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9344,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9326,
											"end": 9327,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9323,
											"end": 9345,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9303,
											"end": 9304,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9305,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9276,
											"end": 9359,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9253,
											"end": 9392,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 9372,
											"end": 9390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9392,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9253,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9399,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9405,
											"end": 9585,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 9405,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9453,
											"end": 9530,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9554,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9547,
											"end": 9548,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9540,
											"end": 9555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9579,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9776,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 9591,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9631,
											"end": 9632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 9666,
											"end": 9667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9648,
											"end": 9668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9668,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 9648,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 9700,
											"end": 9701,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9682,
											"end": 9702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9702,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9711,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 9711,
											"end": 9746,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 9726,
											"end": 9744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9711,
											"end": 9746,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 9711,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 9770,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9770,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9976,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 9782,
											"end": 9976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9842,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 9860,
											"end": 9861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9842,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9842,
											"end": 9862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9842,
											"end": 9862,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 9842,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 9862,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 9862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9894,
											"end": 9895,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9876,
											"end": 9896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9871,
											"end": 9896,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9871,
											"end": 9896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9920,
											"end": 9921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9917,
											"end": 9918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9922,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9922,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9922,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9938,
											"end": 9942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9935,
											"end": 9946,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9932,
											"end": 9969,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9932,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9932,
											"end": 9969,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9949,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 9949,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 9967,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9949,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9932,
											"end": 9969,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9932,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9982,
											"end": 10150,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9982,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10142,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964207461782077616C6C65740000000000000000000000000000"
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10143,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9982,
											"end": 10150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9982,
											"end": 10150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10522,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 10156,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10298,
											"end": 10301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 10383,
											"end": 10385,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10378,
											"end": 10381,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 10319,
											"end": 10386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10386,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 10319,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 10484,
											"end": 10487,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 10395,
											"end": 10488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10488,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 10395,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10513,
											"end": 10515,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10511,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10516,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10947,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 10528,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10721,
											"end": 10730,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10709,
											"end": 10735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10709,
											"end": 10735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 10790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10767,
											"end": 10768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10765,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10752,
											"end": 10769,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10745,
											"end": 10792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 10935,
											"end": 10939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 10809,
											"end": 10940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10940,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 10809,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11102,
											"end": 11106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11142,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11129,
											"end": 11138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11221,
											"end": 11222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11219,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11206,
											"end": 11223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11197,
											"end": 11203,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11153,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11234,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11302,
											"end": 11304,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11291,
											"end": 11300,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11278,
											"end": 11284,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11234,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 11234,
											"end": 11306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11234,
											"end": 11306,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11234,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11316,
											"end": 11388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11384,
											"end": 11386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11373,
											"end": 11382,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11369,
											"end": 11387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11360,
											"end": 11366,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11316,
											"end": 11388,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 11316,
											"end": 11388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11316,
											"end": 11388,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11316,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11592,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 11401,
											"end": 11592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11441,
											"end": 11444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11460,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11478,
											"end": 11479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11460,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 11460,
											"end": 11480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11460,
											"end": 11480,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11460,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11455,
											"end": 11480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11455,
											"end": 11480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 11512,
											"end": 11513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 11494,
											"end": 11514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11514,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 11494,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11537,
											"end": 11538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11534,
											"end": 11535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11530,
											"end": 11539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11558,
											"end": 11561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11555,
											"end": 11556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11552,
											"end": 11562,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 11585,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11549,
											"end": 11585,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 11565,
											"end": 11583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 11585,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11549,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"SuperBoInu.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"isFeeExempt(address)": "3f4218e0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setFeeExempt(address,bool)": "8ebfc796",
							"setTaxRate(uint256)": "c6d69a30",
							"setTaxWallet(address)": "ea414b28",
							"symbol()": "95d89b41",
							"taxRate()": "771a3a1d",
							"taxWallet()": "2dc0562d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"viewTax(uint256)": "d9b2c9cc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_taxWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExempt\",\"type\":\"bool\"}],\"name\":\"ExemptStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTaxRate\",\"type\":\"uint256\"}],\"name\":\"TaxRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTaxWallet\",\"type\":\"address\"}],\"name\":\"TaxWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFeeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"name\":\"setTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taxWallet\",\"type\":\"address\"}],\"name\":\"setTaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"viewTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"taxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sendAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SuperBoInu.sol\":\"SuperBoInu\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"SuperBoInu.sol\":{\"keccak256\":\"0xa3580927486f7a04cde7243ed523a5ed5cbeef7b43d913c756da35041ec82414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4949fc6231fa0fcdef316c70e489767121e5af39eea93b50310f22ea2a3a3f4f\",\"dweb:/ipfs/QmcjC5QMbSs2LadgDmJtXiXR6BxxaKnrfERUQEwWqLA8Fc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 942,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1054,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "taxRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1056,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "taxWallet",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1060,
								"contract": "SuperBoInu.sol:SuperBoInu",
								"label": "isFeeExempt",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`âs `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Pausable": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1042,
							"sourceUnit": 934,
							"src": "128:45:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "Context",
										"nameLocations": [
											"645:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "645:7:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:6"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041,
								933
							],
							"name": "Pausable",
							"nameLocation": "633:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 942,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1041,
									"src": "659:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 941,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 947,
									"name": "Paused",
									"nameLocation": "770:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "777:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:6"
									},
									"src": "764:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 952,
									"name": "Unpaused",
									"nameLocation": "881:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "890:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:6"
									},
									"src": "875:32:6"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:6",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 955,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:6"
									},
									"src": "994:22:6"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:6",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 958,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:6"
									},
									"src": "1107:22:6"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "1340:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 961,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1350:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:6"
											},
											{
												"id": 964,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:6"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 966,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:6"
									},
									"src": "1315:72:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "1587:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 969,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "1597:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:6"
											},
											{
												"id": 972,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:6"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 974,
									"name": "whenPaused",
									"nameLocation": "1574:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:6"
									},
									"src": "1565:66:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "1779:31:6",
										"statements": [
											{
												"expression": {
													"id": 980,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "1796:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 979,
												"id": 981,
												"nodeType": "Return",
												"src": "1789:14:6"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "1773:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:6"
									},
									"scope": 1041,
									"src": "1726:84:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "1929:77:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 987,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "1943:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 993,
												"nodeType": "IfStatement",
												"src": "1939:61:6",
												"trueBody": {
													"id": 992,
													"nodeType": "Block",
													"src": "1953:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 989,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "1974:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 991,
															"nodeType": "RevertStatement",
															"src": "1967:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:6",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:6"
									},
									"scope": 1041,
									"src": "1878:128:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "2126:78:6",
										"statements": [
											{
												"condition": {
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 999,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "2141:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "2136:62:6",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "2151:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1002,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "2172:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1004,
															"nodeType": "RevertStatement",
															"src": "2165:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:6",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:6"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:6"
									},
									"scope": 1041,
									"src": "2078:126:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "2388:66:6",
										"statements": [
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1014,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2398:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1019,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2434:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1018,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "2427:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "2422:25:6"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1011,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 966,
												"src": "2374:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:6"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:6"
									},
									"scope": 1041,
									"src": "2339:115:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2634:69:6",
										"statements": [
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2644:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1035,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2683:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1034,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "2674:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "EmitStatement",
												"src": "2669:27:6"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1028,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1027,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 974,
												"src": "2623:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:6"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:6"
									},
									"scope": 1041,
									"src": "2586:117:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1042,
							"src": "615:2090:6",
							"usedErrors": [
								955,
								958
							],
							"usedEvents": [
								947,
								952
							]
						}
					],
					"src": "102:2604:6"
				},
				"id": 6
			},
			"SuperBoInu.sol": {
				"ast": {
					"absolutePath": "SuperBoInu.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1041
						],
						"SuperBoInu": [
							1298
						]
					},
					"id": 1299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1299,
							"sourceUnit": 800,
							"src": "61:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1299,
							"sourceUnit": 148,
							"src": "118:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1299,
							"sourceUnit": 1042,
							"src": "172:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "ERC20",
										"nameLocations": [
											"251:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "251:5:7"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "251:5:7"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "Ownable",
										"nameLocations": [
											"258:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "258:7:7"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "258:7:7"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "Pausable",
										"nameLocations": [
											"267:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "267:8:7"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "267:8:7"
								}
							],
							"canonicalName": "SuperBoInu",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298,
								1041,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "SuperBoInu",
							"nameLocation": "237:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "771a3a1d",
									"id": 1054,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "300:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1298,
									"src": "285:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1053,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2dc0562d",
									"id": 1056,
									"mutability": "mutable",
									"name": "taxWallet",
									"nameLocation": "346:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1298,
									"src": "331:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1055,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "331:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f4218e0",
									"id": 1060,
									"mutability": "mutable",
									"name": "isFeeExempt",
									"nameLocation": "394:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1298,
									"src": "362:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1059,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1057,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "370:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "362:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1058,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "381:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "82754e7bf8e3395ddb4a767c52b21ed0c3b9da843001b2e07ab46f2580323457",
									"id": 1064,
									"name": "TaxRateUpdated",
									"nameLocation": "420:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTaxRate",
												"nameLocation": "443:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "435:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:20:7"
									},
									"src": "414:41:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1797049ec5d8ec17fdce2660fb55e33695fd7ebbdb65726cc6d171c0e1c312c7",
									"id": 1068,
									"name": "TaxWalletUpdated",
									"nameLocation": "467:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"indexed": true,
												"mutability": "mutable",
												"name": "newTaxWallet",
												"nameLocation": "500:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "484:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:30:7"
									},
									"src": "461:53:7"
								},
								{
									"anonymous": false,
									"eventSelector": "9b8f7e0160b0b3dbd1778c94df017a106051c9cfc844b82de0b4036a967d2d2b",
									"id": 1074,
									"name": "ExemptStatusUpdated",
									"nameLocation": "526:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "562:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "546:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "isExempt",
												"nameLocation": "576:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "571:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1071,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "571:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:40:7"
									},
									"src": "520:66:7"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "748:239:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "_taxWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "767:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "789:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "781:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "781:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "781:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "767:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207461782077616c6c6574",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "793:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
																"typeString": "literal_string \"Invalid tax wallet\""
															},
															"value": "Invalid tax wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
																"typeString": "literal_string \"Invalid tax wallet\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "759:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "759:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1102,
																"name": "_taxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "833:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "845:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "833:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546178206d75737420626520302d313030",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "850:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
																"typeString": "literal_string \"Tax must be 0-100\""
															},
															"value": "Tax must be 0-100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
																"typeString": "literal_string \"Tax must be 0-100\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "825:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "825:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "825:45:7"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1108,
														"name": "taxWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "883:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1109,
														"name": "_taxWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "895:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "883:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "883:22:7"
											},
											{
												"expression": {
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1112,
														"name": "taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "916:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1113,
														"name": "_taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "926:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "916:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "916:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "953:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "957:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "953:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "965:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "947:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "947:32:7"
											}
										]
									},
									"id": 1123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5375706572426f496e75",
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "707:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3978848ff57d75ec5576eb2bb0c0a3bc01f56f75037695b55917db211a5a1e40",
														"typeString": "literal_string \"SuperBoInu\""
													},
													"value": "SuperBoInu"
												},
												{
													"hexValue": "534249",
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "721:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4243476bdf22b1a4cb0ec9450a3add3d4b252e8fc8826d5b2f1e237f445611f8",
														"typeString": "literal_string \"SBI\""
													},
													"value": "SBI"
												}
											],
											"id": 1085,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1082,
												"name": "ERC20",
												"nameLocations": [
													"701:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "701:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "701:26:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1087,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1089,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1086,
												"name": "Ownable",
												"nameLocations": [
													"728:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "728:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "728:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "624:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "616:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_taxWallet",
												"nameLocation": "656:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "648:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "_taxRate",
												"nameLocation": "685:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "677:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:95:7"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "748:0:7"
									},
									"scope": 1298,
									"src": "594:393:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "1052:133:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1131,
																"name": "_taxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "1071:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1083:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1071:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546178206d75737420626520302d313030",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1088:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
																"typeString": "literal_string \"Tax must be 0-100\""
															},
															"value": "Tax must be 0-100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b324e148233d54cd2537dfb2ad8a37f0b6da88c8a972ef8e0bb6728e4404378b",
																"typeString": "literal_string \"Tax must be 0-100\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1063:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "1063:45:7"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1137,
														"name": "taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1138,
														"name": "_taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "1129:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1119:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "1119:18:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1142,
															"name": "_taxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "1168:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "TaxRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1153:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "EmitStatement",
												"src": "1148:29:7"
											}
										]
									},
									"functionSelector": "c6d69a30",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1127,
												"name": "onlyOwner",
												"nameLocations": [
													"1042:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1042:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1042:9:7"
										}
									],
									"name": "setTaxRate",
									"nameLocation": "1004:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "_taxRate",
												"nameLocation": "1023:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1015:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:18:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1052:0:7"
									},
									"scope": 1298,
									"src": "995:190:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "1254:151:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "_taxWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "1273:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1295:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1287:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1155,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1287:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1287:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1273:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207461782077616c6c6574",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1299:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
																"typeString": "literal_string \"Invalid tax wallet\""
															},
															"value": "Invalid tax wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_faae5c99feb0a8e456238b8677467e718705a6f51b3c1ab42c522f7167a36348",
																"typeString": "literal_string \"Invalid tax wallet\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1265:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1265:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1265:55:7"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1163,
														"name": "taxWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "1331:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1164,
														"name": "_taxWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "1343:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1331:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1331:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "_taxWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "1386:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1167,
														"name": "TaxWalletUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1369:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1369:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "EmitStatement",
												"src": "1364:33:7"
											}
										]
									},
									"functionSelector": "ea414b28",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1150,
												"name": "onlyOwner",
												"nameLocations": [
													"1244:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1244:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1244:9:7"
										}
									],
									"name": "setTaxWallet",
									"nameLocation": "1202:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "_taxWallet",
												"nameLocation": "1223:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "1215:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:20:7"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1254:0:7"
									},
									"scope": 1298,
									"src": "1193:212:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "1484:100:7",
										"statements": [
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1181,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1495:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1183,
														"indexExpression": {
															"id": 1182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "1507:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1495:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "exempt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "1518:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1495:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "1495:29:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1188,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "1560:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "exempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "1569:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1187,
														"name": "ExemptStatusUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "1540:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1540:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "EmitStatement",
												"src": "1535:41:7"
											}
										]
									},
									"functionSelector": "8ebfc796",
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1178,
												"name": "onlyOwner",
												"nameLocations": [
													"1474:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1474:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1474:9:7"
										}
									],
									"name": "setFeeExempt",
									"nameLocation": "1422:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1443:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1435:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "exempt",
												"nameLocation": "1457:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1452:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1452:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:30:7"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:0:7"
									},
									"scope": 1298,
									"src": "1413:171:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "1718:478:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1203,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "1779:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1795:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1787:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1204,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1787:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1787:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1779:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1209,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "1801:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1815:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1807:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1210,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1807:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1807:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1801:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1779:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "isFeeExempt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "1821:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1218,
															"indexExpression": {
																"id": 1217,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "1833:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1821:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1779:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1220,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1842:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1222,
														"indexExpression": {
															"id": 1221,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "1854:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1842:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1779:78:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "IfStatement",
												"src": "1775:162:7",
												"trueBody": {
													"id": 1233,
													"nodeType": "Block",
													"src": "1859:78:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1227,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "1888:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1228,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "1894:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1229,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "1898:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1224,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "1874:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_SuperBoInu_$1298_$",
																			"typeString": "type(contract super SuperBoInu)"
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1880:7:7",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "1874:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1874:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "1874:30:7"
														},
														{
															"functionReturnParameters": 1202,
															"id": 1232,
															"nodeType": "Return",
															"src": "1919:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "1957:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1271,
														"src": "1949:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1949:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1237,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "1970:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1238,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "1978:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1970:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1240,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1969:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1989:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1969:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1949:43:7"
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "2011:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1271,
														"src": "2003:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1246,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "2024:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1247,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "2032:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2024:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:38:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1250,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "2058:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2070:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2058:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "2054:87:7",
												"trueBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "2073:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1256,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "2102:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1257,
																		"name": "taxWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "2108:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1258,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "2119:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1253,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2088:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_SuperBoInu_$1298_$",
																			"typeString": "type(contract super SuperBoInu)"
																		}
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2094:7:7",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "2088:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2088:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1260,
															"nodeType": "ExpressionStatement",
															"src": "2088:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "2167:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "2173:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "2177:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1263,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2153:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SuperBoInu_$1298_$",
																"typeString": "type(contract super SuperBoInu)"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2159:7:7",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "2153:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "2153:35:7"
											}
										]
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1651:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1709:8:7"
									},
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1667:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1659:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1681:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1673:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:41:7"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1718:0:7"
									},
									"scope": 1298,
									"src": "1642:554:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "2342:97:7",
										"statements": [
											{
												"expression": {
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1281,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2353:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1282,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "2366:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1283,
																		"name": "taxRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "2375:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2366:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1285,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2365:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2386:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2365:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2353:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "2353:36:7"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1290,
														"name": "sendAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "2400:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "2413:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1292,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "2422:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2413:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2400:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "2400:31:7"
											}
										]
									},
									"functionSelector": "d9b2c9cc",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewTax",
									"nameLocation": "2256:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2272:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2264:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:16:7"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "taxAmount",
												"nameLocation": "2311:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2303:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "sendAmount",
												"nameLocation": "2330:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2322:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:39:7"
									},
									"scope": 1298,
									"src": "2247:192:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1299,
							"src": "228:2214:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								955,
								958
							],
							"usedEvents": [
								24,
								811,
								820,
								947,
								952,
								1064,
								1068,
								1074
							]
						}
					],
					"src": "33:2411:7"
				},
				"id": 7
			}
		}
	}
}