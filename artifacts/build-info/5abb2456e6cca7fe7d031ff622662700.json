{
	"id": "5abb2456e6cca7fe7d031ff622662700",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"SuperBoInuStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract SuperBoInuStaking is Ownable {\r\n    IERC20 public token;\r\n\r\n    uint256 public rewardRate = 10; // 10% annual reward\r\n    uint256 public constant SECONDS_PER_YEAR = 365 days;\r\n\r\n    struct Stake {\r\n        uint256 amount;\r\n        uint256 startTime;\r\n    }\r\n\r\n    mapping(address => Stake) public stakes;\r\n\r\n    constructor(address tokenAddress) Ownable(msg.sender) {\r\n        token = IERC20(tokenAddress);\r\n    }\r\n\r\n    function stake(uint256 amount) external {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n\r\n        // Wenn der Benutzer bereits was gestaked hat, Rewards vorher claimen\r\n        if (stakes[msg.sender].amount > 0) {\r\n            claim();\r\n        }\r\n\r\n        token.transferFrom(msg.sender, address(this), amount);\r\n        stakes[msg.sender] = Stake(amount, block.timestamp);\r\n    }\r\n\r\n    function unstake() external {\r\n        require(stakes[msg.sender].amount > 0, \"Nothing staked\");\r\n\r\n        claim(); // Rewards zuerst ausschÃ¼tten\r\n\r\n        uint256 amount = stakes[msg.sender].amount;\r\n        stakes[msg.sender].amount = 0;\r\n\r\n        token.transfer(msg.sender, amount);\r\n    }\r\n\r\n    function claim() public {\r\n        Stake storage userStake = stakes[msg.sender];\r\n        require(userStake.amount > 0, \"No active stake\");\r\n\r\n        uint256 duration = block.timestamp - userStake.startTime;\r\n        uint256 reward = (userStake.amount * rewardRate * duration) / (100 * SECONDS_PER_YEAR);\r\n\r\n        userStake.startTime = block.timestamp; // reset timer\r\n        token.transfer(msg.sender, reward);\r\n    }\r\n\r\n    function setRewardRate(uint256 newRate) external onlyOwner {\r\n        rewardRate = newRate;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SuperBoInuStaking.sol": {
				"SuperBoInuStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SECONDS_PER_YEAR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SuperBoInuStaking.sol\":175:1832  contract SuperBoInuStaking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"SuperBoInuStaking.sol\":276:278  10 */\n  0x0a\n    /* \"SuperBoInuStaking.sol\":248:278  uint256 public rewardRate = 10 */\n  0x02\n  sstore\n    /* \"SuperBoInuStaking.sol\":496:597  constructor(address tokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SuperBoInuStaking.sol\":538:548  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"SuperBoInuStaking.sol\":576:588  tokenAddress */\n  dup1\n    /* \"SuperBoInuStaking.sol\":561:566  token */\n  0x01\n  0x00\n    /* \"SuperBoInuStaking.sol\":561:589  token = IERC20(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SuperBoInuStaking.sol\":496:597  constructor(address tokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"SuperBoInuStaking.sol\":175:1832  contract SuperBoInuStaking is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SuperBoInuStaking.sol\":175:1832  contract SuperBoInuStaking is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SuperBoInuStaking.sol\":175:1832  contract SuperBoInuStaking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe6a69ab8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"SuperBoInuStaking.sol\":448:487  mapping(address => Stake) public stakes */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInuStaking.sol\":997:1293  function unstake() external {... */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"SuperBoInuStaking.sol\":1301:1723  function claim() public {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"SuperBoInuStaking.sol\":248:278  uint256 public rewardRate = 10 */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInuStaking.sol\":1731:1829  function setRewardRate(uint256 newRate) external onlyOwner {... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"SuperBoInuStaking.sol\":605:989  function stake(uint256 amount) external {... */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"SuperBoInuStaking.sol\":306:357  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_11:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"SuperBoInuStaking.sol\":220:239  IERC20 public token */\n    tag_13:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperBoInuStaking.sol\":448:487  mapping(address => Stake) public stakes */\n    tag_18:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"SuperBoInuStaking.sol\":997:1293  function unstake() external {... */\n    tag_22:\n        /* \"SuperBoInuStaking.sol\":1072:1073  0 */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1044:1050  stakes */\n      0x03\n        /* \"SuperBoInuStaking.sol\":1044:1062  stakes[msg.sender] */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1051:1061  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":1044:1062  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SuperBoInuStaking.sol\":1044:1069  stakes[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"SuperBoInuStaking.sol\":1044:1073  stakes[msg.sender].amount > 0 */\n      gt\n        /* \"SuperBoInuStaking.sol\":1036:1092  require(stakes[msg.sender].amount > 0, \"Nothing staked\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"SuperBoInuStaking.sol\":1105:1112  claim() */\n      tag_56\n        /* \"SuperBoInuStaking.sol\":1105:1110  claim */\n      tag_24\n        /* \"SuperBoInuStaking.sol\":1105:1112  claim() */\n      jump\t// in\n    tag_56:\n        /* \"SuperBoInuStaking.sol\":1156:1170  uint256 amount */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1173:1179  stakes */\n      0x03\n        /* \"SuperBoInuStaking.sol\":1173:1191  stakes[msg.sender] */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1180:1190  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":1173:1191  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SuperBoInuStaking.sol\":1173:1198  stakes[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"SuperBoInuStaking.sol\":1156:1198  uint256 amount = stakes[msg.sender].amount */\n      swap1\n      pop\n        /* \"SuperBoInuStaking.sol\":1237:1238  0 */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1209:1215  stakes */\n      0x03\n        /* \"SuperBoInuStaking.sol\":1209:1227  stakes[msg.sender] */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1216:1226  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":1209:1227  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SuperBoInuStaking.sol\":1209:1234  stakes[msg.sender].amount */\n      0x00\n      add\n        /* \"SuperBoInuStaking.sol\":1209:1238  stakes[msg.sender].amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SuperBoInuStaking.sol\":1251:1256  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperBoInuStaking.sol\":1251:1265  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SuperBoInuStaking.sol\":1266:1276  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":1278:1284  amount */\n      dup4\n        /* \"SuperBoInuStaking.sol\":1251:1285  token.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      pop\n        /* \"SuperBoInuStaking.sol\":1025:1293  {... */\n      pop\n        /* \"SuperBoInuStaking.sol\":997:1293  function unstake() external {... */\n      jump\t// out\n        /* \"SuperBoInuStaking.sol\":1301:1723  function claim() public {... */\n    tag_24:\n        /* \"SuperBoInuStaking.sol\":1336:1359  Stake storage userStake */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1362:1368  stakes */\n      0x03\n        /* \"SuperBoInuStaking.sol\":1362:1380  stakes[msg.sender] */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1369:1379  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":1362:1380  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SuperBoInuStaking.sol\":1336:1380  Stake storage userStake = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"SuperBoInuStaking.sol\":1418:1419  0 */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1399:1408  userStake */\n      dup2\n        /* \"SuperBoInuStaking.sol\":1399:1415  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"SuperBoInuStaking.sol\":1399:1419  userStake.amount > 0 */\n      gt\n        /* \"SuperBoInuStaking.sol\":1391:1439  require(userStake.amount > 0, \"No active stake\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"SuperBoInuStaking.sol\":1452:1468  uint256 duration */\n      0x00\n        /* \"SuperBoInuStaking.sol\":1489:1498  userStake */\n      dup2\n        /* \"SuperBoInuStaking.sol\":1489:1508  userStake.startTime */\n      0x01\n      add\n      sload\n        /* \"SuperBoInuStaking.sol\":1471:1486  block.timestamp */\n      timestamp\n        /* \"SuperBoInuStaking.sol\":1471:1508  block.timestamp - userStake.startTime */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"SuperBoInuStaking.sol\":1452:1508  uint256 duration = block.timestamp - userStake.startTime */\n      swap1\n      pop\n        /* \"SuperBoInuStaking.sol\":1519:1533  uint256 reward */\n      0x00\n        /* \"SuperBoInuStaking.sol\":349:357  365 days */\n      0x01e13380\n        /* \"SuperBoInuStaking.sol\":1582:1585  100 */\n      0x64\n        /* \"SuperBoInuStaking.sol\":1582:1604  100 * SECONDS_PER_YEAR */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"SuperBoInuStaking.sol\":1569:1577  duration */\n      dup3\n        /* \"SuperBoInuStaking.sol\":1556:1566  rewardRate */\n      sload(0x02)\n        /* \"SuperBoInuStaking.sol\":1537:1546  userStake */\n      dup6\n        /* \"SuperBoInuStaking.sol\":1537:1553  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"SuperBoInuStaking.sol\":1537:1566  userStake.amount * rewardRate */\n      tag_71\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_71:\n        /* \"SuperBoInuStaking.sol\":1537:1577  userStake.amount * rewardRate * duration */\n      tag_72\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_72:\n        /* \"SuperBoInuStaking.sol\":1536:1605  (userStake.amount * rewardRate * duration) / (100 * SECONDS_PER_YEAR) */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"SuperBoInuStaking.sol\":1519:1605  uint256 reward = (userStake.amount * rewardRate * duration) / (100 * SECONDS_PER_YEAR) */\n      swap1\n      pop\n        /* \"SuperBoInuStaking.sol\":1640:1655  block.timestamp */\n      timestamp\n        /* \"SuperBoInuStaking.sol\":1618:1627  userStake */\n      dup4\n        /* \"SuperBoInuStaking.sol\":1618:1637  userStake.startTime */\n      0x01\n      add\n        /* \"SuperBoInuStaking.sol\":1618:1655  userStake.startTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SuperBoInuStaking.sol\":1681:1686  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperBoInuStaking.sol\":1681:1695  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SuperBoInuStaking.sol\":1696:1706  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":1708:1714  reward */\n      dup4\n        /* \"SuperBoInuStaking.sol\":1681:1715  token.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_78:\n      pop\n        /* \"SuperBoInuStaking.sol\":1325:1723  {... */\n      pop\n      pop\n      pop\n        /* \"SuperBoInuStaking.sol\":1301:1723  function claim() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SuperBoInuStaking.sol\":248:278  uint256 public rewardRate = 10 */\n    tag_28:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SuperBoInuStaking.sol\":1731:1829  function setRewardRate(uint256 newRate) external onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"SuperBoInuStaking.sol\":1814:1821  newRate */\n      dup1\n        /* \"SuperBoInuStaking.sol\":1801:1811  rewardRate */\n      0x02\n        /* \"SuperBoInuStaking.sol\":1801:1821  rewardRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SuperBoInuStaking.sol\":1731:1829  function setRewardRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SuperBoInuStaking.sol\":605:989  function stake(uint256 amount) external {... */\n    tag_41:\n        /* \"SuperBoInuStaking.sol\":673:674  0 */\n      0x00\n        /* \"SuperBoInuStaking.sol\":664:670  amount */\n      dup2\n        /* \"SuperBoInuStaking.sol\":664:674  amount > 0 */\n      gt\n        /* \"SuperBoInuStaking.sol\":656:693  require(amount > 0, \"Cannot stake 0\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"SuperBoInuStaking.sol\":817:818  0 */\n      0x00\n        /* \"SuperBoInuStaking.sol\":789:795  stakes */\n      0x03\n        /* \"SuperBoInuStaking.sol\":789:807  stakes[msg.sender] */\n      0x00\n        /* \"SuperBoInuStaking.sol\":796:806  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":789:807  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SuperBoInuStaking.sol\":789:814  stakes[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"SuperBoInuStaking.sol\":789:818  stakes[msg.sender].amount > 0 */\n      gt\n        /* \"SuperBoInuStaking.sol\":785:854  if (stakes[msg.sender].amount > 0) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"SuperBoInuStaking.sol\":835:842  claim() */\n      tag_94\n        /* \"SuperBoInuStaking.sol\":835:840  claim */\n      tag_24\n        /* \"SuperBoInuStaking.sol\":835:842  claim() */\n      jump\t// in\n    tag_94:\n        /* \"SuperBoInuStaking.sol\":785:854  if (stakes[msg.sender].amount > 0) {... */\n    tag_93:\n        /* \"SuperBoInuStaking.sol\":866:871  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperBoInuStaking.sol\":866:884  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SuperBoInuStaking.sol\":885:895  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":905:909  this */\n      address\n        /* \"SuperBoInuStaking.sol\":912:918  amount */\n      dup5\n        /* \"SuperBoInuStaking.sol\":866:919  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_99:\n      pop\n        /* \"SuperBoInuStaking.sol\":951:981  Stake(amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"SuperBoInuStaking.sol\":957:963  amount */\n      dup3\n        /* \"SuperBoInuStaking.sol\":951:981  Stake(amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SuperBoInuStaking.sol\":965:980  block.timestamp */\n      timestamp\n        /* \"SuperBoInuStaking.sol\":951:981  Stake(amount, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"SuperBoInuStaking.sol\":930:936  stakes */\n      0x03\n        /* \"SuperBoInuStaking.sol\":930:948  stakes[msg.sender] */\n      0x00\n        /* \"SuperBoInuStaking.sol\":937:947  msg.sender */\n      caller\n        /* \"SuperBoInuStaking.sol\":930:948  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SuperBoInuStaking.sol\":930:981  stakes[msg.sender] = Stake(amount, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"SuperBoInuStaking.sol\":605:989  function stake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"SuperBoInuStaking.sol\":306:357  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_43:\n        /* \"SuperBoInuStaking.sol\":349:357  365 days */\n      0x01e13380\n        /* \"SuperBoInuStaking.sol\":306:357  uint256 public constant SECONDS_PER_YEAR = 365 days */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SuperBoInuStaking.sol\":220:239  IERC20 public token */\n    tag_49:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_116:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_118:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_119:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_150\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_118\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_120:\n        /* \"#utility.yul\":641:665   */\n      tag_152\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_119\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_153:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_121:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_155\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_120\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_158\n      tag_116\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":917:1036   */\n    tag_157:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_159\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_121\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_122:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_123:\n        /* \"#utility.yul\":1346:1370   */\n      tag_162\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_122\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1715   */\n    tag_20:\n        /* \"#utility.yul\":1504:1508   */\n      0x00\n        /* \"#utility.yul\":1542:1544   */\n      0x40\n        /* \"#utility.yul\":1531:1540   */\n      dup3\n        /* \"#utility.yul\":1527:1545   */\n      add\n        /* \"#utility.yul\":1519:1545   */\n      swap1\n      pop\n        /* \"#utility.yul\":1555:1626   */\n      tag_164\n        /* \"#utility.yul\":1623:1624   */\n      0x00\n        /* \"#utility.yul\":1612:1621   */\n      dup4\n        /* \"#utility.yul\":1608:1625   */\n      add\n        /* \"#utility.yul\":1599:1605   */\n      dup6\n        /* \"#utility.yul\":1555:1626   */\n      tag_123\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1636:1708   */\n      tag_165\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"#utility.yul\":1693:1702   */\n      dup4\n        /* \"#utility.yul\":1689:1707   */\n      add\n        /* \"#utility.yul\":1680:1686   */\n      dup5\n        /* \"#utility.yul\":1636:1708   */\n      tag_123\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1383:1715   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1721:1943   */\n    tag_30:\n        /* \"#utility.yul\":1814:1818   */\n      0x00\n        /* \"#utility.yul\":1852:1854   */\n      0x20\n        /* \"#utility.yul\":1841:1850   */\n      dup3\n        /* \"#utility.yul\":1837:1855   */\n      add\n        /* \"#utility.yul\":1829:1855   */\n      swap1\n      pop\n        /* \"#utility.yul\":1865:1936   */\n      tag_167\n        /* \"#utility.yul\":1933:1934   */\n      0x00\n        /* \"#utility.yul\":1922:1931   */\n      dup4\n        /* \"#utility.yul\":1918:1935   */\n      add\n        /* \"#utility.yul\":1909:1915   */\n      dup5\n        /* \"#utility.yul\":1865:1936   */\n      tag_123\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1721:1943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2067   */\n    tag_124:\n        /* \"#utility.yul\":2036:2060   */\n      tag_169\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_119\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2031:2034   */\n      dup3\n        /* \"#utility.yul\":2024:2061   */\n      mstore\n        /* \"#utility.yul\":1949:2067   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2295   */\n    tag_34:\n        /* \"#utility.yul\":2166:2170   */\n      0x00\n        /* \"#utility.yul\":2204:2206   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2189:2207   */\n      add\n        /* \"#utility.yul\":2181:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2217:2288   */\n      tag_171\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2274:2283   */\n      dup4\n        /* \"#utility.yul\":2270:2287   */\n      add\n        /* \"#utility.yul\":2261:2267   */\n      dup5\n        /* \"#utility.yul\":2217:2288   */\n      tag_124\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2073:2295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2423   */\n    tag_125:\n        /* \"#utility.yul\":2374:2398   */\n      tag_173\n        /* \"#utility.yul\":2392:2397   */\n      dup2\n        /* \"#utility.yul\":2374:2398   */\n      tag_122\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2367:2372   */\n      dup2\n        /* \"#utility.yul\":2364:2399   */\n      eq\n        /* \"#utility.yul\":2354:2417   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":2413:2414   */\n      0x00\n        /* \"#utility.yul\":2410:2411   */\n      0x00\n        /* \"#utility.yul\":2403:2415   */\n      revert\n        /* \"#utility.yul\":2354:2417   */\n    tag_174:\n        /* \"#utility.yul\":2301:2423   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2429:2568   */\n    tag_126:\n        /* \"#utility.yul\":2475:2480   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup2\n        /* \"#utility.yul\":2500:2520   */\n      calldataload\n        /* \"#utility.yul\":2491:2520   */\n      swap1\n      pop\n        /* \"#utility.yul\":2529:2562   */\n      tag_176\n        /* \"#utility.yul\":2556:2561   */\n      dup2\n        /* \"#utility.yul\":2529:2562   */\n      tag_125\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2429:2568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2574:2903   */\n    tag_37:\n        /* \"#utility.yul\":2633:2639   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2670:2679   */\n      dup3\n        /* \"#utility.yul\":2661:2668   */\n      dup5\n        /* \"#utility.yul\":2657:2680   */\n      sub\n        /* \"#utility.yul\":2653:2685   */\n      slt\n        /* \"#utility.yul\":2650:2769   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":2688:2767   */\n      tag_179\n      tag_116\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2650:2769   */\n    tag_178:\n        /* \"#utility.yul\":2808:2809   */\n      0x00\n        /* \"#utility.yul\":2833:2886   */\n      tag_180\n        /* \"#utility.yul\":2878:2885   */\n      dup5\n        /* \"#utility.yul\":2869:2875   */\n      dup3\n        /* \"#utility.yul\":2858:2867   */\n      dup6\n        /* \"#utility.yul\":2854:2876   */\n      add\n        /* \"#utility.yul\":2833:2886   */\n      tag_126\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2823:2886   */\n      swap2\n      pop\n        /* \"#utility.yul\":2779:2896   */\n      pop\n        /* \"#utility.yul\":2574:2903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:2969   */\n    tag_127:\n        /* \"#utility.yul\":2937:2940   */\n      0x00\n        /* \"#utility.yul\":2958:2963   */\n      dup2\n        /* \"#utility.yul\":2951:2963   */\n      swap1\n      pop\n        /* \"#utility.yul\":2909:2969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2975:3117   */\n    tag_128:\n        /* \"#utility.yul\":3025:3034   */\n      0x00\n        /* \"#utility.yul\":3058:3111   */\n      tag_183\n        /* \"#utility.yul\":3076:3110   */\n      tag_184\n        /* \"#utility.yul\":3085:3109   */\n      tag_185\n        /* \"#utility.yul\":3103:3108   */\n      dup5\n        /* \"#utility.yul\":3085:3109   */\n      tag_118\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3076:3110   */\n      tag_127\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3058:3111   */\n      tag_118\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3045:3111   */\n      swap1\n      pop\n        /* \"#utility.yul\":2975:3117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3249   */\n    tag_129:\n        /* \"#utility.yul\":3173:3182   */\n      0x00\n        /* \"#utility.yul\":3206:3243   */\n      tag_187\n        /* \"#utility.yul\":3237:3242   */\n      dup3\n        /* \"#utility.yul\":3206:3243   */\n      tag_128\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3193:3243   */\n      swap1\n      pop\n        /* \"#utility.yul\":3123:3249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3255:3395   */\n    tag_130:\n        /* \"#utility.yul\":3319:3328   */\n      0x00\n        /* \"#utility.yul\":3352:3389   */\n      tag_189\n        /* \"#utility.yul\":3383:3388   */\n      dup3\n        /* \"#utility.yul\":3352:3389   */\n      tag_129\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3339:3389   */\n      swap1\n      pop\n        /* \"#utility.yul\":3255:3395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3560   */\n    tag_131:\n        /* \"#utility.yul\":3502:3553   */\n      tag_191\n        /* \"#utility.yul\":3547:3552   */\n      dup2\n        /* \"#utility.yul\":3502:3553   */\n      tag_130\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3497:3500   */\n      dup3\n        /* \"#utility.yul\":3490:3554   */\n      mstore\n        /* \"#utility.yul\":3401:3560   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3566:3816   */\n    tag_51:\n        /* \"#utility.yul\":3673:3677   */\n      0x00\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3700:3709   */\n      dup3\n        /* \"#utility.yul\":3696:3714   */\n      add\n        /* \"#utility.yul\":3688:3714   */\n      swap1\n      pop\n        /* \"#utility.yul\":3724:3809   */\n      tag_193\n        /* \"#utility.yul\":3806:3807   */\n      0x00\n        /* \"#utility.yul\":3795:3804   */\n      dup4\n        /* \"#utility.yul\":3791:3808   */\n      add\n        /* \"#utility.yul\":3782:3788   */\n      dup5\n        /* \"#utility.yul\":3724:3809   */\n      tag_131\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3566:3816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3822:3991   */\n    tag_132:\n        /* \"#utility.yul\":3906:3917   */\n      0x00\n        /* \"#utility.yul\":3940:3946   */\n      dup3\n        /* \"#utility.yul\":3935:3938   */\n      dup3\n        /* \"#utility.yul\":3928:3947   */\n      mstore\n        /* \"#utility.yul\":3980:3984   */\n      0x20\n        /* \"#utility.yul\":3975:3978   */\n      dup3\n        /* \"#utility.yul\":3971:3985   */\n      add\n        /* \"#utility.yul\":3956:3985   */\n      swap1\n      pop\n        /* \"#utility.yul\":3822:3991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3997:4161   */\n    tag_133:\n        /* \"#utility.yul\":4137:4153   */\n      0x4e6f7468696e67207374616b6564000000000000000000000000000000000000\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4125:4131   */\n      dup3\n        /* \"#utility.yul\":4121:4135   */\n      add\n        /* \"#utility.yul\":4114:4154   */\n      mstore\n        /* \"#utility.yul\":3997:4161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4167:4533   */\n    tag_134:\n        /* \"#utility.yul\":4309:4312   */\n      0x00\n        /* \"#utility.yul\":4330:4397   */\n      tag_197\n        /* \"#utility.yul\":4394:4396   */\n      0x0e\n        /* \"#utility.yul\":4389:4392   */\n      dup4\n        /* \"#utility.yul\":4330:4397   */\n      tag_132\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4323:4397   */\n      swap2\n      pop\n        /* \"#utility.yul\":4406:4499   */\n      tag_198\n        /* \"#utility.yul\":4495:4498   */\n      dup3\n        /* \"#utility.yul\":4406:4499   */\n      tag_133\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4524:4526   */\n      0x20\n        /* \"#utility.yul\":4519:4522   */\n      dup3\n        /* \"#utility.yul\":4515:4527   */\n      add\n        /* \"#utility.yul\":4508:4527   */\n      swap1\n      pop\n        /* \"#utility.yul\":4167:4533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4539:4958   */\n    tag_55:\n        /* \"#utility.yul\":4705:4709   */\n      0x00\n        /* \"#utility.yul\":4743:4745   */\n      0x20\n        /* \"#utility.yul\":4732:4741   */\n      dup3\n        /* \"#utility.yul\":4728:4746   */\n      add\n        /* \"#utility.yul\":4720:4746   */\n      swap1\n      pop\n        /* \"#utility.yul\":4792:4801   */\n      dup2\n        /* \"#utility.yul\":4786:4790   */\n      dup2\n        /* \"#utility.yul\":4782:4802   */\n      sub\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4767:4776   */\n      dup4\n        /* \"#utility.yul\":4763:4780   */\n      add\n        /* \"#utility.yul\":4756:4803   */\n      mstore\n        /* \"#utility.yul\":4820:4951   */\n      tag_200\n        /* \"#utility.yul\":4946:4950   */\n      dup2\n        /* \"#utility.yul\":4820:4951   */\n      tag_134\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4812:4951   */\n      swap1\n      pop\n        /* \"#utility.yul\":4539:4958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4964:5296   */\n    tag_58:\n        /* \"#utility.yul\":5085:5089   */\n      0x00\n        /* \"#utility.yul\":5123:5125   */\n      0x40\n        /* \"#utility.yul\":5112:5121   */\n      dup3\n        /* \"#utility.yul\":5108:5126   */\n      add\n        /* \"#utility.yul\":5100:5126   */\n      swap1\n      pop\n        /* \"#utility.yul\":5136:5207   */\n      tag_202\n        /* \"#utility.yul\":5204:5205   */\n      0x00\n        /* \"#utility.yul\":5193:5202   */\n      dup4\n        /* \"#utility.yul\":5189:5206   */\n      add\n        /* \"#utility.yul\":5180:5186   */\n      dup6\n        /* \"#utility.yul\":5136:5207   */\n      tag_124\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5217:5289   */\n      tag_203\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5274:5283   */\n      dup4\n        /* \"#utility.yul\":5270:5288   */\n      add\n        /* \"#utility.yul\":5261:5267   */\n      dup5\n        /* \"#utility.yul\":5217:5289   */\n      tag_123\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4964:5296   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5302:5392   */\n    tag_135:\n        /* \"#utility.yul\":5336:5343   */\n      0x00\n        /* \"#utility.yul\":5379:5384   */\n      dup2\n        /* \"#utility.yul\":5372:5385   */\n      iszero\n        /* \"#utility.yul\":5365:5386   */\n      iszero\n        /* \"#utility.yul\":5354:5386   */\n      swap1\n      pop\n        /* \"#utility.yul\":5302:5392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5398:5514   */\n    tag_136:\n        /* \"#utility.yul\":5468:5489   */\n      tag_206\n        /* \"#utility.yul\":5483:5488   */\n      dup2\n        /* \"#utility.yul\":5468:5489   */\n      tag_135\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5461:5466   */\n      dup2\n        /* \"#utility.yul\":5458:5490   */\n      eq\n        /* \"#utility.yul\":5448:5508   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":5504:5505   */\n      0x00\n        /* \"#utility.yul\":5501:5502   */\n      0x00\n        /* \"#utility.yul\":5494:5506   */\n      revert\n        /* \"#utility.yul\":5448:5508   */\n    tag_207:\n        /* \"#utility.yul\":5398:5514   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5520:5657   */\n    tag_137:\n        /* \"#utility.yul\":5574:5579   */\n      0x00\n        /* \"#utility.yul\":5605:5611   */\n      dup2\n        /* \"#utility.yul\":5599:5612   */\n      mload\n        /* \"#utility.yul\":5590:5612   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:5651   */\n      tag_209\n        /* \"#utility.yul\":5645:5650   */\n      dup2\n        /* \"#utility.yul\":5621:5651   */\n      tag_136\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5520:5657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5663:6008   */\n    tag_62:\n        /* \"#utility.yul\":5730:5736   */\n      0x00\n        /* \"#utility.yul\":5779:5781   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5758:5765   */\n      dup5\n        /* \"#utility.yul\":5754:5777   */\n      sub\n        /* \"#utility.yul\":5750:5782   */\n      slt\n        /* \"#utility.yul\":5747:5866   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":5785:5864   */\n      tag_212\n      tag_116\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5747:5866   */\n    tag_211:\n        /* \"#utility.yul\":5905:5906   */\n      0x00\n        /* \"#utility.yul\":5930:5991   */\n      tag_213\n        /* \"#utility.yul\":5983:5990   */\n      dup5\n        /* \"#utility.yul\":5974:5980   */\n      dup3\n        /* \"#utility.yul\":5963:5972   */\n      dup6\n        /* \"#utility.yul\":5959:5981   */\n      add\n        /* \"#utility.yul\":5930:5991   */\n      tag_137\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5920:5991   */\n      swap2\n      pop\n        /* \"#utility.yul\":5876:6001   */\n      pop\n        /* \"#utility.yul\":5663:6008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6014:6179   */\n    tag_138:\n        /* \"#utility.yul\":6154:6171   */\n      0x4e6f20616374697665207374616b650000000000000000000000000000000000\n        /* \"#utility.yul\":6150:6151   */\n      0x00\n        /* \"#utility.yul\":6142:6148   */\n      dup3\n        /* \"#utility.yul\":6138:6152   */\n      add\n        /* \"#utility.yul\":6131:6172   */\n      mstore\n        /* \"#utility.yul\":6014:6179   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6185:6551   */\n    tag_139:\n        /* \"#utility.yul\":6327:6330   */\n      0x00\n        /* \"#utility.yul\":6348:6415   */\n      tag_216\n        /* \"#utility.yul\":6412:6414   */\n      0x0f\n        /* \"#utility.yul\":6407:6410   */\n      dup4\n        /* \"#utility.yul\":6348:6415   */\n      tag_132\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6341:6415   */\n      swap2\n      pop\n        /* \"#utility.yul\":6424:6517   */\n      tag_217\n        /* \"#utility.yul\":6513:6516   */\n      dup3\n        /* \"#utility.yul\":6424:6517   */\n      tag_138\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6542:6544   */\n      0x20\n        /* \"#utility.yul\":6537:6540   */\n      dup3\n        /* \"#utility.yul\":6533:6545   */\n      add\n        /* \"#utility.yul\":6526:6545   */\n      swap1\n      pop\n        /* \"#utility.yul\":6185:6551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6557:6976   */\n    tag_66:\n        /* \"#utility.yul\":6723:6727   */\n      0x00\n        /* \"#utility.yul\":6761:6763   */\n      0x20\n        /* \"#utility.yul\":6750:6759   */\n      dup3\n        /* \"#utility.yul\":6746:6764   */\n      add\n        /* \"#utility.yul\":6738:6764   */\n      swap1\n      pop\n        /* \"#utility.yul\":6810:6819   */\n      dup2\n        /* \"#utility.yul\":6804:6808   */\n      dup2\n        /* \"#utility.yul\":6800:6820   */\n      sub\n        /* \"#utility.yul\":6796:6797   */\n      0x00\n        /* \"#utility.yul\":6785:6794   */\n      dup4\n        /* \"#utility.yul\":6781:6798   */\n      add\n        /* \"#utility.yul\":6774:6821   */\n      mstore\n        /* \"#utility.yul\":6838:6969   */\n      tag_219\n        /* \"#utility.yul\":6964:6968   */\n      dup2\n        /* \"#utility.yul\":6838:6969   */\n      tag_139\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6830:6969   */\n      swap1\n      pop\n        /* \"#utility.yul\":6557:6976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7162   */\n    tag_140:\n        /* \"#utility.yul\":7030:7107   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7027:7028   */\n      0x00\n        /* \"#utility.yul\":7020:7108   */\n      mstore\n        /* \"#utility.yul\":7127:7131   */\n      0x11\n        /* \"#utility.yul\":7124:7125   */\n      0x04\n        /* \"#utility.yul\":7117:7132   */\n      mstore\n        /* \"#utility.yul\":7151:7155   */\n      0x24\n        /* \"#utility.yul\":7148:7149   */\n      0x00\n        /* \"#utility.yul\":7141:7156   */\n      revert\n        /* \"#utility.yul\":7168:7362   */\n    tag_68:\n        /* \"#utility.yul\":7208:7212   */\n      0x00\n        /* \"#utility.yul\":7228:7248   */\n      tag_222\n        /* \"#utility.yul\":7246:7247   */\n      dup3\n        /* \"#utility.yul\":7228:7248   */\n      tag_122\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7223:7248   */\n      swap2\n      pop\n        /* \"#utility.yul\":7262:7282   */\n      tag_223\n        /* \"#utility.yul\":7280:7281   */\n      dup4\n        /* \"#utility.yul\":7262:7282   */\n      tag_122\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7257:7282   */\n      swap3\n      pop\n        /* \"#utility.yul\":7306:7307   */\n      dup3\n        /* \"#utility.yul\":7303:7304   */\n      dup3\n        /* \"#utility.yul\":7299:7308   */\n      sub\n        /* \"#utility.yul\":7291:7308   */\n      swap1\n      pop\n        /* \"#utility.yul\":7330:7331   */\n      dup2\n        /* \"#utility.yul\":7324:7328   */\n      dup2\n        /* \"#utility.yul\":7321:7332   */\n      gt\n        /* \"#utility.yul\":7318:7355   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":7335:7353   */\n      tag_225\n      tag_140\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7318:7355   */\n    tag_224:\n        /* \"#utility.yul\":7168:7362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7368:7778   */\n    tag_70:\n        /* \"#utility.yul\":7408:7415   */\n      0x00\n        /* \"#utility.yul\":7431:7451   */\n      tag_227\n        /* \"#utility.yul\":7449:7450   */\n      dup3\n        /* \"#utility.yul\":7431:7451   */\n      tag_122\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7426:7451   */\n      swap2\n      pop\n        /* \"#utility.yul\":7465:7485   */\n      tag_228\n        /* \"#utility.yul\":7483:7484   */\n      dup4\n        /* \"#utility.yul\":7465:7485   */\n      tag_122\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7460:7485   */\n      swap3\n      pop\n        /* \"#utility.yul\":7520:7521   */\n      dup3\n        /* \"#utility.yul\":7517:7518   */\n      dup3\n        /* \"#utility.yul\":7513:7522   */\n      mul\n        /* \"#utility.yul\":7542:7572   */\n      tag_229\n        /* \"#utility.yul\":7560:7571   */\n      dup2\n        /* \"#utility.yul\":7542:7572   */\n      tag_122\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7531:7572   */\n      swap2\n      pop\n        /* \"#utility.yul\":7721:7722   */\n      dup3\n        /* \"#utility.yul\":7712:7719   */\n      dup3\n        /* \"#utility.yul\":7708:7723   */\n      div\n        /* \"#utility.yul\":7705:7706   */\n      dup5\n        /* \"#utility.yul\":7702:7724   */\n      eq\n        /* \"#utility.yul\":7682:7683   */\n      dup4\n        /* \"#utility.yul\":7675:7684   */\n      iszero\n        /* \"#utility.yul\":7655:7738   */\n      or\n        /* \"#utility.yul\":7632:7771   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":7751:7769   */\n      tag_231\n      tag_140\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7632:7771   */\n    tag_230:\n        /* \"#utility.yul\":7416:7778   */\n      pop\n        /* \"#utility.yul\":7368:7778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7784:7964   */\n    tag_141:\n        /* \"#utility.yul\":7832:7909   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7829:7830   */\n      0x00\n        /* \"#utility.yul\":7822:7910   */\n      mstore\n        /* \"#utility.yul\":7929:7933   */\n      0x12\n        /* \"#utility.yul\":7926:7927   */\n      0x04\n        /* \"#utility.yul\":7919:7934   */\n      mstore\n        /* \"#utility.yul\":7953:7957   */\n      0x24\n        /* \"#utility.yul\":7950:7951   */\n      0x00\n        /* \"#utility.yul\":7943:7958   */\n      revert\n        /* \"#utility.yul\":7970:8155   */\n    tag_74:\n        /* \"#utility.yul\":8010:8011   */\n      0x00\n        /* \"#utility.yul\":8027:8047   */\n      tag_234\n        /* \"#utility.yul\":8045:8046   */\n      dup3\n        /* \"#utility.yul\":8027:8047   */\n      tag_122\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8022:8047   */\n      swap2\n      pop\n        /* \"#utility.yul\":8061:8081   */\n      tag_235\n        /* \"#utility.yul\":8079:8080   */\n      dup4\n        /* \"#utility.yul\":8061:8081   */\n      tag_122\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8056:8081   */\n      swap3\n      pop\n        /* \"#utility.yul\":8100:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8125   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":8105:8123   */\n      tag_237\n      tag_141\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8090:8125   */\n    tag_236:\n        /* \"#utility.yul\":8147:8148   */\n      dup3\n        /* \"#utility.yul\":8144:8145   */\n      dup3\n        /* \"#utility.yul\":8140:8149   */\n      div\n        /* \"#utility.yul\":8135:8149   */\n      swap1\n      pop\n        /* \"#utility.yul\":7970:8155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8161:8325   */\n    tag_142:\n        /* \"#utility.yul\":8301:8317   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":8297:8298   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup3\n        /* \"#utility.yul\":8285:8299   */\n      add\n        /* \"#utility.yul\":8278:8318   */\n      mstore\n        /* \"#utility.yul\":8161:8325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8331:8697   */\n    tag_143:\n        /* \"#utility.yul\":8473:8476   */\n      0x00\n        /* \"#utility.yul\":8494:8561   */\n      tag_240\n        /* \"#utility.yul\":8558:8560   */\n      0x0e\n        /* \"#utility.yul\":8553:8556   */\n      dup4\n        /* \"#utility.yul\":8494:8561   */\n      tag_132\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8487:8561   */\n      swap2\n      pop\n        /* \"#utility.yul\":8570:8663   */\n      tag_241\n        /* \"#utility.yul\":8659:8662   */\n      dup3\n        /* \"#utility.yul\":8570:8663   */\n      tag_142\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8688:8690   */\n      0x20\n        /* \"#utility.yul\":8683:8686   */\n      dup3\n        /* \"#utility.yul\":8679:8691   */\n      add\n        /* \"#utility.yul\":8672:8691   */\n      swap1\n      pop\n        /* \"#utility.yul\":8331:8697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8703:9122   */\n    tag_92:\n        /* \"#utility.yul\":8869:8873   */\n      0x00\n        /* \"#utility.yul\":8907:8909   */\n      0x20\n        /* \"#utility.yul\":8896:8905   */\n      dup3\n        /* \"#utility.yul\":8892:8910   */\n      add\n        /* \"#utility.yul\":8884:8910   */\n      swap1\n      pop\n        /* \"#utility.yul\":8956:8965   */\n      dup2\n        /* \"#utility.yul\":8950:8954   */\n      dup2\n        /* \"#utility.yul\":8946:8966   */\n      sub\n        /* \"#utility.yul\":8942:8943   */\n      0x00\n        /* \"#utility.yul\":8931:8940   */\n      dup4\n        /* \"#utility.yul\":8927:8944   */\n      add\n        /* \"#utility.yul\":8920:8967   */\n      mstore\n        /* \"#utility.yul\":8984:9115   */\n      tag_243\n        /* \"#utility.yul\":9110:9114   */\n      dup2\n        /* \"#utility.yul\":8984:9115   */\n      tag_143\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8976:9115   */\n      swap1\n      pop\n        /* \"#utility.yul\":8703:9122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9128:9570   */\n    tag_96:\n        /* \"#utility.yul\":9277:9281   */\n      0x00\n        /* \"#utility.yul\":9315:9317   */\n      0x60\n        /* \"#utility.yul\":9304:9313   */\n      dup3\n        /* \"#utility.yul\":9300:9318   */\n      add\n        /* \"#utility.yul\":9292:9318   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9399   */\n      tag_245\n        /* \"#utility.yul\":9396:9397   */\n      0x00\n        /* \"#utility.yul\":9385:9394   */\n      dup4\n        /* \"#utility.yul\":9381:9398   */\n      add\n        /* \"#utility.yul\":9372:9378   */\n      dup7\n        /* \"#utility.yul\":9328:9399   */\n      tag_124\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9409:9481   */\n      tag_246\n        /* \"#utility.yul\":9477:9479   */\n      0x20\n        /* \"#utility.yul\":9466:9475   */\n      dup4\n        /* \"#utility.yul\":9462:9480   */\n      add\n        /* \"#utility.yul\":9453:9459   */\n      dup6\n        /* \"#utility.yul\":9409:9481   */\n      tag_124\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9491:9563   */\n      tag_247\n        /* \"#utility.yul\":9559:9561   */\n      0x40\n        /* \"#utility.yul\":9548:9557   */\n      dup4\n        /* \"#utility.yul\":9544:9562   */\n      add\n        /* \"#utility.yul\":9535:9541   */\n      dup5\n        /* \"#utility.yul\":9491:9563   */\n      tag_123\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9128:9570   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207adaaa4f7501d8d826f7ecd77ad841984f3044b9320f13da50ad971287b9faf864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_296": {
									"entryPoint": null,
									"id": 296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 253,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:4",
										"nodeType": "YulBlock",
										"src": "0:1551:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "922:274:4",
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:4",
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nativeSrc": "970:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nativeSrc": "970:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nativeSrc": "939:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:4",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:32:4",
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nativeSrc": "932:119:4",
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nativeSrc": "1061:128:4",
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nativeSrc": "1076:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nativeSrc": "1147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nativeSrc": "1115:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:4",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:4",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											},
											{
												"body": {
													"nativeSrc": "1267:53:4",
													"nodeType": "YulBlock",
													"src": "1267:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:4"
																		},
																		"nativeSrc": "1289:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:4"
																},
																"nativeSrc": "1277:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:4"
															},
															"nativeSrc": "1277:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:4",
														"nodeType": "YulTypedName",
														"src": "1255:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:4",
														"nodeType": "YulTypedName",
														"src": "1262:3:4",
														"type": ""
													}
												],
												"src": "1202:118:4"
											},
											{
												"body": {
													"nativeSrc": "1424:124:4",
													"nodeType": "YulBlock",
													"src": "1424:124:4",
													"statements": [
														{
															"nativeSrc": "1434:26:4",
															"nodeType": "YulAssignment",
															"src": "1434:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:4"
																},
																"nativeSrc": "1442:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:4"
																		},
																		"nativeSrc": "1523:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:4"
																},
																"nativeSrc": "1470:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:4"
															},
															"nativeSrc": "1470:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:4",
														"nodeType": "YulTypedName",
														"src": "1396:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:4",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:4",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1326:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a600255348015610014575f5ffd5b506040516110863803806110868339818101604052810190610036919061021c565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a7575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009e9190610256565b60405180910390fd5b6100b6816100fd60201b60201c565b508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061026f565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101eb826101c2565b9050919050565b6101fb816101e1565b8114610205575f5ffd5b50565b5f81519050610216816101f2565b92915050565b5f60208284031215610231576102306101be565b5b5f61023e84828501610208565b91505092915050565b610250816101e1565b82525050565b5f6020820190506102695f830184610247565b92915050565b610e0a8061027c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b146101185780639e447fc614610136578063a694fc3a14610152578063e6a69ab81461016e578063f2fde38b1461018c578063fc0c546a146101a8576100a7565b806316934fc4146100ab5780632def6620146100dc5780634e71d92d146100e6578063715018a6146100f05780637b0a47ee146100fa575b5f5ffd5b6100c560048036038101906100c0919061095e565b6101c6565b6040516100d39291906109a1565b60405180910390f35b6100e46101e6565b005b6100ee610396565b005b6100f8610513565b005b610102610526565b60405161010f91906109c8565b60405180910390f35b61012061052c565b60405161012d91906109f0565b60405180910390f35b610150600480360381019061014b9190610a33565b610553565b005b61016c60048036038101906101679190610a33565b610565565b005b610176610700565b60405161018391906109c8565b60405180910390f35b6101a660048036038101906101a1919061095e565b610708565b005b6101b061078c565b6040516101bd9190610ab9565b60405180910390f35b6003602052805f5260405f205f91509050805f0154908060010154905082565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610b2c565b60405180910390fd5b61026f610396565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610352929190610b4a565b6020604051808303815f875af115801561036e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103929190610ba6565b5050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541161041b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041290610c1b565b60405180910390fd5b5f81600101544261042c9190610c66565b90505f6301e1338060646104409190610c99565b82600254855f01546104529190610c99565b61045c9190610c99565b6104669190610d07565b905042836001018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104cd929190610b4a565b6020604051808303815f875af11580156104e9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061050d9190610ba6565b50505050565b61051b6107b1565b6105245f610838565b565b60025481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61055b6107b1565b8060028190555050565b5f81116105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e90610d81565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411156105f7576105f6610396565b5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161065593929190610d9f565b6020604051808303815f875af1158015610671573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106959190610ba6565b5060405180604001604052808281526020014281525060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01556020820151816001015590505050565b6301e1338081565b6107106107b1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610780575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161077791906109f0565b60405180910390fd5b61078981610838565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107b96108f9565b73ffffffffffffffffffffffffffffffffffffffff166107d761052c565b73ffffffffffffffffffffffffffffffffffffffff1614610836576107fa6108f9565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161082d91906109f0565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61092d82610904565b9050919050565b61093d81610923565b8114610947575f5ffd5b50565b5f8135905061095881610934565b92915050565b5f6020828403121561097357610972610900565b5b5f6109808482850161094a565b91505092915050565b5f819050919050565b61099b81610989565b82525050565b5f6040820190506109b45f830185610992565b6109c16020830184610992565b9392505050565b5f6020820190506109db5f830184610992565b92915050565b6109ea81610923565b82525050565b5f602082019050610a035f8301846109e1565b92915050565b610a1281610989565b8114610a1c575f5ffd5b50565b5f81359050610a2d81610a09565b92915050565b5f60208284031215610a4857610a47610900565b5b5f610a5584828501610a1f565b91505092915050565b5f819050919050565b5f610a81610a7c610a7784610904565b610a5e565b610904565b9050919050565b5f610a9282610a67565b9050919050565b5f610aa382610a88565b9050919050565b610ab381610a99565b82525050565b5f602082019050610acc5f830184610aaa565b92915050565b5f82825260208201905092915050565b7f4e6f7468696e67207374616b65640000000000000000000000000000000000005f82015250565b5f610b16600e83610ad2565b9150610b2182610ae2565b602082019050919050565b5f6020820190508181035f830152610b4381610b0a565b9050919050565b5f604082019050610b5d5f8301856109e1565b610b6a6020830184610992565b9392505050565b5f8115159050919050565b610b8581610b71565b8114610b8f575f5ffd5b50565b5f81519050610ba081610b7c565b92915050565b5f60208284031215610bbb57610bba610900565b5b5f610bc884828501610b92565b91505092915050565b7f4e6f20616374697665207374616b6500000000000000000000000000000000005f82015250565b5f610c05600f83610ad2565b9150610c1082610bd1565b602082019050919050565b5f6020820190508181035f830152610c3281610bf9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c7082610989565b9150610c7b83610989565b9250828203905081811115610c9357610c92610c39565b5b92915050565b5f610ca382610989565b9150610cae83610989565b9250828202610cbc81610989565b91508282048414831517610cd357610cd2610c39565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610d1182610989565b9150610d1c83610989565b925082610d2c57610d2b610cda565b5b828204905092915050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f610d6b600e83610ad2565b9150610d7682610d37565b602082019050919050565b5f6020820190508181035f830152610d9881610d5f565b9050919050565b5f606082019050610db25f8301866109e1565b610dbf60208301856109e1565b610dcc6040830184610992565b94935050505056fea26469706673582212207adaaa4f7501d8d826f7ecd77ad841984f3044b9320f13da50ad971287b9faf864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1086 CODESIZE SUB DUP1 PUSH2 0x1086 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x21C JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6 DUP2 PUSH2 0xFD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x26F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB DUP3 PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB DUP2 PUSH2 0x1E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x216 DUP2 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231 JUMPI PUSH2 0x230 PUSH2 0x1BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23E DUP5 DUP3 DUP6 ADD PUSH2 0x208 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x250 DUP2 PUSH2 0x1E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x269 PUSH0 DUP4 ADD DUP5 PUSH2 0x247 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0A DUP1 PUSH2 0x27C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1A8 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0xFA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP3 SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E SWAP1 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26F PUSH2 0x396 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 PUSH1 0x64 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST DUP3 PUSH1 0x2 SLOAD DUP6 PUSH0 ADD SLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x466 SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP3 SWAP2 SWAP1 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x524 PUSH0 PUSH2 0x838 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x55B PUSH2 0x7B1 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x396 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x655 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x710 PUSH2 0x7B1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x780 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x789 DUP2 PUSH2 0x838 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x8F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7D7 PUSH2 0x52C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x836 JUMPI PUSH2 0x7FA PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x92D DUP3 PUSH2 0x904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93D DUP2 PUSH2 0x923 JUMP JUMPDEST DUP2 EQ PUSH2 0x947 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x958 DUP2 PUSH2 0x934 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x973 JUMPI PUSH2 0x972 PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x980 DUP5 DUP3 DUP6 ADD PUSH2 0x94A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x989 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9B4 PUSH0 DUP4 ADD DUP6 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x9C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DB PUSH0 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9EA DUP2 PUSH2 0x923 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA03 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA12 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP2 EQ PUSH2 0xA1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA2D DUP2 PUSH2 0xA09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA55 DUP5 DUP3 DUP6 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA81 PUSH2 0xA7C PUSH2 0xA77 DUP5 PUSH2 0x904 JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA92 DUP3 PUSH2 0xA67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 DUP3 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB3 DUP2 PUSH2 0xA99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACC PUSH0 DUP4 ADD DUP5 PUSH2 0xAAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E67207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB16 PUSH1 0xE DUP4 PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB21 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB43 DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB5D PUSH0 DUP4 ADD DUP6 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xB6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB71 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665207374616B650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC05 PUSH1 0xF DUP4 PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP3 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC32 DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC70 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7B DUP4 PUSH2 0x989 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0xC39 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA3 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAE DUP4 PUSH2 0x989 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCBC DUP2 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xC39 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD11 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP PUSH2 0xD1C DUP4 PUSH2 0x989 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD2C JUMPI PUSH2 0xD2B PUSH2 0xCDA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD6B PUSH1 0xE DUP4 PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP PUSH2 0xD76 DUP3 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD98 DUP2 PUSH2 0xD5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDB2 PUSH0 DUP4 ADD DUP7 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xDBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xDCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xDAAA4F7501D8D826F7ECD77AD841984F3044B9320F13DA50AD9712 DUP8 0xB9 STATICCALL EXTCALL PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "175:1657:3:-:0;;;276:2;248:30;;496:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;538:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;576:12:3::1;561:5;;:28;;;;;;;;;;;;;;;;;;496:101:::0;175:1657;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;175:1657:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SECONDS_PER_YEAR_270": {
									"entryPoint": 1792,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1969,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 2297,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2104,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_444": {
									"entryPoint": 918,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1324,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1299,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_267": {
									"entryPoint": 1318,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardRate_456": {
									"entryPoint": 1363,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_344": {
									"entryPoint": 1381,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_280": {
									"entryPoint": 454,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_264": {
									"entryPoint": 1932,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1800,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_386": {
									"entryPoint": 486,
									"id": 386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2890,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 2713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9573:4",
										"nodeType": "YulBlock",
										"src": "0:9573:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "907:263:4",
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:4",
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nativeSrc": "955:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nativeSrc": "955:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nativeSrc": "924:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nativeSrc": "920:32:4",
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nativeSrc": "917:119:4",
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nativeSrc": "1046:117:4",
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nativeSrc": "1061:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nativeSrc": "1100:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:4",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:4",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:4",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nativeSrc": "1221:32:4",
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nativeSrc": "1231:16:4",
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:4",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:4",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:4",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nativeSrc": "1324:53:4",
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nativeSrc": "1346:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nativeSrc": "1334:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nativeSrc": "1334:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:4",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:4",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nativeSrc": "1509:206:4",
													"nodeType": "YulBlock",
													"src": "1509:206:4",
													"statements": [
														{
															"nativeSrc": "1519:26:4",
															"nodeType": "YulAssignment",
															"src": "1519:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1531:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1531:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1542:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1542:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1527:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1527:3:4"
																},
																"nativeSrc": "1527:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1527:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1519:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1519:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1599:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1612:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1623:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1623:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1608:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:4"
																		},
																		"nativeSrc": "1608:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1608:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1555:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:4"
																},
																"nativeSrc": "1555:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1555:71:4"
															},
															"nativeSrc": "1555:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1555:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1680:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1693:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1704:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1689:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:4"
																		},
																		"nativeSrc": "1689:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1636:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1636:43:4"
																},
																"nativeSrc": "1636:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1636:72:4"
															},
															"nativeSrc": "1636:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1636:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1473:9:4",
														"nodeType": "YulTypedName",
														"src": "1473:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1485:6:4",
														"nodeType": "YulTypedName",
														"src": "1485:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1493:6:4",
														"nodeType": "YulTypedName",
														"src": "1493:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1504:4:4",
														"nodeType": "YulTypedName",
														"src": "1504:4:4",
														"type": ""
													}
												],
												"src": "1383:332:4"
											},
											{
												"body": {
													"nativeSrc": "1819:124:4",
													"nodeType": "YulBlock",
													"src": "1819:124:4",
													"statements": [
														{
															"nativeSrc": "1829:26:4",
															"nodeType": "YulAssignment",
															"src": "1829:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1841:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1841:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1852:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1852:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1837:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1837:3:4"
																},
																"nativeSrc": "1837:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1837:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1829:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1829:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1909:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1909:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1922:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1922:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1933:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1933:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1918:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:4"
																		},
																		"nativeSrc": "1918:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1918:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1865:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1865:43:4"
																},
																"nativeSrc": "1865:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1865:71:4"
															},
															"nativeSrc": "1865:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1865:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1721:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1791:9:4",
														"nodeType": "YulTypedName",
														"src": "1791:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1803:6:4",
														"nodeType": "YulTypedName",
														"src": "1803:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1814:4:4",
														"nodeType": "YulTypedName",
														"src": "1814:4:4",
														"type": ""
													}
												],
												"src": "1721:222:4"
											},
											{
												"body": {
													"nativeSrc": "2014:53:4",
													"nodeType": "YulBlock",
													"src": "2014:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2031:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2054:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2054:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2036:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2036:17:4"
																		},
																		"nativeSrc": "2036:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2036:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2024:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2024:6:4"
																},
																"nativeSrc": "2024:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2024:37:4"
															},
															"nativeSrc": "2024:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2024:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1949:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2002:5:4",
														"nodeType": "YulTypedName",
														"src": "2002:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2009:3:4",
														"nodeType": "YulTypedName",
														"src": "2009:3:4",
														"type": ""
													}
												],
												"src": "1949:118:4"
											},
											{
												"body": {
													"nativeSrc": "2171:124:4",
													"nodeType": "YulBlock",
													"src": "2171:124:4",
													"statements": [
														{
															"nativeSrc": "2181:26:4",
															"nodeType": "YulAssignment",
															"src": "2181:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2193:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2193:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2204:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2204:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2189:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:4"
																},
																"nativeSrc": "2189:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2189:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2181:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2181:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2261:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2261:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2274:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2274:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2285:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2285:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2270:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2270:3:4"
																		},
																		"nativeSrc": "2270:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2270:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2217:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2217:43:4"
																},
																"nativeSrc": "2217:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2217:71:4"
															},
															"nativeSrc": "2217:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2217:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2073:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2143:9:4",
														"nodeType": "YulTypedName",
														"src": "2143:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2155:6:4",
														"nodeType": "YulTypedName",
														"src": "2155:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2166:4:4",
														"nodeType": "YulTypedName",
														"src": "2166:4:4",
														"type": ""
													}
												],
												"src": "2073:222:4"
											},
											{
												"body": {
													"nativeSrc": "2344:79:4",
													"nodeType": "YulBlock",
													"src": "2344:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2401:16:4",
																"nodeType": "YulBlock",
																"src": "2401:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2410:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2410:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2413:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2413:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2403:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2403:6:4"
																			},
																			"nativeSrc": "2403:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2403:12:4"
																		},
																		"nativeSrc": "2403:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2403:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2367:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2367:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2392:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2392:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2374:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2374:17:4"
																				},
																				"nativeSrc": "2374:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2374:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2364:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2364:2:4"
																		},
																		"nativeSrc": "2364:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2364:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2357:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:4"
																},
																"nativeSrc": "2357:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2357:43:4"
															},
															"nativeSrc": "2354:63:4",
															"nodeType": "YulIf",
															"src": "2354:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2301:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2337:5:4",
														"nodeType": "YulTypedName",
														"src": "2337:5:4",
														"type": ""
													}
												],
												"src": "2301:122:4"
											},
											{
												"body": {
													"nativeSrc": "2481:87:4",
													"nodeType": "YulBlock",
													"src": "2481:87:4",
													"statements": [
														{
															"nativeSrc": "2491:29:4",
															"nodeType": "YulAssignment",
															"src": "2491:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2513:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2513:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2500:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2500:12:4"
																},
																"nativeSrc": "2500:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2500:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2491:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2491:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2556:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2556:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2529:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2529:26:4"
																},
																"nativeSrc": "2529:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2529:33:4"
															},
															"nativeSrc": "2529:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2529:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2429:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2459:6:4",
														"nodeType": "YulTypedName",
														"src": "2459:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2467:3:4",
														"nodeType": "YulTypedName",
														"src": "2467:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2475:5:4",
														"nodeType": "YulTypedName",
														"src": "2475:5:4",
														"type": ""
													}
												],
												"src": "2429:139:4"
											},
											{
												"body": {
													"nativeSrc": "2640:263:4",
													"nodeType": "YulBlock",
													"src": "2640:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2686:83:4",
																"nodeType": "YulBlock",
																"src": "2686:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2688:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2688:77:4"
																			},
																			"nativeSrc": "2688:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2688:79:4"
																		},
																		"nativeSrc": "2688:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2688:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2661:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2661:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2670:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2670:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2657:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:4"
																		},
																		"nativeSrc": "2657:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2682:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2653:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:4"
																},
																"nativeSrc": "2653:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2653:32:4"
															},
															"nativeSrc": "2650:119:4",
															"nodeType": "YulIf",
															"src": "2650:119:4"
														},
														{
															"nativeSrc": "2779:117:4",
															"nodeType": "YulBlock",
															"src": "2779:117:4",
															"statements": [
																{
																	"nativeSrc": "2794:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2794:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2808:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2808:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2798:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2798:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2823:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2823:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2858:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2858:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2869:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2869:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2854:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2854:3:4"
																				},
																				"nativeSrc": "2854:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2854:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2878:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2878:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2833:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2833:20:4"
																		},
																		"nativeSrc": "2833:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2823:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2823:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2574:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2610:9:4",
														"nodeType": "YulTypedName",
														"src": "2610:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2621:7:4",
														"nodeType": "YulTypedName",
														"src": "2621:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2633:6:4",
														"nodeType": "YulTypedName",
														"src": "2633:6:4",
														"type": ""
													}
												],
												"src": "2574:329:4"
											},
											{
												"body": {
													"nativeSrc": "2941:28:4",
													"nodeType": "YulBlock",
													"src": "2941:28:4",
													"statements": [
														{
															"nativeSrc": "2951:12:4",
															"nodeType": "YulAssignment",
															"src": "2951:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "2958:5:4",
																"nodeType": "YulIdentifier",
																"src": "2958:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2951:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2951:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2909:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2927:5:4",
														"nodeType": "YulTypedName",
														"src": "2927:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2937:3:4",
														"nodeType": "YulTypedName",
														"src": "2937:3:4",
														"type": ""
													}
												],
												"src": "2909:60:4"
											},
											{
												"body": {
													"nativeSrc": "3035:82:4",
													"nodeType": "YulBlock",
													"src": "3035:82:4",
													"statements": [
														{
															"nativeSrc": "3045:66:4",
															"nodeType": "YulAssignment",
															"src": "3045:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3103:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3103:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3085:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3085:17:4"
																				},
																				"nativeSrc": "3085:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3085:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3076:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "3076:8:4"
																		},
																		"nativeSrc": "3076:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3076:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:4"
																},
																"nativeSrc": "3058:53:4",
																"nodeType": "YulFunctionCall",
																"src": "3058:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3045:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3045:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2975:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3015:5:4",
														"nodeType": "YulTypedName",
														"src": "3015:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3025:9:4",
														"nodeType": "YulTypedName",
														"src": "3025:9:4",
														"type": ""
													}
												],
												"src": "2975:142:4"
											},
											{
												"body": {
													"nativeSrc": "3183:66:4",
													"nodeType": "YulBlock",
													"src": "3183:66:4",
													"statements": [
														{
															"nativeSrc": "3193:50:4",
															"nodeType": "YulAssignment",
															"src": "3193:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3237:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3237:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3206:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "3206:30:4"
																},
																"nativeSrc": "3206:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3206:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3193:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3193:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3123:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3163:5:4",
														"nodeType": "YulTypedName",
														"src": "3163:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3173:9:4",
														"nodeType": "YulTypedName",
														"src": "3173:9:4",
														"type": ""
													}
												],
												"src": "3123:126:4"
											},
											{
												"body": {
													"nativeSrc": "3329:66:4",
													"nodeType": "YulBlock",
													"src": "3329:66:4",
													"statements": [
														{
															"nativeSrc": "3339:50:4",
															"nodeType": "YulAssignment",
															"src": "3339:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3383:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3383:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3352:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "3352:30:4"
																},
																"nativeSrc": "3352:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3352:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3339:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3339:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "3255:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3309:5:4",
														"nodeType": "YulTypedName",
														"src": "3309:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3319:9:4",
														"nodeType": "YulTypedName",
														"src": "3319:9:4",
														"type": ""
													}
												],
												"src": "3255:140:4"
											},
											{
												"body": {
													"nativeSrc": "3480:80:4",
													"nodeType": "YulBlock",
													"src": "3480:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3497:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3497:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3547:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3547:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "3502:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "3502:44:4"
																		},
																		"nativeSrc": "3502:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3490:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3490:6:4"
																},
																"nativeSrc": "3490:64:4",
																"nodeType": "YulFunctionCall",
																"src": "3490:64:4"
															},
															"nativeSrc": "3490:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "3490:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "3401:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3468:5:4",
														"nodeType": "YulTypedName",
														"src": "3468:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3475:3:4",
														"nodeType": "YulTypedName",
														"src": "3475:3:4",
														"type": ""
													}
												],
												"src": "3401:159:4"
											},
											{
												"body": {
													"nativeSrc": "3678:138:4",
													"nodeType": "YulBlock",
													"src": "3678:138:4",
													"statements": [
														{
															"nativeSrc": "3688:26:4",
															"nodeType": "YulAssignment",
															"src": "3688:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3700:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3711:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3696:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:4"
																},
																"nativeSrc": "3696:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3696:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3688:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3688:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3782:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3782:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3795:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3795:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3806:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3806:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3791:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3791:3:4"
																		},
																		"nativeSrc": "3791:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3791:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "3724:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "3724:57:4"
																},
																"nativeSrc": "3724:85:4",
																"nodeType": "YulFunctionCall",
																"src": "3724:85:4"
															},
															"nativeSrc": "3724:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "3724:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "3566:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3650:9:4",
														"nodeType": "YulTypedName",
														"src": "3650:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3662:6:4",
														"nodeType": "YulTypedName",
														"src": "3662:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3673:4:4",
														"nodeType": "YulTypedName",
														"src": "3673:4:4",
														"type": ""
													}
												],
												"src": "3566:250:4"
											},
											{
												"body": {
													"nativeSrc": "3918:73:4",
													"nodeType": "YulBlock",
													"src": "3918:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3935:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3935:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3940:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3940:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3928:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:4"
																},
																"nativeSrc": "3928:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3928:19:4"
															},
															"nativeSrc": "3928:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "3928:19:4"
														},
														{
															"nativeSrc": "3956:29:4",
															"nodeType": "YulAssignment",
															"src": "3956:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3975:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3975:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3980:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3980:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3971:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3971:3:4"
																},
																"nativeSrc": "3971:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3971:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3956:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3956:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3822:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3890:3:4",
														"nodeType": "YulTypedName",
														"src": "3890:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3895:6:4",
														"nodeType": "YulTypedName",
														"src": "3895:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3906:11:4",
														"nodeType": "YulTypedName",
														"src": "3906:11:4",
														"type": ""
													}
												],
												"src": "3822:169:4"
											},
											{
												"body": {
													"nativeSrc": "4103:58:4",
													"nodeType": "YulBlock",
													"src": "4103:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4125:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4125:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4133:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4133:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4121:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:4"
																		},
																		"nativeSrc": "4121:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4121:14:4"
																	},
																	{
																		"hexValue": "4e6f7468696e67207374616b6564",
																		"kind": "string",
																		"nativeSrc": "4137:16:4",
																		"nodeType": "YulLiteral",
																		"src": "4137:16:4",
																		"type": "",
																		"value": "Nothing staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4114:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:4"
																},
																"nativeSrc": "4114:40:4",
																"nodeType": "YulFunctionCall",
																"src": "4114:40:4"
															},
															"nativeSrc": "4114:40:4",
															"nodeType": "YulExpressionStatement",
															"src": "4114:40:4"
														}
													]
												},
												"name": "store_literal_in_memory_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828",
												"nativeSrc": "3997:164:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4095:6:4",
														"nodeType": "YulTypedName",
														"src": "4095:6:4",
														"type": ""
													}
												],
												"src": "3997:164:4"
											},
											{
												"body": {
													"nativeSrc": "4313:220:4",
													"nodeType": "YulBlock",
													"src": "4313:220:4",
													"statements": [
														{
															"nativeSrc": "4323:74:4",
															"nodeType": "YulAssignment",
															"src": "4323:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4389:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4389:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4394:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4394:2:4",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4330:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4330:58:4"
																},
																"nativeSrc": "4330:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4330:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4323:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4495:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4495:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828",
																	"nativeSrc": "4406:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4406:88:4"
																},
																"nativeSrc": "4406:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4406:93:4"
															},
															"nativeSrc": "4406:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4406:93:4"
														},
														{
															"nativeSrc": "4508:19:4",
															"nodeType": "YulAssignment",
															"src": "4508:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4519:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4519:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4524:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4515:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4515:3:4"
																},
																"nativeSrc": "4515:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4515:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4508:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4167:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4301:3:4",
														"nodeType": "YulTypedName",
														"src": "4301:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4309:3:4",
														"nodeType": "YulTypedName",
														"src": "4309:3:4",
														"type": ""
													}
												],
												"src": "4167:366:4"
											},
											{
												"body": {
													"nativeSrc": "4710:248:4",
													"nodeType": "YulBlock",
													"src": "4710:248:4",
													"statements": [
														{
															"nativeSrc": "4720:26:4",
															"nodeType": "YulAssignment",
															"src": "4720:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4732:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4732:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4728:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4728:3:4"
																},
																"nativeSrc": "4728:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4728:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4720:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4720:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4767:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4778:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4778:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4763:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:4"
																		},
																		"nativeSrc": "4763:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4763:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4786:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4792:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4792:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4782:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4782:3:4"
																		},
																		"nativeSrc": "4782:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4782:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4756:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:4"
																},
																"nativeSrc": "4756:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4756:47:4"
															},
															"nativeSrc": "4756:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4756:47:4"
														},
														{
															"nativeSrc": "4812:139:4",
															"nodeType": "YulAssignment",
															"src": "4812:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4946:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4946:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4820:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4820:124:4"
																},
																"nativeSrc": "4820:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4820:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4812:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4812:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4539:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4690:9:4",
														"nodeType": "YulTypedName",
														"src": "4690:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4705:4:4",
														"nodeType": "YulTypedName",
														"src": "4705:4:4",
														"type": ""
													}
												],
												"src": "4539:419:4"
											},
											{
												"body": {
													"nativeSrc": "5090:206:4",
													"nodeType": "YulBlock",
													"src": "5090:206:4",
													"statements": [
														{
															"nativeSrc": "5100:26:4",
															"nodeType": "YulAssignment",
															"src": "5100:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5112:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5112:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5123:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5123:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5108:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5108:3:4"
																},
																"nativeSrc": "5108:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5108:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5100:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5100:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5180:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5180:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5193:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5193:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5204:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5204:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5189:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5189:3:4"
																		},
																		"nativeSrc": "5189:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5189:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5136:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5136:43:4"
																},
																"nativeSrc": "5136:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5136:71:4"
															},
															"nativeSrc": "5136:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5136:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5261:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5261:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5274:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5274:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5285:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5285:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5270:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:4"
																		},
																		"nativeSrc": "5270:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5270:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5217:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5217:43:4"
																},
																"nativeSrc": "5217:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5217:72:4"
															},
															"nativeSrc": "5217:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5217:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4964:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5054:9:4",
														"nodeType": "YulTypedName",
														"src": "5054:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5066:6:4",
														"nodeType": "YulTypedName",
														"src": "5066:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5074:6:4",
														"nodeType": "YulTypedName",
														"src": "5074:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5085:4:4",
														"nodeType": "YulTypedName",
														"src": "5085:4:4",
														"type": ""
													}
												],
												"src": "4964:332:4"
											},
											{
												"body": {
													"nativeSrc": "5344:48:4",
													"nodeType": "YulBlock",
													"src": "5344:48:4",
													"statements": [
														{
															"nativeSrc": "5354:32:4",
															"nodeType": "YulAssignment",
															"src": "5354:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5379:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5379:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5372:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5372:6:4"
																		},
																		"nativeSrc": "5372:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5372:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5365:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:4"
																},
																"nativeSrc": "5365:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5365:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5354:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "5354:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5302:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5326:5:4",
														"nodeType": "YulTypedName",
														"src": "5326:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5336:7:4",
														"nodeType": "YulTypedName",
														"src": "5336:7:4",
														"type": ""
													}
												],
												"src": "5302:90:4"
											},
											{
												"body": {
													"nativeSrc": "5438:76:4",
													"nodeType": "YulBlock",
													"src": "5438:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5492:16:4",
																"nodeType": "YulBlock",
																"src": "5492:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5501:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5501:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5504:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5504:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5494:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5494:6:4"
																			},
																			"nativeSrc": "5494:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5494:12:4"
																		},
																		"nativeSrc": "5494:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5494:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5461:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5461:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5483:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5483:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5468:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "5468:14:4"
																				},
																				"nativeSrc": "5468:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5458:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5458:2:4"
																		},
																		"nativeSrc": "5458:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5458:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5451:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5451:6:4"
																},
																"nativeSrc": "5451:40:4",
																"nodeType": "YulFunctionCall",
																"src": "5451:40:4"
															},
															"nativeSrc": "5448:60:4",
															"nodeType": "YulIf",
															"src": "5448:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5398:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5431:5:4",
														"nodeType": "YulTypedName",
														"src": "5431:5:4",
														"type": ""
													}
												],
												"src": "5398:116:4"
											},
											{
												"body": {
													"nativeSrc": "5580:77:4",
													"nodeType": "YulBlock",
													"src": "5580:77:4",
													"statements": [
														{
															"nativeSrc": "5590:22:4",
															"nodeType": "YulAssignment",
															"src": "5590:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5605:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5605:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5599:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5599:5:4"
																},
																"nativeSrc": "5599:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5599:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5590:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5590:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5645:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5645:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5621:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "5621:23:4"
																},
																"nativeSrc": "5621:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5621:30:4"
															},
															"nativeSrc": "5621:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "5621:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5520:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5558:6:4",
														"nodeType": "YulTypedName",
														"src": "5558:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5566:3:4",
														"nodeType": "YulTypedName",
														"src": "5566:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5574:5:4",
														"nodeType": "YulTypedName",
														"src": "5574:5:4",
														"type": ""
													}
												],
												"src": "5520:137:4"
											},
											{
												"body": {
													"nativeSrc": "5737:271:4",
													"nodeType": "YulBlock",
													"src": "5737:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5783:83:4",
																"nodeType": "YulBlock",
																"src": "5783:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5785:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5785:77:4"
																			},
																			"nativeSrc": "5785:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5785:79:4"
																		},
																		"nativeSrc": "5785:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5785:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5758:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5758:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5767:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5767:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5754:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5754:3:4"
																		},
																		"nativeSrc": "5754:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5754:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5779:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5779:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5750:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5750:3:4"
																},
																"nativeSrc": "5750:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5750:32:4"
															},
															"nativeSrc": "5747:119:4",
															"nodeType": "YulIf",
															"src": "5747:119:4"
														},
														{
															"nativeSrc": "5876:125:4",
															"nodeType": "YulBlock",
															"src": "5876:125:4",
															"statements": [
																{
																	"nativeSrc": "5891:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5891:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5905:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5905:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5895:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5895:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5920:71:4",
																	"nodeType": "YulAssignment",
																	"src": "5920:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5963:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5963:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5974:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5974:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5959:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5959:3:4"
																				},
																				"nativeSrc": "5959:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5959:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5983:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5983:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5930:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "5930:28:4"
																		},
																		"nativeSrc": "5930:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5930:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5920:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5920:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5663:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5707:9:4",
														"nodeType": "YulTypedName",
														"src": "5707:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5718:7:4",
														"nodeType": "YulTypedName",
														"src": "5718:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5730:6:4",
														"nodeType": "YulTypedName",
														"src": "5730:6:4",
														"type": ""
													}
												],
												"src": "5663:345:4"
											},
											{
												"body": {
													"nativeSrc": "6120:59:4",
													"nodeType": "YulBlock",
													"src": "6120:59:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6142:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6142:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6150:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6150:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6138:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6138:3:4"
																		},
																		"nativeSrc": "6138:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6138:14:4"
																	},
																	{
																		"hexValue": "4e6f20616374697665207374616b65",
																		"kind": "string",
																		"nativeSrc": "6154:17:4",
																		"nodeType": "YulLiteral",
																		"src": "6154:17:4",
																		"type": "",
																		"value": "No active stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6131:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6131:6:4"
																},
																"nativeSrc": "6131:41:4",
																"nodeType": "YulFunctionCall",
																"src": "6131:41:4"
															},
															"nativeSrc": "6131:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "6131:41:4"
														}
													]
												},
												"name": "store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
												"nativeSrc": "6014:165:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6112:6:4",
														"nodeType": "YulTypedName",
														"src": "6112:6:4",
														"type": ""
													}
												],
												"src": "6014:165:4"
											},
											{
												"body": {
													"nativeSrc": "6331:220:4",
													"nodeType": "YulBlock",
													"src": "6331:220:4",
													"statements": [
														{
															"nativeSrc": "6341:74:4",
															"nodeType": "YulAssignment",
															"src": "6341:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6407:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6407:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6412:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6412:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6348:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6348:58:4"
																},
																"nativeSrc": "6348:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6348:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6341:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6341:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6513:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6513:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																	"nativeSrc": "6424:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6424:88:4"
																},
																"nativeSrc": "6424:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6424:93:4"
															},
															"nativeSrc": "6424:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6424:93:4"
														},
														{
															"nativeSrc": "6526:19:4",
															"nodeType": "YulAssignment",
															"src": "6526:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6537:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6537:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6542:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6542:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6533:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6533:3:4"
																},
																"nativeSrc": "6533:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6533:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6526:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6526:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6185:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6319:3:4",
														"nodeType": "YulTypedName",
														"src": "6319:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6327:3:4",
														"nodeType": "YulTypedName",
														"src": "6327:3:4",
														"type": ""
													}
												],
												"src": "6185:366:4"
											},
											{
												"body": {
													"nativeSrc": "6728:248:4",
													"nodeType": "YulBlock",
													"src": "6728:248:4",
													"statements": [
														{
															"nativeSrc": "6738:26:4",
															"nodeType": "YulAssignment",
															"src": "6738:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6750:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6750:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6761:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6761:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6746:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:4"
																},
																"nativeSrc": "6746:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6746:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6738:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6738:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6785:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6785:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6796:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6796:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6781:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6781:3:4"
																		},
																		"nativeSrc": "6781:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6781:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6804:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6804:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6810:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6810:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6800:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6800:3:4"
																		},
																		"nativeSrc": "6800:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6800:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6774:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6774:6:4"
																},
																"nativeSrc": "6774:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6774:47:4"
															},
															"nativeSrc": "6774:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6774:47:4"
														},
														{
															"nativeSrc": "6830:139:4",
															"nodeType": "YulAssignment",
															"src": "6830:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6964:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6964:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6838:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6838:124:4"
																},
																"nativeSrc": "6838:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6838:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6830:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6830:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6557:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6708:9:4",
														"nodeType": "YulTypedName",
														"src": "6708:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6723:4:4",
														"nodeType": "YulTypedName",
														"src": "6723:4:4",
														"type": ""
													}
												],
												"src": "6557:419:4"
											},
											{
												"body": {
													"nativeSrc": "7010:152:4",
													"nodeType": "YulBlock",
													"src": "7010:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7027:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7027:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7030:77:4",
																		"nodeType": "YulLiteral",
																		"src": "7030:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7020:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:4"
																},
																"nativeSrc": "7020:88:4",
																"nodeType": "YulFunctionCall",
																"src": "7020:88:4"
															},
															"nativeSrc": "7020:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "7020:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7124:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7127:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7127:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7117:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7117:6:4"
																},
																"nativeSrc": "7117:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7117:15:4"
															},
															"nativeSrc": "7117:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7117:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7148:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7148:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7151:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7151:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7141:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:4"
																},
																"nativeSrc": "7141:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7141:15:4"
															},
															"nativeSrc": "7141:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7141:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6982:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "6982:180:4"
											},
											{
												"body": {
													"nativeSrc": "7213:149:4",
													"nodeType": "YulBlock",
													"src": "7213:149:4",
													"statements": [
														{
															"nativeSrc": "7223:25:4",
															"nodeType": "YulAssignment",
															"src": "7223:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7246:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7246:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7228:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7228:17:4"
																},
																"nativeSrc": "7228:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7228:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7223:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7223:1:4"
																}
															]
														},
														{
															"nativeSrc": "7257:25:4",
															"nodeType": "YulAssignment",
															"src": "7257:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7280:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7280:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7262:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7262:17:4"
																},
																"nativeSrc": "7262:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7262:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7257:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7257:1:4"
																}
															]
														},
														{
															"nativeSrc": "7291:17:4",
															"nodeType": "YulAssignment",
															"src": "7291:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7303:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7303:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7306:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7306:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7299:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7299:3:4"
																},
																"nativeSrc": "7299:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7299:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7291:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7291:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7333:22:4",
																"nodeType": "YulBlock",
																"src": "7333:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7335:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7335:16:4"
																			},
																			"nativeSrc": "7335:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7335:18:4"
																		},
																		"nativeSrc": "7335:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7335:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7324:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7324:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7330:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7330:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7321:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7321:2:4"
																},
																"nativeSrc": "7321:11:4",
																"nodeType": "YulFunctionCall",
																"src": "7321:11:4"
															},
															"nativeSrc": "7318:37:4",
															"nodeType": "YulIf",
															"src": "7318:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7168:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7199:1:4",
														"nodeType": "YulTypedName",
														"src": "7199:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7202:1:4",
														"nodeType": "YulTypedName",
														"src": "7202:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7208:4:4",
														"nodeType": "YulTypedName",
														"src": "7208:4:4",
														"type": ""
													}
												],
												"src": "7168:194:4"
											},
											{
												"body": {
													"nativeSrc": "7416:362:4",
													"nodeType": "YulBlock",
													"src": "7416:362:4",
													"statements": [
														{
															"nativeSrc": "7426:25:4",
															"nodeType": "YulAssignment",
															"src": "7426:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7449:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7449:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7431:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7431:17:4"
																},
																"nativeSrc": "7431:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7431:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7426:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7426:1:4"
																}
															]
														},
														{
															"nativeSrc": "7460:25:4",
															"nodeType": "YulAssignment",
															"src": "7460:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7483:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7483:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7465:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7465:17:4"
																},
																"nativeSrc": "7465:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7465:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7460:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7460:1:4"
																}
															]
														},
														{
															"nativeSrc": "7494:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7494:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7517:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7517:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7520:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7513:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7513:3:4"
																},
																"nativeSrc": "7513:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7513:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7498:11:4",
																	"nodeType": "YulTypedName",
																	"src": "7498:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7531:41:4",
															"nodeType": "YulAssignment",
															"src": "7531:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7560:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "7560:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7542:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7542:17:4"
																},
																"nativeSrc": "7542:30:4",
																"nodeType": "YulFunctionCall",
																"src": "7542:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7531:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "7531:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7749:22:4",
																"nodeType": "YulBlock",
																"src": "7749:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7751:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7751:16:4"
																			},
																			"nativeSrc": "7751:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7751:18:4"
																		},
																		"nativeSrc": "7751:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7751:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7682:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "7682:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7675:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "7675:6:4"
																				},
																				"nativeSrc": "7675:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7675:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7705:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "7705:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7712:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "7712:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7721:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "7721:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7708:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "7708:3:4"
																						},
																						"nativeSrc": "7708:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "7708:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7702:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "7702:2:4"
																				},
																				"nativeSrc": "7702:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7702:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7655:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "7655:2:4"
																		},
																		"nativeSrc": "7655:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7655:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7635:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7635:6:4"
																},
																"nativeSrc": "7635:113:4",
																"nodeType": "YulFunctionCall",
																"src": "7635:113:4"
															},
															"nativeSrc": "7632:139:4",
															"nodeType": "YulIf",
															"src": "7632:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7368:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7399:1:4",
														"nodeType": "YulTypedName",
														"src": "7399:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7402:1:4",
														"nodeType": "YulTypedName",
														"src": "7402:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7408:7:4",
														"nodeType": "YulTypedName",
														"src": "7408:7:4",
														"type": ""
													}
												],
												"src": "7368:410:4"
											},
											{
												"body": {
													"nativeSrc": "7812:152:4",
													"nodeType": "YulBlock",
													"src": "7812:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7829:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7829:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7832:77:4",
																		"nodeType": "YulLiteral",
																		"src": "7832:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7822:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7822:6:4"
																},
																"nativeSrc": "7822:88:4",
																"nodeType": "YulFunctionCall",
																"src": "7822:88:4"
															},
															"nativeSrc": "7822:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "7822:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7926:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7926:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7929:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7919:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:4"
																},
																"nativeSrc": "7919:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7919:15:4"
															},
															"nativeSrc": "7919:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7919:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7950:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7950:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7953:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7953:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7943:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7943:6:4"
																},
																"nativeSrc": "7943:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7943:15:4"
															},
															"nativeSrc": "7943:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7943:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7784:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "7784:180:4"
											},
											{
												"body": {
													"nativeSrc": "8012:143:4",
													"nodeType": "YulBlock",
													"src": "8012:143:4",
													"statements": [
														{
															"nativeSrc": "8022:25:4",
															"nodeType": "YulAssignment",
															"src": "8022:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8045:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8045:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8027:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8027:17:4"
																},
																"nativeSrc": "8027:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8027:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8022:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8022:1:4"
																}
															]
														},
														{
															"nativeSrc": "8056:25:4",
															"nodeType": "YulAssignment",
															"src": "8056:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8079:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8079:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8061:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8061:17:4"
																},
																"nativeSrc": "8061:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8061:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8056:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8056:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8103:22:4",
																"nodeType": "YulBlock",
																"src": "8103:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8105:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "8105:16:4"
																			},
																			"nativeSrc": "8105:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8105:18:4"
																		},
																		"nativeSrc": "8105:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8105:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8100:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8100:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8093:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:4"
																},
																"nativeSrc": "8093:9:4",
																"nodeType": "YulFunctionCall",
																"src": "8093:9:4"
															},
															"nativeSrc": "8090:35:4",
															"nodeType": "YulIf",
															"src": "8090:35:4"
														},
														{
															"nativeSrc": "8135:14:4",
															"nodeType": "YulAssignment",
															"src": "8135:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8144:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8144:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8147:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8147:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8140:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8140:3:4"
																},
																"nativeSrc": "8140:9:4",
																"nodeType": "YulFunctionCall",
																"src": "8140:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8135:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8135:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7970:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8001:1:4",
														"nodeType": "YulTypedName",
														"src": "8001:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8004:1:4",
														"nodeType": "YulTypedName",
														"src": "8004:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8010:1:4",
														"nodeType": "YulTypedName",
														"src": "8010:1:4",
														"type": ""
													}
												],
												"src": "7970:185:4"
											},
											{
												"body": {
													"nativeSrc": "8267:58:4",
													"nodeType": "YulBlock",
													"src": "8267:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8289:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8297:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8297:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8285:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8285:3:4"
																		},
																		"nativeSrc": "8285:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8285:14:4"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "8301:16:4",
																		"nodeType": "YulLiteral",
																		"src": "8301:16:4",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8278:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:4"
																},
																"nativeSrc": "8278:40:4",
																"nodeType": "YulFunctionCall",
																"src": "8278:40:4"
															},
															"nativeSrc": "8278:40:4",
															"nodeType": "YulExpressionStatement",
															"src": "8278:40:4"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nativeSrc": "8161:164:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8259:6:4",
														"nodeType": "YulTypedName",
														"src": "8259:6:4",
														"type": ""
													}
												],
												"src": "8161:164:4"
											},
											{
												"body": {
													"nativeSrc": "8477:220:4",
													"nodeType": "YulBlock",
													"src": "8477:220:4",
													"statements": [
														{
															"nativeSrc": "8487:74:4",
															"nodeType": "YulAssignment",
															"src": "8487:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8553:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8553:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8558:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8558:2:4",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8494:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "8494:58:4"
																},
																"nativeSrc": "8494:67:4",
																"nodeType": "YulFunctionCall",
																"src": "8494:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8487:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8487:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8659:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8659:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nativeSrc": "8570:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "8570:88:4"
																},
																"nativeSrc": "8570:93:4",
																"nodeType": "YulFunctionCall",
																"src": "8570:93:4"
															},
															"nativeSrc": "8570:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "8570:93:4"
														},
														{
															"nativeSrc": "8672:19:4",
															"nodeType": "YulAssignment",
															"src": "8672:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8683:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8683:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8688:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8688:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8679:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8679:3:4"
																},
																"nativeSrc": "8679:12:4",
																"nodeType": "YulFunctionCall",
																"src": "8679:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8672:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8672:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8331:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8465:3:4",
														"nodeType": "YulTypedName",
														"src": "8465:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8473:3:4",
														"nodeType": "YulTypedName",
														"src": "8473:3:4",
														"type": ""
													}
												],
												"src": "8331:366:4"
											},
											{
												"body": {
													"nativeSrc": "8874:248:4",
													"nodeType": "YulBlock",
													"src": "8874:248:4",
													"statements": [
														{
															"nativeSrc": "8884:26:4",
															"nodeType": "YulAssignment",
															"src": "8884:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8896:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8896:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8907:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8907:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8892:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8892:3:4"
																},
																"nativeSrc": "8892:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8892:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8884:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8884:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8931:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8931:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8942:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8942:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8927:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8927:3:4"
																		},
																		"nativeSrc": "8927:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8927:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8950:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8950:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8956:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8956:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8946:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8946:3:4"
																		},
																		"nativeSrc": "8946:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8946:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8920:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8920:6:4"
																},
																"nativeSrc": "8920:47:4",
																"nodeType": "YulFunctionCall",
																"src": "8920:47:4"
															},
															"nativeSrc": "8920:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "8920:47:4"
														},
														{
															"nativeSrc": "8976:139:4",
															"nodeType": "YulAssignment",
															"src": "8976:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9110:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9110:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8984:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "8984:124:4"
																},
																"nativeSrc": "8984:131:4",
																"nodeType": "YulFunctionCall",
																"src": "8984:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8976:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8976:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8703:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8854:9:4",
														"nodeType": "YulTypedName",
														"src": "8854:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8869:4:4",
														"nodeType": "YulTypedName",
														"src": "8869:4:4",
														"type": ""
													}
												],
												"src": "8703:419:4"
											},
											{
												"body": {
													"nativeSrc": "9282:288:4",
													"nodeType": "YulBlock",
													"src": "9282:288:4",
													"statements": [
														{
															"nativeSrc": "9292:26:4",
															"nodeType": "YulAssignment",
															"src": "9292:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9304:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "9304:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9315:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9315:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9300:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9300:3:4"
																},
																"nativeSrc": "9300:18:4",
																"nodeType": "YulFunctionCall",
																"src": "9300:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9292:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9292:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9372:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "9372:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9385:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9385:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9396:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9396:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9381:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:4"
																		},
																		"nativeSrc": "9381:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9328:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "9328:43:4"
																},
																"nativeSrc": "9328:71:4",
																"nodeType": "YulFunctionCall",
																"src": "9328:71:4"
															},
															"nativeSrc": "9328:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "9328:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9453:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "9453:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9466:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9466:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9477:2:4",
																				"nodeType": "YulLiteral",
																				"src": "9477:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9462:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9462:3:4"
																		},
																		"nativeSrc": "9462:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9462:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9409:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "9409:43:4"
																},
																"nativeSrc": "9409:72:4",
																"nodeType": "YulFunctionCall",
																"src": "9409:72:4"
															},
															"nativeSrc": "9409:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "9409:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9535:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "9535:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9548:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9548:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9559:2:4",
																				"nodeType": "YulLiteral",
																				"src": "9559:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9544:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9544:3:4"
																		},
																		"nativeSrc": "9544:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9544:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9491:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "9491:43:4"
																},
																"nativeSrc": "9491:72:4",
																"nodeType": "YulFunctionCall",
																"src": "9491:72:4"
															},
															"nativeSrc": "9491:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "9491:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9128:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9238:9:4",
														"nodeType": "YulTypedName",
														"src": "9238:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9250:6:4",
														"nodeType": "YulTypedName",
														"src": "9250:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9258:6:4",
														"nodeType": "YulTypedName",
														"src": "9258:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9266:6:4",
														"nodeType": "YulTypedName",
														"src": "9266:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9277:4:4",
														"nodeType": "YulTypedName",
														"src": "9277:4:4",
														"type": ""
													}
												],
												"src": "9128:442:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No active stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b146101185780639e447fc614610136578063a694fc3a14610152578063e6a69ab81461016e578063f2fde38b1461018c578063fc0c546a146101a8576100a7565b806316934fc4146100ab5780632def6620146100dc5780634e71d92d146100e6578063715018a6146100f05780637b0a47ee146100fa575b5f5ffd5b6100c560048036038101906100c0919061095e565b6101c6565b6040516100d39291906109a1565b60405180910390f35b6100e46101e6565b005b6100ee610396565b005b6100f8610513565b005b610102610526565b60405161010f91906109c8565b60405180910390f35b61012061052c565b60405161012d91906109f0565b60405180910390f35b610150600480360381019061014b9190610a33565b610553565b005b61016c60048036038101906101679190610a33565b610565565b005b610176610700565b60405161018391906109c8565b60405180910390f35b6101a660048036038101906101a1919061095e565b610708565b005b6101b061078c565b6040516101bd9190610ab9565b60405180910390f35b6003602052805f5260405f205f91509050805f0154908060010154905082565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610b2c565b60405180910390fd5b61026f610396565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610352929190610b4a565b6020604051808303815f875af115801561036e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103929190610ba6565b5050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541161041b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041290610c1b565b60405180910390fd5b5f81600101544261042c9190610c66565b90505f6301e1338060646104409190610c99565b82600254855f01546104529190610c99565b61045c9190610c99565b6104669190610d07565b905042836001018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104cd929190610b4a565b6020604051808303815f875af11580156104e9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061050d9190610ba6565b50505050565b61051b6107b1565b6105245f610838565b565b60025481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61055b6107b1565b8060028190555050565b5f81116105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e90610d81565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411156105f7576105f6610396565b5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161065593929190610d9f565b6020604051808303815f875af1158015610671573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106959190610ba6565b5060405180604001604052808281526020014281525060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01556020820151816001015590505050565b6301e1338081565b6107106107b1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610780575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161077791906109f0565b60405180910390fd5b61078981610838565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107b96108f9565b73ffffffffffffffffffffffffffffffffffffffff166107d761052c565b73ffffffffffffffffffffffffffffffffffffffff1614610836576107fa6108f9565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161082d91906109f0565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61092d82610904565b9050919050565b61093d81610923565b8114610947575f5ffd5b50565b5f8135905061095881610934565b92915050565b5f6020828403121561097357610972610900565b5b5f6109808482850161094a565b91505092915050565b5f819050919050565b61099b81610989565b82525050565b5f6040820190506109b45f830185610992565b6109c16020830184610992565b9392505050565b5f6020820190506109db5f830184610992565b92915050565b6109ea81610923565b82525050565b5f602082019050610a035f8301846109e1565b92915050565b610a1281610989565b8114610a1c575f5ffd5b50565b5f81359050610a2d81610a09565b92915050565b5f60208284031215610a4857610a47610900565b5b5f610a5584828501610a1f565b91505092915050565b5f819050919050565b5f610a81610a7c610a7784610904565b610a5e565b610904565b9050919050565b5f610a9282610a67565b9050919050565b5f610aa382610a88565b9050919050565b610ab381610a99565b82525050565b5f602082019050610acc5f830184610aaa565b92915050565b5f82825260208201905092915050565b7f4e6f7468696e67207374616b65640000000000000000000000000000000000005f82015250565b5f610b16600e83610ad2565b9150610b2182610ae2565b602082019050919050565b5f6020820190508181035f830152610b4381610b0a565b9050919050565b5f604082019050610b5d5f8301856109e1565b610b6a6020830184610992565b9392505050565b5f8115159050919050565b610b8581610b71565b8114610b8f575f5ffd5b50565b5f81519050610ba081610b7c565b92915050565b5f60208284031215610bbb57610bba610900565b5b5f610bc884828501610b92565b91505092915050565b7f4e6f20616374697665207374616b6500000000000000000000000000000000005f82015250565b5f610c05600f83610ad2565b9150610c1082610bd1565b602082019050919050565b5f6020820190508181035f830152610c3281610bf9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c7082610989565b9150610c7b83610989565b9250828203905081811115610c9357610c92610c39565b5b92915050565b5f610ca382610989565b9150610cae83610989565b9250828202610cbc81610989565b91508282048414831517610cd357610cd2610c39565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610d1182610989565b9150610d1c83610989565b925082610d2c57610d2b610cda565b5b828204905092915050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f610d6b600e83610ad2565b9150610d7682610d37565b602082019050919050565b5f6020820190508181035f830152610d9881610d5f565b9050919050565b5f606082019050610db25f8301866109e1565b610dbf60208301856109e1565b610dcc6040830184610992565b94935050505056fea26469706673582212207adaaa4f7501d8d826f7ecd77ad841984f3044b9320f13da50ad971287b9faf864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1A8 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0xFA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP3 SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E SWAP1 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26F PUSH2 0x396 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 PUSH1 0x64 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST DUP3 PUSH1 0x2 SLOAD DUP6 PUSH0 ADD SLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x45C SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x466 SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP3 SWAP2 SWAP1 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x524 PUSH0 PUSH2 0x838 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x55B PUSH2 0x7B1 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x396 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x655 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x710 PUSH2 0x7B1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x780 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x789 DUP2 PUSH2 0x838 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x8F9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7D7 PUSH2 0x52C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x836 JUMPI PUSH2 0x7FA PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x92D DUP3 PUSH2 0x904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93D DUP2 PUSH2 0x923 JUMP JUMPDEST DUP2 EQ PUSH2 0x947 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x958 DUP2 PUSH2 0x934 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x973 JUMPI PUSH2 0x972 PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x980 DUP5 DUP3 DUP6 ADD PUSH2 0x94A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x989 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9B4 PUSH0 DUP4 ADD DUP6 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x9C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DB PUSH0 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9EA DUP2 PUSH2 0x923 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA03 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA12 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP2 EQ PUSH2 0xA1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA2D DUP2 PUSH2 0xA09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA55 DUP5 DUP3 DUP6 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA81 PUSH2 0xA7C PUSH2 0xA77 DUP5 PUSH2 0x904 JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA92 DUP3 PUSH2 0xA67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 DUP3 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB3 DUP2 PUSH2 0xA99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACC PUSH0 DUP4 ADD DUP5 PUSH2 0xAAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E67207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB16 PUSH1 0xE DUP4 PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB21 DUP3 PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB43 DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB5D PUSH0 DUP4 ADD DUP6 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xB6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB71 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA0 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0x900 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665207374616B650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC05 PUSH1 0xF DUP4 PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP3 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC32 DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC70 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7B DUP4 PUSH2 0x989 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0xC39 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA3 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAE DUP4 PUSH2 0x989 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCBC DUP2 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xC39 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD11 DUP3 PUSH2 0x989 JUMP JUMPDEST SWAP2 POP PUSH2 0xD1C DUP4 PUSH2 0x989 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD2C JUMPI PUSH2 0xD2B PUSH2 0xCDA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD6B PUSH1 0xE DUP4 PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP PUSH2 0xD76 DUP3 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD98 DUP2 PUSH2 0xD5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDB2 PUSH0 DUP4 ADD DUP7 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xDBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xDCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xDAAA4F7501D8D826F7ECD77AD841984F3044B9320F13DA50AD9712 DUP8 0xB9 STATICCALL EXTCALL PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "175:1657:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;997:296;;;:::i;:::-;;1301:422;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;248:30:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1731:98:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;605:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;306:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;220:19:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:39;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;997:296::-;1072:1;1044:6;:18;1051:10;1044:18;;;;;;;;;;;;;;;:25;;;:29;1036:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1105:7;:5;:7::i;:::-;1156:14;1173:6;:18;1180:10;1173:18;;;;;;;;;;;;;;;:25;;;1156:42;;1237:1;1209:6;:18;1216:10;1209:18;;;;;;;;;;;;;;;:25;;:29;;;;1251:5;;;;;;;;;;;:14;;;1266:10;1278:6;1251:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1025:268;997:296::o;1301:422::-;1336:23;1362:6;:18;1369:10;1362:18;;;;;;;;;;;;;;;1336:44;;1418:1;1399:9;:16;;;:20;1391:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1452:16;1489:9;:19;;;1471:15;:37;;;;:::i;:::-;1452:56;;1519:14;349:8;1582:3;:22;;;;:::i;:::-;1569:8;1556:10;;1537:9;:16;;;:29;;;;:::i;:::-;:40;;;;:::i;:::-;1536:69;;;;:::i;:::-;1519:86;;1640:15;1618:9;:19;;:37;;;;1681:5;;;;;;;;;;;:14;;;1696:10;1708:6;1681:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1325:398;;;1301:422::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;248:30:3:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1731:98:3:-;1531:13:0;:11;:13::i;:::-;1814:7:3::1;1801:10;:20;;;;1731:98:::0;:::o;605:384::-;673:1;664:6;:10;656:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;817:1;789:6;:18;796:10;789:18;;;;;;;;;;;;;;;:25;;;:29;785:69;;;835:7;:5;:7::i;:::-;785:69;866:5;;;;;;;;;;;:18;;;885:10;905:4;912:6;866:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;951:30;;;;;;;;957:6;951:30;;;;965:15;951:30;;;930:6;:18;937:10;930:18;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;605:384;:::o;306:51::-;349:8;306:51;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;220:19:3:-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:332::-;1504:4;1542:2;1531:9;1527:18;1519:26;;1555:71;1623:1;1612:9;1608:17;1599:6;1555:71;:::i;:::-;1636:72;1704:2;1693:9;1689:18;1680:6;1636:72;:::i;:::-;1383:332;;;;;:::o;1721:222::-;1814:4;1852:2;1841:9;1837:18;1829:26;;1865:71;1933:1;1922:9;1918:17;1909:6;1865:71;:::i;:::-;1721:222;;;;:::o;1949:118::-;2036:24;2054:5;2036:24;:::i;:::-;2031:3;2024:37;1949:118;;:::o;2073:222::-;2166:4;2204:2;2193:9;2189:18;2181:26;;2217:71;2285:1;2274:9;2270:17;2261:6;2217:71;:::i;:::-;2073:222;;;;:::o;2301:122::-;2374:24;2392:5;2374:24;:::i;:::-;2367:5;2364:35;2354:63;;2413:1;2410;2403:12;2354:63;2301:122;:::o;2429:139::-;2475:5;2513:6;2500:20;2491:29;;2529:33;2556:5;2529:33;:::i;:::-;2429:139;;;;:::o;2574:329::-;2633:6;2682:2;2670:9;2661:7;2657:23;2653:32;2650:119;;;2688:79;;:::i;:::-;2650:119;2808:1;2833:53;2878:7;2869:6;2858:9;2854:22;2833:53;:::i;:::-;2823:63;;2779:117;2574:329;;;;:::o;2909:60::-;2937:3;2958:5;2951:12;;2909:60;;;:::o;2975:142::-;3025:9;3058:53;3076:34;3085:24;3103:5;3085:24;:::i;:::-;3076:34;:::i;:::-;3058:53;:::i;:::-;3045:66;;2975:142;;;:::o;3123:126::-;3173:9;3206:37;3237:5;3206:37;:::i;:::-;3193:50;;3123:126;;;:::o;3255:140::-;3319:9;3352:37;3383:5;3352:37;:::i;:::-;3339:50;;3255:140;;;:::o;3401:159::-;3502:51;3547:5;3502:51;:::i;:::-;3497:3;3490:64;3401:159;;:::o;3566:250::-;3673:4;3711:2;3700:9;3696:18;3688:26;;3724:85;3806:1;3795:9;3791:17;3782:6;3724:85;:::i;:::-;3566:250;;;;:::o;3822:169::-;3906:11;3940:6;3935:3;3928:19;3980:4;3975:3;3971:14;3956:29;;3822:169;;;;:::o;3997:164::-;4137:16;4133:1;4125:6;4121:14;4114:40;3997:164;:::o;4167:366::-;4309:3;4330:67;4394:2;4389:3;4330:67;:::i;:::-;4323:74;;4406:93;4495:3;4406:93;:::i;:::-;4524:2;4519:3;4515:12;4508:19;;4167:366;;;:::o;4539:419::-;4705:4;4743:2;4732:9;4728:18;4720:26;;4792:9;4786:4;4782:20;4778:1;4767:9;4763:17;4756:47;4820:131;4946:4;4820:131;:::i;:::-;4812:139;;4539:419;;;:::o;4964:332::-;5085:4;5123:2;5112:9;5108:18;5100:26;;5136:71;5204:1;5193:9;5189:17;5180:6;5136:71;:::i;:::-;5217:72;5285:2;5274:9;5270:18;5261:6;5217:72;:::i;:::-;4964:332;;;;;:::o;5302:90::-;5336:7;5379:5;5372:13;5365:21;5354:32;;5302:90;;;:::o;5398:116::-;5468:21;5483:5;5468:21;:::i;:::-;5461:5;5458:32;5448:60;;5504:1;5501;5494:12;5448:60;5398:116;:::o;5520:137::-;5574:5;5605:6;5599:13;5590:22;;5621:30;5645:5;5621:30;:::i;:::-;5520:137;;;;:::o;5663:345::-;5730:6;5779:2;5767:9;5758:7;5754:23;5750:32;5747:119;;;5785:79;;:::i;:::-;5747:119;5905:1;5930:61;5983:7;5974:6;5963:9;5959:22;5930:61;:::i;:::-;5920:71;;5876:125;5663:345;;;;:::o;6014:165::-;6154:17;6150:1;6142:6;6138:14;6131:41;6014:165;:::o;6185:366::-;6327:3;6348:67;6412:2;6407:3;6348:67;:::i;:::-;6341:74;;6424:93;6513:3;6424:93;:::i;:::-;6542:2;6537:3;6533:12;6526:19;;6185:366;;;:::o;6557:419::-;6723:4;6761:2;6750:9;6746:18;6738:26;;6810:9;6804:4;6800:20;6796:1;6785:9;6781:17;6774:47;6838:131;6964:4;6838:131;:::i;:::-;6830:139;;6557:419;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:194;7208:4;7228:20;7246:1;7228:20;:::i;:::-;7223:25;;7262:20;7280:1;7262:20;:::i;:::-;7257:25;;7306:1;7303;7299:9;7291:17;;7330:1;7324:4;7321:11;7318:37;;;7335:18;;:::i;:::-;7318:37;7168:194;;;;:::o;7368:410::-;7408:7;7431:20;7449:1;7431:20;:::i;:::-;7426:25;;7465:20;7483:1;7465:20;:::i;:::-;7460:25;;7520:1;7517;7513:9;7542:30;7560:11;7542:30;:::i;:::-;7531:41;;7721:1;7712:7;7708:15;7705:1;7702:22;7682:1;7675:9;7655:83;7632:139;;7751:18;;:::i;:::-;7632:139;7416:362;7368:410;;;;:::o;7784:180::-;7832:77;7829:1;7822:88;7929:4;7926:1;7919:15;7953:4;7950:1;7943:15;7970:185;8010:1;8027:20;8045:1;8027:20;:::i;:::-;8022:25;;8061:20;8079:1;8061:20;:::i;:::-;8056:25;;8100:1;8090:35;;8105:18;;:::i;:::-;8090:35;8147:1;8144;8140:9;8135:14;;7970:185;;;;:::o;8161:164::-;8301:16;8297:1;8289:6;8285:14;8278:40;8161:164;:::o;8331:366::-;8473:3;8494:67;8558:2;8553:3;8494:67;:::i;:::-;8487:74;;8570:93;8659:3;8570:93;:::i;:::-;8688:2;8683:3;8679:12;8672:19;;8331:366;;;:::o;8703:419::-;8869:4;8907:2;8896:9;8892:18;8884:26;;8956:9;8950:4;8946:20;8942:1;8931:9;8927:17;8920:47;8984:131;9110:4;8984:131;:::i;:::-;8976:139;;8703:419;;;:::o;9128:442::-;9277:4;9315:2;9304:9;9300:18;9292:26;;9328:71;9396:1;9385:9;9381:17;9372:6;9328:71;:::i;:::-;9409:72;9477:2;9466:9;9462:18;9453:6;9409:72;:::i;:::-;9491;9559:2;9548:9;9544:18;9535:6;9491:72;:::i;:::-;9128:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "718800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"SECONDS_PER_YEAR()": "391",
								"claim()": "infinite",
								"owner()": "2514",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2514",
								"setRewardRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakes(address)": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "infinite",
								"unstake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 1832,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 276,
									"end": 278,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 248,
									"end": 278,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 248,
									"end": 278,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 496,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 496,
									"end": 597,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 538,
									"end": 548,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 576,
									"end": 588,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 561,
									"end": 566,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 561,
									"end": 566,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 561,
									"end": 589,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 496,
									"end": 597,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1832,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207adaaa4f7501d8d826f7ecd77ad841984f3044b9320f13da50ad971287b9faf864736f6c634300081e0033",
									".code": [
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "9E447FC6"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "A694FC3A"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "E6A69AB8"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "FC0C546A"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "16934FC4"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "2DEF6620"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "4E71D92D"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "7B0A47EE"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1832,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 448,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 448,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 997,
											"end": 1293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1301,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 248,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 248,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1731,
											"end": 1829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1731,
											"end": 1829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 605,
											"end": 989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 605,
											"end": 989,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 989,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 605,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 605,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 605,
											"end": 989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 306,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 306,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 220,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 220,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 448,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 997,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1061,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1069,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1069,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1105,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1198,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1238,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1266,
											"end": 1276,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1251,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1251,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1301,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1379,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1415,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1391,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1508,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1489,
											"end": 1508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1508,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1486,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1471,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "1E13380"
										},
										{
											"begin": 1582,
											"end": 1585,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1582,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1566,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1556,
											"end": 1566,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1553,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1537,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1537,
											"end": 1577,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1577,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1537,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1577,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1537,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1536,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1536,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1536,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1637,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1618,
											"end": 1637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1695,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1696,
											"end": 1706,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1681,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1681,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 248,
											"end": 278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 248,
											"end": 278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1821,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1801,
											"end": 1821,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1821,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1821,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 605,
											"end": 989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 664,
											"end": 674,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 656,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 656,
											"end": 693,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 795,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 806,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 789,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 814,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 818,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 785,
											"end": 854,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 785,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 785,
											"end": 854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 835,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 835,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 835,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 785,
											"end": 854,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 785,
											"end": 854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 866,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 871,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 866,
											"end": 871,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 871,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 866,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 884,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 884,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 905,
											"end": 909,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 912,
											"end": 918,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 866,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 866,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 866,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 965,
											"end": 980,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 951,
											"end": 981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 930,
											"end": 936,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 930,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 947,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 930,
											"end": 948,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 930,
											"end": 948,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 948,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 605,
											"end": 989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 349,
											"end": 357,
											"name": "PUSH",
											"source": 3,
											"value": "1E13380"
										},
										{
											"begin": 306,
											"end": 357,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 306,
											"end": 357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 239,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 220,
											"end": 239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1555,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1636,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1943,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1721,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1850,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1865,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1936,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1865,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2217,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2423,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2301,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2392,
											"end": 2397,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2374,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2399,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2415,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2520,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2529,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 2680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2685,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2688,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2878,
											"end": 2885,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2833,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2963,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 2963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 2963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3103,
											"end": 3108,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3085,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3076,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3058,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3206,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3383,
											"end": 3388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3352,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3547,
											"end": 3552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3502,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3724,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 3938,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 3985,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4161,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3997,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4153,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7468696E67207374616B6564000000000000000000000000000000000000"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4154,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4533,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4167,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4394,
											"end": 4396,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 4389,
											"end": 4392,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4330,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4397,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4330,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4495,
											"end": 4498,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4406,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4499,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4406,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4958,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4539,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 4746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 4790,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4802,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4756,
											"end": 4803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4820,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4951,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4820,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 4951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 4951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4958,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5296,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4964,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5121,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5136,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5283,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5217,
											"end": 5289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5289,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5217,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5296,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5296,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5392,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5302,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5385,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5386,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5392,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5392,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5514,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5398,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5483,
											"end": 5488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5468,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5461,
											"end": 5466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5490,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5448,
											"end": 5508,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5505,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5506,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5508,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5448,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5657,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5520,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5574,
											"end": 5579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5605,
											"end": 5611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5599,
											"end": 5612,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5621,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5621,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5657,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 6008,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5663,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5781,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5750,
											"end": 5782,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5747,
											"end": 5866,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5747,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5747,
											"end": 5866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5785,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5785,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5785,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5785,
											"end": 5864,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5785,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5747,
											"end": 5866,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5747,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5983,
											"end": 5990,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 5981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5930,
											"end": 5991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5991,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5930,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 5991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 5991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5876,
											"end": 6001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 6008,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 6008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 6008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 6008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 6008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6179,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6014,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6154,
											"end": 6171,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F20616374697665207374616B650000000000000000000000000000000000"
										},
										{
											"begin": 6150,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6152,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6172,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6551,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6185,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6327,
											"end": 6330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 6412,
											"end": 6414,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 6407,
											"end": 6410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6348,
											"end": 6415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6513,
											"end": 6516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6424,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6424,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6542,
											"end": 6544,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6537,
											"end": 6540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6976,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6557,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6723,
											"end": 6727,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6763,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6738,
											"end": 6764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6738,
											"end": 6764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6804,
											"end": 6808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6820,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6794,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6781,
											"end": 6798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6774,
											"end": 6821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6838,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6838,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6838,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6838,
											"end": 6969,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 6838,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6976,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6982,
											"end": 7162,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6982,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7030,
											"end": 7107,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7117,
											"end": 7132,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7155,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7156,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7362,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 7168,
											"end": 7362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7212,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7246,
											"end": 7247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7228,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7228,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7228,
											"end": 7248,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7228,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7223,
											"end": 7248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7223,
											"end": 7248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7280,
											"end": 7281,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7262,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7282,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7332,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7318,
											"end": 7355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7318,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7318,
											"end": 7355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7335,
											"end": 7353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7318,
											"end": 7355,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7318,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7168,
											"end": 7362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7778,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 7368,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7408,
											"end": 7415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7449,
											"end": 7450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7431,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7431,
											"end": 7451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7431,
											"end": 7451,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7431,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7465,
											"end": 7485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7460,
											"end": 7485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7517,
											"end": 7518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7522,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7560,
											"end": 7571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7542,
											"end": 7572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7572,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7542,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7531,
											"end": 7572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7531,
											"end": 7572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7708,
											"end": 7723,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7705,
											"end": 7706,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7724,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7682,
											"end": 7683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7738,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7632,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7632,
											"end": 7771,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7751,
											"end": 7769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7632,
											"end": 7771,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7632,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7416,
											"end": 7778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7778,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7778,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7964,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 7784,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 7909,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7829,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7929,
											"end": 7933,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 7926,
											"end": 7927,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7919,
											"end": 7934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7950,
											"end": 7951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7943,
											"end": 7958,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8155,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 7970,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8010,
											"end": 8011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8045,
											"end": 8046,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8027,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8027,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8027,
											"end": 8047,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8027,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8022,
											"end": 8047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8022,
											"end": 8047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8079,
											"end": 8080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8061,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8081,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8061,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8056,
											"end": 8081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8056,
											"end": 8081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8090,
											"end": 8125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 8105,
											"end": 8123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8125,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8090,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 8148,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8144,
											"end": 8145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8140,
											"end": 8149,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8155,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8155,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8325,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 8161,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8301,
											"end": 8317,
											"name": "PUSH",
											"source": 4,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8278,
											"end": 8318,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8697,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 8331,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8494,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 8558,
											"end": 8560,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 8553,
											"end": 8556,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8494,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 8494,
											"end": 8561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8494,
											"end": 8561,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 8494,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8487,
											"end": 8561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8487,
											"end": 8561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8659,
											"end": 8662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 8570,
											"end": 8663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8570,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8688,
											"end": 8690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 8691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8672,
											"end": 8691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8672,
											"end": 8691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 9122,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8703,
											"end": 9122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8907,
											"end": 8909,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8896,
											"end": 8905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8884,
											"end": 8910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8884,
											"end": 8910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8950,
											"end": 8954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8946,
											"end": 8966,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 8967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8984,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 9110,
											"end": 9114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8984,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 8984,
											"end": 9115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8984,
											"end": 9115,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 8984,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 9115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 9122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 9122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 9122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 9122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9317,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9304,
											"end": 9313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9385,
											"end": 9394,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9381,
											"end": 9398,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9372,
											"end": 9378,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9328,
											"end": 9399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9328,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9409,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9477,
											"end": 9479,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9466,
											"end": 9475,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9459,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9409,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9409,
											"end": 9481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9409,
											"end": 9481,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9409,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9491,
											"end": 9563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9557,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9491,
											"end": 9563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 9491,
											"end": 9563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9491,
											"end": 9563,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9491,
											"end": 9563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"SuperBoInuStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"SECONDS_PER_YEAR()": "e6a69ab8",
							"claim()": "4e71d92d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"setRewardRate(uint256)": "9e447fc6",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SECONDS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SuperBoInuStaking.sol\":\"SuperBoInuStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"SuperBoInuStaking.sol\":{\"keccak256\":\"0x734ead7fcc32e799103ad12314946d0dc4ee24bd3994dea9f616bb782cf6a0a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b7a80834c7c906cca5ca656c0fb557048aa9aceb40d464fa2ccf7ed80acc4ca\",\"dweb:/ipfs/QmPZkMf7jMThNkeTTwyGkFeFoX6hUvRSbC4z2dXH9zq2mH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "SuperBoInuStaking.sol:SuperBoInuStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 264,
								"contract": "SuperBoInuStaking.sol:SuperBoInuStaking",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 267,
								"contract": "SuperBoInuStaking.sol:SuperBoInuStaking",
								"label": "rewardRate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "SuperBoInuStaking.sol:SuperBoInuStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Stake)275_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)275_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SuperBoInuStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)275_storage"
							},
							"t_struct(Stake)275_storage": {
								"encoding": "inplace",
								"label": "struct SuperBoInuStaking.Stake",
								"members": [
									{
										"astId": 272,
										"contract": "SuperBoInuStaking.sol:SuperBoInuStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 274,
										"contract": "SuperBoInuStaking.sol:SuperBoInuStaking",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "215:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "397:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "406:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "428:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "448:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:1"
									},
									"src": "391:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "628:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "637:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "660:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "685:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:1"
									},
									"src": "622:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "822:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:1"
									},
									"scope": 225,
									"src": "776:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "972:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:1"
									},
									"scope": 225,
									"src": "913:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1223:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1235:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:1"
									},
									"scope": 225,
									"src": "1205:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1568:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1583:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1623:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:1"
									},
									"scope": 225,
									"src": "1549:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2327:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2377:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:1"
									},
									"scope": 225,
									"src": "2310:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2713:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2727:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2739:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2772:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:1"
									},
									"scope": 225,
									"src": "2691:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "205:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2675:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"SuperBoInuStaking.sol": {
				"ast": {
					"absolutePath": "SuperBoInuStaking.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"SuperBoInuStaking": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 226,
							"src": "61:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 148,
							"src": "119:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"205:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "205:7:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "205:7:3"
								}
							],
							"canonicalName": "SuperBoInuStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457,
								147,
								255
							],
							"name": "SuperBoInuStaking",
							"nameLocation": "184:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 264,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "234:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "220:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 262,
											"name": "IERC20",
											"nameLocations": [
												"220:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "220:6:3"
										},
										"referencedDeclaration": 225,
										"src": "220:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 267,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "263:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "248:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "276:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e6a69ab8",
									"id": 270,
									"mutability": "constant",
									"name": "SECONDS_PER_YEAR",
									"nameLocation": "330:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "306:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "349:8:3",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SuperBoInuStaking.Stake",
									"id": 275,
									"members": [
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "398:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 275,
											"src": "390:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 271,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "390:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "423:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 275,
											"src": "415:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 273,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "415:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "373:5:3",
									"nodeType": "StructDefinition",
									"scope": 457,
									"src": "366:74:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 280,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "481:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "448:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
										"typeString": "mapping(address => struct SuperBoInuStaking.Stake)"
									},
									"typeName": {
										"id": 279,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "456:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "448:25:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
											"typeString": "mapping(address => struct SuperBoInuStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 278,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 277,
												"name": "Stake",
												"nameLocations": [
													"467:5:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 275,
												"src": "467:5:3"
											},
											"referencedDeclaration": 275,
											"src": "467:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$275_storage_ptr",
												"typeString": "struct SuperBoInuStaking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "550:47:3",
										"statements": [
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 289,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "561:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 291,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "576:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 290,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "569:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "569:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "561:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "561:28:3"
											}
										]
									},
									"id": 296,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 285,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "538:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "542:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "538:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 287,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 284,
												"name": "Ownable",
												"nameLocations": [
													"530:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "530:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "530:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "516:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "508:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:22:3"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:3"
									},
									"scope": 457,
									"src": "496:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "645:344:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "664:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "673:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "664:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "676:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "656:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "656:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "656:37:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 308,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "789:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
																	"typeString": "mapping(address => struct SuperBoInuStaking.Stake storage ref)"
																}
															},
															"id": 311,
															"indexExpression": {
																"expression": {
																	"id": 309,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "796:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "800:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "796:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "789:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$275_storage",
																"typeString": "struct SuperBoInuStaking.Stake storage ref"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "808:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "789:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "817:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "789:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "IfStatement",
												"src": "785:69:3",
												"trueBody": {
													"id": 318,
													"nodeType": "Block",
													"src": "820:34:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 315,
																	"name": "claim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "835:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "835:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "835:7:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "885:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "889:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "885:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 327,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "905:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SuperBoInuStaking_$457",
																		"typeString": "contract SuperBoInuStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SuperBoInuStaking_$457",
																		"typeString": "contract SuperBoInuStaking"
																	}
																],
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "897:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 325,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "897:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "897:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "912:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 320,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "866:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "872:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "866:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "866:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "866:53:3"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 332,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
																"typeString": "mapping(address => struct SuperBoInuStaking.Stake storage ref)"
															}
														},
														"id": 335,
														"indexExpression": {
															"expression": {
																"id": 333,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "937:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "941:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "937:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "930:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$275_storage",
															"typeString": "struct SuperBoInuStaking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 337,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "957:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 338,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "965:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "971:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "965:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 336,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "951:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$275_storage_ptr_$",
																"typeString": "type(struct SuperBoInuStaking.Stake storage pointer)"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "951:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$275_memory_ptr",
															"typeString": "struct SuperBoInuStaking.Stake memory"
														}
													},
													"src": "930:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$275_storage",
														"typeString": "struct SuperBoInuStaking.Stake storage ref"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "930:51:3"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "614:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "628:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "620:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:16:3"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:3"
									},
									"scope": 457,
									"src": "605:384:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1025:268:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 348,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "1044:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
																			"typeString": "mapping(address => struct SuperBoInuStaking.Stake storage ref)"
																		}
																	},
																	"id": 351,
																	"indexExpression": {
																		"expression": {
																			"id": 349,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1051:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1055:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1051:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1044:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$275_storage",
																		"typeString": "struct SuperBoInuStaking.Stake storage ref"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1063:6:3",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 272,
																"src": "1044:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1072:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1044:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e67207374616b6564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1075:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828",
																"typeString": "literal_string \"Nothing staked\""
															},
															"value": "Nothing staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96cba008b1556051e9f9dee22a0dd517de15788896aa1a56faa084a51cc9a828",
																"typeString": "literal_string \"Nothing staked\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1036:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "1036:56:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 358,
														"name": "claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1105:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:7:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "1105:7:3"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1164:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "1156:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 363,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "1173:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
																"typeString": "mapping(address => struct SuperBoInuStaking.Stake storage ref)"
															}
														},
														"id": 366,
														"indexExpression": {
															"expression": {
																"id": 364,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1180:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1184:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1180:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1173:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$275_storage",
															"typeString": "struct SuperBoInuStaking.Stake storage ref"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1192:6:3",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 272,
													"src": "1173:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1156:42:3"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 369,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "1209:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
																	"typeString": "mapping(address => struct SuperBoInuStaking.Stake storage ref)"
																}
															},
															"id": 372,
															"indexExpression": {
																"expression": {
																	"id": 370,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1216:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1220:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1216:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1209:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$275_storage",
																"typeString": "struct SuperBoInuStaking.Stake storage ref"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1228:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "1209:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1237:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1209:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1209:29:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 380,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1266:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1270:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1266:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1278:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 377,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1251:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1257:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "1251:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1251:34:3"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1006:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:3"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:3"
									},
									"scope": 457,
									"src": "997:296:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1325:398:3",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "1350:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "1336:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$275_storage_ptr",
															"typeString": "struct SuperBoInuStaking.Stake"
														},
														"typeName": {
															"id": 390,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 389,
																"name": "Stake",
																"nameLocations": [
																	"1336:5:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 275,
																"src": "1336:5:3"
															},
															"referencedDeclaration": 275,
															"src": "1336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$275_storage_ptr",
																"typeString": "struct SuperBoInuStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 396,
												"initialValue": {
													"baseExpression": {
														"id": 392,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "1362:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$275_storage_$",
															"typeString": "mapping(address => struct SuperBoInuStaking.Stake storage ref)"
														}
													},
													"id": 395,
													"indexExpression": {
														"expression": {
															"id": 393,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1369:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1373:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1369:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1362:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$275_storage",
														"typeString": "struct SuperBoInuStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1336:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 398,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "1399:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$275_storage_ptr",
																		"typeString": "struct SuperBoInuStaking.Stake storage pointer"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1409:6:3",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 272,
																"src": "1399:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1418:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1399:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665207374616b65",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1421:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															},
															"value": "No active stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1391:48:3"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "1460:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "1452:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1452:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 407,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1471:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1477:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1471:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 409,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1489:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$275_storage_ptr",
																"typeString": "struct SuperBoInuStaking.Stake storage pointer"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1499:9:3",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 274,
														"src": "1489:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1471:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1452:56:3"
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1527:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "1519:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1519:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 415,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "1537:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$275_storage_ptr",
																				"typeString": "struct SuperBoInuStaking.Stake storage pointer"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1547:6:3",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 272,
																		"src": "1537:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 417,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "1556:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1537:29:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 419,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1569:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1537:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 421,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1536:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1582:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 423,
																	"name": "SECONDS_PER_YEAR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "1588:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1582:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 425,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1581:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1536:69:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1519:86:3"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 428,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1618:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$275_storage_ptr",
																"typeString": "struct SuperBoInuStaking.Stake storage pointer"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1628:9:3",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 274,
														"src": "1618:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 431,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1640:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1646:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1640:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1618:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1618:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1696:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1700:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1696:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "1708:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 435,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1681:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1687:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "1681:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1681:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1681:34:3"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "1310:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1315:2:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:0:3"
									},
									"scope": 457,
									"src": "1301:422:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "1790:39:3",
										"statements": [
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "1801:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 452,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "1814:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1801:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "1801:20:3"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 448,
												"name": "onlyOwner",
												"nameLocations": [
													"1780:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1780:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1780:9:3"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "1740:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "1762:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1754:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:17:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1790:0:3"
									},
									"scope": 457,
									"src": "1731:98:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 458,
							"src": "175:1657:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:1799:3"
				},
				"id": 3
			}
		}
	}
}